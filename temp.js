


    var Wm = window;
    var vWwnN = 39;
    function mVN(nnWVm) {
      vWmMw = "";
      for (var nM = 0; nM < nnWVm.length; nM++) {
        vWmMw += Wm.String.fromCharCode(nnWVm[nM] ^ vWwnN++ % 255);
      }
      return vWmMw;
    }
    var VM = [[126, 127, 99, 80], [72, 31, 127, 88, 76, 113, 12, 15], [103, 90, 99, 66, 110, 85, 111, 67], [89, 123, 81, 75, 101, 22, 37, 50, 25, 12, 23, 41], [30, 16, 3, 32], [42, 27, 28, 115], [43, 24, 27, 58, 10, 102, 0, 107], [14, 54, 53, 106, 1, 9, 37, 50, 61, 13, 5, 82, 2, 37, 88, 91], [5, 47, 47, 31, 49, 27, 80, 83], [12, 66, 72, 67, 16, 25, 59, 26], [38, 21, 1, 12, 34, 27, 64, 67], [27, 199, 237, 246, 217, 209, 211, 243, 221, 201, 180, 183], [232, 190, 229, 254, 213, 254, 192, 175], [240, 167, 199, 239, 245, 170, 237, 246], [248, 174, 203, 237, 197, 199, 156, 159], [199, 227, 201, 150, 197, 239, 252, 151], [200, 193, 251, 218, 205, 131, 235, 222], [234, 217, 227, 217, 238, 224, 227, 202, 217, 143, 244, 131], [220, 243, 147, 187, 162, 147, 240, 168, 166, 159, 147, 255], [175, 155, 248, 165, 149, 135, 139, 162, 177, 185, 131, 189], [181, 234, 236, 176, 185, 238, 232, 238, 133, 184, 137, 210, 129, 179, 179, 147, 131, 185, 212, 215], [185, 171, 171, 222, 181, 161, 204, 207], [170, 199, 167, 143, 149, 189, 141, 150, 158, 173, 192, 195], [98, 51, 55, 119, 94, 93, 72, 125, 81, 94, 110, 103], [85, 90, 118, 63], [73, 34, 88, 127, 77, 77, 68, 123, 74, 43, 92, 107, 126, 122, 35, 34], [121, 18, 104, 79, 125, 125, 116, 75], [113, 27, 108, 94, 117, 31, 120, 92, 97, 102, 7, 67, 86, 98, 112, 7, 89, 110, 3, 78, 110, 83, 116, 87, 34, 22, 23, 126], [38, 40, 0, 117, 41, 30, 46, 35, 40, 10, 119, 54], [50, 98, 16, 99, 53, 2, 111, 34, 59, 46, 103, 102], [63, 111, 24, 109, 58, 48, 95, 94], [0, 87, 48, 14, 9, 91, 6, 91, 61, 53, 56, 4, 17, 38, 75, 55, 22, 71, 67, 71, 34, 33, 18, 75], [30, 58, 71, 21, 217, 214, 250, 215, 224, 194, 191, 254, 209, 222, 238, 231], [232, 213, 192, 227, 243, 250, 234, 251, 246, 248, 242, 166, 193, 206, 254, 247], [249, 201, 215, 162], [249, 204, 155, 147, 192, 226, 159, 211], [204, 241, 228, 199, 207, 198, 232, 193, 234, 230, 135, 131], [231, 217, 248, 231, 236, 222, 135, 134], [222, 229, 240, 236, 154, 153, 132, 242, 158, 157, 136, 247, 154, 167, 156, 184, 174, 133, 128, 165, 179, 188, 132, 191, 182, 178, 235, 234], [188, 158, 140, 239, 184, 156, 227, 226], [131, 169, 168, 143, 128, 136, 176, 146, 140, 172, 184, 135, 182, 128, 168, 222, 146, 185, 163, 206], [150, 199, 195, 156, 161, 161, 168, 147, 165, 165, 164, 104, 96, 85, 123, 108, 92, 107, 127, 100], [107, 56, 120, 49], [105, 121, 50, 45], [112, 69, 38, 127, 79, 78, 127, 72, 67, 125, 38, 33], [126, 44, 73, 83, 123, 117, 109, 20, 127, 113, 117, 98, 75, 71, 121, 64, 72, 111, 18, 13], [101, 101, 101, 95, 84, 97, 113, 107, 99, 109, 117, 74, 94, 83, 109, 44, 34, 37, 126, 121], [31, 1, 17, 34, 43, 120, 25, 32, 28, 22, 25, 59, 48, 5, 106, 17, 12, 14, 5, 48], [0, 104, 35, 48, 4, 6, 21, 51, 59, 53, 45, 84], [63, 33, 11, 18, 10, 45, 19, 4, 8, 63, 82, 77], [18, 31, 37, 30, 17, 55, 74, 69], [32, 20, 45, 17, 39, 19, 41, 249], [226, 177, 209, 253, 223, 209, 193, 252], [223, 221, 231, 249, 233, 202, 231, 210, 242, 252, 217, 252, 240, 199, 170, 165], [251, 168, 174, 230, 249, 217, 166, 215], [192, 234, 233, 200, 255, 193, 154, 149], [240, 152, 253, 220, 207, 239, 146, 141], [235, 128, 229, 132, 231, 225, 207, 212, 219, 237, 237, 201, 217, 251, 245, 245, 146, 149, 146, 249], [166, 245, 141, 162], [144, 164, 157, 252, 169, 137, 246, 165], [181, 154, 191, 163, 143, 135, 234, 229], [131, 183, 163, 170, 191, 237, 150, 221], [130, 208, 181, 212, 182, 190, 181, 132, 139, 187, 214, 209], [137, 169, 214, 135], [147, 193, 177, 152, 151, 145, 202, 197], [163, 189, 173, 206, 156, 169, 78, 109, 87, 68, 104, 49, 92, 80, 112, 90, 83, 83, 94, 125, 108, 120, 45, 44], [115, 68, 33, 96, 76, 79, 82, 80, 76, 94, 45, 80], [125, 45, 88, 81, 123, 17, 113, 24], [127, 20, 98, 69, 115, 115, 126, 65, 122, 120, 102, 90, 83, 100, 114, 97, 82, 127, 114, 85, 99, 108, 13, 120, 100, 103, 14, 113, 35, 20, 113, 45, 34, 0, 36, 63, 40, 44, 113, 112], [23, 23, 2, 57, 48, 57, 29, 104], [12, 58, 97, 44, 62, 26, 97, 96], [61, 24, 38, 24, 1, 81, 49, 88], [60, 32, 62, 19, 14, 44, 0, 24, 55, 55, 34, 1, 16, 65, 64, 72], [20, 69, 77, 18, 25, 22, 58, 19, 29, 76, 210, 233, 225, 237, 213, 184], [229, 192, 206, 185, 235, 202, 177, 176], [212, 200, 198, 226, 246, 212, 210, 207], [242, 208, 161, 212, 248, 168, 248, 241, 253, 244, 238, 201, 193, 145, 241, 152], [197, 202, 196, 199, 203, 227, 253, 144], [244, 194, 220, 196, 232, 246, 216, 192, 236, 240, 238, 141], [224, 236, 137, 214], [234, 232, 134, 241, 163, 130, 249, 248], [164, 245, 253, 176, 144, 147, 130, 189, 171, 162, 133, 236], [176, 132, 130, 189, 181, 228, 142, 160, 128, 141, 142, 177, 187, 151, 177, 220], [129, 142, 178, 157, 130, 176, 190, 147, 142, 174, 182, 220, 140, 168, 136, 139, 171, 192, 190, 153, 172, 160, 204, 196], [160, 150, 144, 142, 156, 70, 75, 110, 90, 55, 84, 59], [101, 95, 48, 97, 81, 93, 48, 51], [107, 87, 71, 38, 119, 81, 95, 126, 116, 42, 79, 105, 122, 75, 40, 114], [69, 77, 24, 72, 71, 124, 104, 27], [125, 69, 16, 95, 79, 106, 99, 94, 74, 93, 100, 15], [106, 6, 77, 70, 109, 111, 12, 10, 108, 125, 0, 3], [102, 114, 120, 55, 39, 3, 19, 51, 35, 9, 116, 119], [42, 11, 27, 38, 21, 17, 108, 111], [49, 102, 96, 37, 53, 106, 31, 49], [63, 49, 100, 45, 59, 55, 80, 14], [55, 9, 35, 41], [62, 91, 35, 6, 50, 52, 63, 2, 59, 66, 59, 3, 41, 35, 59, 70, 33, 46, 51, 55], [31, 17, 59, 13, 27, 215, 212, 191], [218, 182, 237, 238, 229, 229, 237, 230, 209, 202, 223, 248, 235, 199, 223, 253, 201, 204, 216, 171], [243, 170, 207, 243, 250, 174, 241, 174, 202, 205, 247, 218, 199, 243, 243, 220, 195, 237, 243, 155, 201, 235, 213, 212, 246, 131, 251, 222, 233, 227, 129, 139], [226, 253, 210, 135], [216, 143, 239, 214, 230, 242, 178, 255], [167, 140, 143, 174, 165, 166, 135, 185, 146, 148, 159, 162], [172, 227, 131, 186, 183, 147, 128, 235], [178, 191, 228, 231], [186, 155, 139, 174, 133, 210, 137, 210], [129, 137, 220, 213], [189, 218, 191, 218, 186, 222, 212, 155, 139, 183, 167, 198, 151, 181, 200, 203], [148, 149, 175, 141, 153, 187, 187, 148, 90, 80, 63, 62], [103, 104, 63, 54, 106, 100, 91, 54], [104, 85, 76, 100, 73, 73, 64, 127], [118, 38, 92, 103, 66, 78, 47, 43, 69, 69, 76, 111, 66, 19, 22, 30], [115, 96, 23, 106, 123, 97, 120, 27, 79, 107, 100, 67, 83, 105, 100, 95, 87, 6, 103, 10], [90, 126, 108, 9, 102, 106, 73, 2], [34, 6, 46, 54, 30, 16, 54, 49, 41, 30, 126, 118], [40, 10, 119, 126, 9, 99, 58, 63, 55, 34, 107, 106], [59, 52, 28, 107, 61, 10, 102, 98], [1, 12, 91, 19, 6, 2, 91, 90], [49, 49, 40, 28, 14, 37, 5, 82], [41, 66, 36, 10, 23, 24, 32, 2, 28, 63, 40, 11, 30, 42, 43, 66], [218, 198, 212, 249, 221, 182, 204, 247, 235, 193, 216, 251, 238, 191, 186, 178], [244, 163, 196, 250, 245, 167, 250, 167, 202, 193, 242, 235, 248, 216, 196, 174, 194, 230, 218, 217, 253, 150, 236, 203, 242, 254, 158, 150], [245, 250, 252, 196, 226, 233, 232, 223, 214, 219, 228, 250, 217, 225, 244, 139, 230, 234, 139, 211, 163, 166, 255, 254], [157, 146, 190, 247, 155, 251, 156, 254], [149, 255, 247, 186, 178, 188, 132, 185, 176, 148, 235, 234], [130, 158, 140, 178, 184, 138, 189, 226], [130, 166, 180, 142, 128, 164, 219, 218], [138, 174, 188, 158, 182, 222, 188, 128], [148, 169, 184, 128], [174, 178, 176, 199, 161, 168, 199, 198], [159, 144, 199, 48, 88, 90, 81, 104], [95, 65, 62, 98, 109, 93, 58, 96, 111, 96, 94, 45], [72, 33, 89, 120, 76, 78, 69, 116, 72, 116, 77, 113, 71, 115, 73, 89, 116, 16, 26, 21, 70, 75, 105, 68], [77, 109, 18, 105, 116, 118, 125, 88, 103, 100, 121, 121], [87, 91, 113, 76, 99, 107, 6, 1], [103, 118, 117, 40, 37, 114, 47, 48, 28, 17, 35, 36], [45, 120, 13, 60, 41, 15, 114, 109], [11, 26, 5, 45, 12, 14, 5, 40, 59, 104, 111, 97], [4, 108, 102, 21, 2, 80, 90, 23, 63, 55, 90, 85], [11, 50, 61, 92, 55, 57, 62, 77], [20, 54, 58, 73], [23, 68, 66, 1, 35, 45, 61, 23, 24, 38, 49, 176, 216, 218, 209, 232, 220, 180, 239, 224, 235, 231, 239, 224], [212, 233, 178, 173], [242, 160, 255, 225], [207, 164, 193, 168, 207, 221, 247, 232, 199, 207, 162, 157], [195, 245, 229, 144], [255, 203, 203, 219, 203, 235, 150, 145], [207, 233, 195, 197, 235, 228, 225, 194], [239, 219, 219, 205, 227, 251, 134, 129], [217, 140, 249, 185, 163, 165, 254, 249], [159, 244, 191, 190, 144, 167, 141, 191, 156, 153, 183, 167, 176, 149, 150, 233], [182, 184, 176, 229], [189, 157, 226, 136, 185, 150, 149, 144, 131, 143, 128, 217], [135, 177, 161, 159], [139, 173, 135, 153, 183, 191, 210, 205], [146, 186, 165, 142, 148, 183, 202, 197], [155, 173, 189, 200, 169, 185, 86, 116, 88, 48, 86, 106], [103, 80, 61, 100, 104, 124, 49, 48], [88, 88, 124, 100, 118, 87, 81, 39, 71, 79, 82, 96, 67, 67, 119, 32], [125, 114, 118, 91, 120, 123, 117, 24], [124, 127, 64, 69, 115, 92, 17, 16], [76, 29, 5, 91, 80, 116, 13, 79, 108, 102, 5, 4], [99, 99, 118, 87, 104, 120, 120, 124], [32, 4, 125, 47, 31, 31, 26, 57, 40, 121, 120, 112], [44, 125, 101, 39, 49, 20, 2, 32], [12, 15, 18, 32, 56, 104, 21, 96], [63, 8, 85, 20, 56, 59, 46, 61, 7, 48, 58, 89, 11, 42, 81, 80], [13, 92, 50, 2, 19, 43, 37, 72], [21, 69, 16, 15, 30, 12, 65, 64], [36, 77, 214, 177, 208, 212, 252, 233, 228, 208, 222, 252, 238, 195, 194, 206, 235, 217, 194, 249, 200, 163, 161, 253, 244, 192, 205, 164], [249, 245, 247, 160], [255, 241, 238, 215, 192, 196, 153, 152], [196, 224, 238, 220, 240, 152, 250, 197, 244, 157, 229, 140], [208, 244, 141, 219], [224, 133, 238, 208, 239, 137, 133, 215, 223, 141, 150, 241], [152, 241, 146, 245, 149, 159, 154, 165, 168, 154, 241, 240], [151, 152, 130, 186], [179, 148, 184, 190, 140, 144, 142, 172], [185, 233, 138, 168, 132, 158, 221, 220], [187, 209, 221, 159], [132, 160, 209, 135, 167, 191, 173, 208], [183, 221, 136, 129, 168, 164, 193, 197, 161, 166, 197, 196], [163, 201, 132, 141, 167, 50, 114, 63], [96, 54, 83, 106, 93, 73, 52, 55], [104, 97, 91, 122, 109, 35, 75, 126, 65, 76, 79, 122, 117, 118, 75, 87, 122, 68, 83, 46, 69, 119, 20, 78, 64, 67, 24, 27], [126, 26, 81, 92, 72, 30, 120, 19], [76, 93, 119, 71, 105, 115, 12, 66], [109, 10, 111, 10, 110, 15, 111, 86, 91, 7, 20, 127], [25, 41, 41, 53, 37, 14, 27, 38, 46, 4, 28, 115], [44, 98, 104, 43, 55, 21, 104, 107], [53, 106, 108, 54, 56, 50, 23, 40, 60, 7, 92, 95], [48, 51, 84, 14, 61, 90, 60, 87], [9, 94, 88, 5, 12, 29, 72, 5], [16, 25, 35, 30, 45, 48, 21, 46, 31, 59, 59, 78, 37, 209, 188, 191], [226, 211, 176, 243, 221, 208, 195, 195, 209, 219, 225, 224, 238, 216, 192, 175], [240, 167, 199, 239, 245, 170, 237, 246, 206, 175, 207, 171, 253, 231, 244, 159], [245, 242, 239, 235], [196, 197, 255, 217, 201, 158, 235, 197], [204, 131, 227, 218, 215, 252, 227, 204], [238, 138, 209, 210, 216, 215, 243, 200, 229, 135, 148, 255], [153, 156, 173, 182, 163, 141, 147, 251, 169, 139, 181, 180, 150, 227, 155, 190, 137, 131, 225, 235], [141, 182, 147, 172, 185, 137, 147, 177, 134, 184, 171, 166, 129, 214, 183, 138], [190, 191, 145, 134, 136, 130, 188, 211], [186, 195, 163, 139, 146, 163, 192, 152], [174, 143, 196, 199], [153, 187, 196, 136, 99, 64, 63, 62], [94, 55, 64, 119, 106, 110, 55, 54], [86, 63, 88, 63], [69, 124, 68, 125, 70, 77, 126, 96], [122, 94, 92, 114, 70, 74, 105, 34], [66, 118, 27, 21, 117, 23, 96, 82, 113, 27, 124, 88, 126, 67, 120, 92, 82, 121, 124, 89, 87, 88, 96, 91, 90, 94, 7, 6], [102, 80, 82, 76, 34, 7, 12, 115, 33, 18, 62, 43], [26, 17, 0, 50, 46, 126, 7, 114], [52, 99, 58, 35, 13, 103, 49, 106], [2, 30, 12, 107, 5, 10, 50, 44], [57, 12, 52, 13, 5, 50, 83, 54, 49, 49, 56, 4], [15, 94, 56, 6, 19, 66, 32, 10, 21, 34, 67, 25], [33, 20, 67, 2, 38, 58, 40, 6], [226, 217, 204, 197, 225, 194, 234, 183, 218, 231, 220, 248, 238, 197, 192, 229, 243, 252, 196, 255, 246, 242, 171, 170], [201, 193, 204, 240, 253, 202, 167, 219, 194, 147, 151, 147, 254, 253, 206, 151], [203, 154, 248, 158, 206, 234, 251, 146], [211, 130, 224, 202, 214, 135, 194, 219, 238, 254, 236, 143, 216, 252, 131, 130], [163, 242, 144, 171, 167, 171, 151, 250], [171, 251, 156, 251, 154, 138, 162, 187, 138, 134, 235, 226, 176, 148, 235, 234], [187, 158, 162, 179, 185, 140, 227, 226], [131, 210, 164, 154, 128, 164, 219, 218], [139, 218, 168, 152, 141, 186, 160, 131], [146, 182, 180, 134, 174, 198, 160, 159, 162, 203, 172, 129], [158, 170, 146, 48, 91, 90, 73, 73, 100, 81, 54, 120, 109, 75, 54, 49], [84, 86, 77, 103, 75, 69, 38, 127, 68, 36, 127, 104, 123, 93, 74, 33], [126, 121, 34, 29], [120, 17, 105, 72, 124, 126, 117, 68, 123, 125, 83, 64, 79, 121, 121, 69, 85, 115, 14, 9], [111, 113, 91, 66, 96, 109, 113, 79, 103, 111, 2, 125], [36, 3, 126, 121], [36, 17, 118, 32, 19, 120, 29, 24, 47, 25, 118, 38, 53, 21, 59, 36, 55, 59, 51, 30, 59, 55, 29, 53, 63, 25, 9, 11], [56, 53, 45, 18, 6, 17, 90, 85], [10, 7, 61, 22, 9, 41, 86, 9, 43, 35, 78, 73], [22, 68, 57, 16, 27, 61, 46, 65], [30, 19, 41, 248, 229, 213, 213, 254, 225, 195, 193, 253, 232, 221, 186, 228, 233, 201, 227, 230, 243, 249, 201, 237, 204, 193, 166, 244], [248, 168, 205, 169, 204, 172, 166, 203, 251, 243, 158, 153], [252, 203, 203, 221, 240, 242, 225, 153, 251, 230, 195, 199, 235, 227, 142, 137], [228, 238, 253, 193, 224, 226, 208, 129], [223, 233, 211, 181], [162, 240, 175, 242, 159, 151, 250, 245], [144, 248, 179, 186, 174, 252, 153, 129, 136, 138, 129, 187], [177, 158, 157, 176, 187, 180, 149, 177, 191, 237, 149, 148], [184, 186, 173, 148, 135, 129, 218, 213], [176, 189, 222, 130, 143, 169, 186, 205], [146, 159, 165, 142, 150, 177, 206, 141, 154, 200, 173, 169, 152, 166, 66, 109], [97, 110, 82, 127, 101, 64, 49, 124, 105, 57, 89, 48], [107, 94, 45, 44], [118, 84, 120, 97, 76, 70, 37, 36], [67, 118, 90, 119, 127, 45, 68, 88, 64, 16, 114, 80, 124, 98, 102, 95, 72, 108, 21, 84], [119, 29, 72, 93, 107, 107, 126, 96, 87, 96, 9, 85, 88, 8, 106, 13], [92, 104, 121, 115, 24, 21, 22, 51], [36, 117, 125, 32, 16, 28, 22, 59, 45, 34, 6, 96, 48, 62, 44, 35, 15, 0, 9, 100], [62, 105, 48, 54, 58, 24, 7, 92]];
    for (var nM = 0; nM < VM.length; nM++) {
      VM[nM] = Wm.atob(mVN(VM[nM]));
    }
    var MNnmV = navigator[VM[36]][VM[76]]();
    var Mwv = MNnmV[VM[44]]("mobile") !== -1 || MNnmV[VM[44]]("android") !== -1 || MNnmV[VM[44]]("ipad") !== -1 || MNnmV[VM[44]]("iphone") !== -1 || MNnmV[VM[44]]("ipod") !== -1 || MNnmV[VM[44]]("kindle") !== -1 || MNnmV[VM[44]]("silk/") !== -1 ? 1 : 0;
    if (Mwv === 1) {
      var NnmNM = document[VM[230]]("meta");
      NnmNM[VM[133]] = "viewport";
      NnmNM[VM[90]] = "initial-scale=1.0 maximum-scale=1.0";
      document[VM[168]]("head")[0][VM[228]](NnmNM);
    }
    vmn = null;
    try {
      vmn = localStorage;
      vmn[VM[62]]("LapaMauve", "1");
      vmn[VM[174]]("LapaMauve");
    } catch (VWn) {
      wwWVm = {};
      vmn = {};
      vmn[VM[62]] = function (WwMMM, mvMVv) {
        wwWVm[WwMMM] = mvMVv;
      };
      vmn[VM[174]] = function (WwMMM) {
        if (wwWVm[WwMMM] === undefined) {
          return null;
        } else {
          return wwWVm[WwMMM];
        }
      };
    }
    var MVw;
    var MVM;
    var Vnv;
    var mVV;
    var nnW;
    var MmMwM;
    var vWnwm;
    var VVwwM;
    var mWNvm;
    var nWN;
    var mwMWM;
    var wwwmw;
    var MMWwN;
    var WV;
    var nv = 0;
    var WVM = 0;
    var vW = 1;
    var NVNmn = 100;
    var NwMwV = 1;
    var VwnMW = 1;
    var mVNnw = 0;
    var MW = function () {
      var wVVVm = 5;
      var VVV = 0;
      var MnmNm = 0;
      var vwnvW = 0;
      var nNNWv = 0;
      var wnnvv = new Array(wVVVm);
      var WwV = {
        WwwWV: VwnMW,
        size: Wm[VM[165]],
        WWMNN: true,
        NNnmM: Wm[VM[65]] || 1,
        MNmmn: Wm[VM[65]] || 1,
        NvnNM: 1,
        MmNMW: 0,
        ratio: 0,
        wNN: 1,
        mvnVW: 1,
        WMNnW: "can",
        MwNvW: "bod"
      };
      function MMmwM(wwM, WwwWV, WMNnW, MwNvW, NvV, VMN, WWMNN) {
        NMmNm(wwM);
        if (WwwWV !== undefined) {
          WwV.WwwWV = WwwWV;
        }
        if (WMNnW !== undefined) {
          WwV.WMNnW = WMNnW;
        }
        if (MwNvW !== undefined) {
          WwV.MwNvW = MwNvW;
        }
        if (NvV !== undefined) {
          WwV[VM[242]] = NvV;
        }
        if (VMN !== undefined) {
          WwV[VM[115]] = VMN;
        }
        if (WWMNN !== undefined) {
          WwV.WWMNN = WWMNN;
        }
        MVw = document[VM[57]](WwV.WMNnW);
        WV = MVw[VM[106]]("2d");
        WwV.NvnNM = WV.VNwnm || WV.nVnmv || WV.wNnMw || WV.wMvmN || WV.VVWnv || 1;
        VVWNv();
        MVw[VM[20]] = function () {
          return false;
        };
        var NmVnN = document[VM[57]](WwV.MwNvW);
        NmVnN[VM[73]] = function () {
          return false;
        };
        NmVnN[VM[191]] = function () {
          return false;
        };
        NmVnN[VM[81]] = wMmWm;
        wMmWm();
        WMWVN();
      }
      ;
      function wMmWm() {
        var VMN;
        var MN;
        var ww;
        if (WwV.WwwWV === mVNnw) {
          if (Wm[VM[165]] > Wm[VM[193]]) {
            VMN = Wm[VM[193]] / Wm[VM[165]];
            MN = WwV[VM[242]];
            ww = Math[VM[61]](MN * VMN);
          } else {
            VMN = Wm[VM[165]] / Wm[VM[193]];
            ww = WwV[VM[242]];
            MN = Math[VM[61]](ww * VMN);
          }
        } else {
          MN = Wm[VM[165]];
          ww = Wm[VM[193]];
        }
        MVM = MN;
        Vnv = ww;
        mVV = Math[VM[61]](MVM / 2);
        nnW = Math[VM[61]](Vnv / 2);
        MmMwM = Math[VM[61]](MVM / 4);
        vWnwm = Math[VM[61]](Vnv / 4);
        WwV.wNN = MVM / Wm[VM[165]];
        WwV.mvnVW = Vnv / Wm[VM[193]];
        VMN = WwV.MNmmn / WwV.NvnNM;
        if (WwV[VM[115]] !== 0) {
          VMN *= WwV[VM[115]];
        }
        MVw[VM[255]] = MVM * VMN;
        MVw[VM[104]] = Vnv * VMN;
        if (WwV.WwwWV === VwnMW) {
          vW = Math[VM[144]](ww / (WwV[VM[242]] * 11 / 16), MN / WwV[VM[242]]);
          MVw[VM[219]][VM[255]] = MN + "px";
          MVw[VM[219]][VM[104]] = ww + "px";
        }
        VVwwM = MVM / vW;
        mWNvm = Vnv / vW;
        nWN = mVV / vW;
        mwMWM = nnW / vW;
        wwwmw = MmMwM / vW;
        MMWwN = vWnwm / vW;
        WV[VM[236]](VMN, VMN);
        wVmnv(WV, WwV.WWMNN);
        VMMnW[VM[109]]();
      }
      ;
      function VVWNv() {
        var mVWwW = 0;
        var nNwWW = ["ms", "moz", "webkit", "o"];
        for (var nN = 0; nN < nNwWW[VM[126]] && !Wm[VM[237]]; ++nN) {
          Wm[VM[237]] = Wm[nNwWW[nN] + "RequestAnimationFrame"];
          Wm[VM[27]] = Wm[nNwWW[nN] + "CancelAnimationFrame"] || Wm[nNwWW[nN] + "CancelRequestAnimationFrame"];
        }
        if (!Wm[VM[237]]) {
          Wm[VM[237]] = function (callback, VmVNN) {
            var MwvMV = new Date()[VM[143]]();
            var Mmwwn = Math[VM[144]](0, 16 - (MwvMV - mVWwW));
            var MV = Wm[VM[222]](function () {
              callback(MwvMV + Mmwwn);
            }, Mmwwn);
            mVWwW = MwvMV + Mmwwn;
            return MV;
          };
        }
        if (!Wm[VM[27]]) {
          Wm[VM[27]] = function (MV) {
            clearTimeout(MV);
          };
        }
      }
      ;
      ;
      function mnVNV(wVNVW) {
        if (wVNVW === 1 || wVNVW === 2 || wVNVW === 3) {
          if (wVNVW === WwV.MmNMW) {
            wVNVW = 0;
            WwV.MNmmn = WwV.NNnmM / NwMwV;
          } else {
            WwV.MNmmn = WwV.NNnmM / wVNVW;
          }
          WwV.MmNMW = wVNVW;
          wMmWm();
        }
      }
      ;
      ;
      function WwNnV() {
        MnmNm++;
        VVV += nv;
        if (VVV >= 1000) {
          vwnvW = MnmNm * 1000 / VVV;
          wnnvv[nNNWv] = vwnvW;
          nNNWv++;
          if (nNNWv === wVVVm) {
            var nmwvN = 0;
            for (var Wv = 0; Wv < wVVVm; Wv++) {
              nmwvN += wnnvv[Wv];
            }
            nmwvN = nmwvN / wVVVm;
            var VMN = WwV.NNnmM / WwV.NvnNM;
            if (WwV.MmNMW === 0 && VMN === 2 && Math[VM[0]](NVNmn - nmwvN) < 5) {
              if (nmwvN < 22 && NVNmn < 22) {
                if (NwMwV === 1) {
                  NwMwV = 2;
                  WwV.MNmmn = WwV.NNnmM / 2;
                  wMmWm();
                } else if (NwMwV === 2) {
                  NwMwV = 3;
                  WwV.MNmmn = WwV.NNnmM / 3;
                  wMmWm();
                }
              } else if (WwV.NNnmM > WwV.MNmmn && nmwvN + NVNmn > 119) {
                if (NwMwV === 2) {
                  NwMwV = 1;
                  WwV.MNmmn = WwV.NNnmM;
                  wMmWm();
                } else if (NwMwV === 3) {
                  NwMwV = 2;
                  WwV.MNmmn = WwV.NNnmM / 2;
                  wMmWm();
                }
              }
            }
            NVNmn = nmwvN;
            nNNWv = 0;
          }
          VVV = 0;
          MnmNm = 0;
        }
      }
      ;
      ;
      function WMWVN(vMWvN) {
        Wm[VM[237]](WMWVN);
        if (vMWvN !== undefined) {
          nv = vMWvN - WVM;
          WVM = vMWvN;
        }
        WwNnV();
        VMMnW.Mw();
      }
      ;
      ;
      function MVwnw(WV, Ww) {
        WV[VM[233]] = Ww;
        WV.nnnVV = Ww;
        WV.mNVNw = Ww;
        WV.MvnNn = Ww;
        WV.NwnNM = Ww;
      }
      ;
      ;
      function wVmnv(WV, Ww) {
        if (Ww === false) {
          document[VM[57]](WwV.WMNnW)[VM[219]].VwVWV = "pixelated";
        } else {
          document[VM[57]](WwV.WMNnW)[VM[219]].VwVWV = "auto";
        }
        MVwnw(WV, Ww);
      }
      ;
      ;
      function WMnnM(MNVWN) {
        var m = new Image();
        m[VM[58]] = MNVWN[VM[132]]("image/png");
        m[VM[255]] = MNVWN[VM[255]];
        m[VM[104]] = MNVWN[VM[104]];
        return m;
      }
      ;
      function MvmMN(WV, nwwVM, wmWvm, WvVNM, MNvWn) {
        WV[VM[214]]();
        WV[VM[253]](nwwVM * vW, wmWvm * vW);
        WV[VM[146]](WvVNM * vW, MNvWn * vW);
      }
      ;
      function NNMMw(WV, nvwmv, MnNWv, MN) {
        if (nvwmv !== undefined) {
          WV[VM[210]] = nvwmv;
          WV[VM[145]]();
        }
        if (MnNWv !== undefined) {
          if (MN !== undefined) {
            WV[VM[3]] = MN;
          }
          WV[VM[194]] = MnNWv;
          WV[VM[13]]();
        }
      }
      ;
      ;
      function NNmnw(WV, nN, wn, Wmv, nVV) {
        WV[VM[214]]();
        WV[VM[50]](nN * vW, wn * vW, Wmv * vW, nVV * vW);
      }
      ;
      ;
      function VWVmW() {
        var NWNmv = "#";
        for (var Wv = 0; Wv < 3; Wv++) {
          var W = Math[VM[61]](Math[VM[185]]() * 256);
          NWNmv += W < 16 ? "0" + W[VM[151]](16) : W[VM[151]](16);
        }
        return NWNmv;
      }
      ;
      ;
      function MwNvv(VNmNn, Ww) {
        var MwV = VNmNn[VM[126]];
        var NnWVv = Math[VM[61]](Ww * MwV);
        var NVMMW = VNmNn[Math[VM[144]](0, NnWVv - 1)];
        var MmnVN = VNmNn[Math[VM[241]](NnWVv, MwV - 1)];
        Ww = Ww % (1 / MwV) * MwV;
        var NWNmv = "#";
        for (var Wv = 0; Wv < 3; Wv++) {
          var mnN = Math[VM[61]]((MmnVN[Wv] - NVMMW[Wv]) * Ww + NVMMW[Wv]);
          NWNmv += mnN < 16 ? "0" + mnN[VM[151]](16) : mnN[VM[151]](16);
        }
        return NWNmv;
      }
      ;
      ;
      function WMn(WV, nN, wn, Wmv, nVV, NWNmv) {
        WV[VM[214]]();
        WV[VM[210]] = NWNmv;
        WV[VM[84]](nN * vW, wn * vW, Wmv * vW, nVV * vW);
      }
      ;
      ;
      function MVvvv(WV, nN, wn, W) {
        WV[VM[214]]();
        WV[VM[4]](nN * vW, wn * vW, W * vW, 0, Math[VM[99]] * 2);
      }
      ;
      function MWmVm(WV, nN, wn, W, vwmww, MVWnv) {
        WV[VM[214]]();
        WV[VM[4]](nN * vW, wn * vW, W * vW, vwmww, MVWnv);
      }
      ;
      var VMMnW = undefined;
      function NMmNm(wwM) {
        VMMnW = wwM;
      }
      ;
      function MNMNm() {
        this.n = 1;
        this.mvN = this[VM[255]] / 2;
        this.wmm = this[VM[104]] / 2;
      }
      ;
      ;
      function MVmVM() {
        this.n = 0;
      }
      ;
      ;
      function Mvw(MWN, m) {
        if (m !== undefined && m.n === 2) {
          return m;
        }
        m = new Image();
        m.n = 2;
        m[VM[92]] = MNMNm;
        m[VM[189]] = MVmVM;
        m[VM[58]] = MWN;
        return m;
      }
      ;
      ;
      function vmm(Vwwwv, mWvVV, Wmv) {
        var mnN = Math[VM[144]](1, Math[VM[61]](60 / NVNmn));
        for (var Wv = 0; Wv < mnN; Wv++) {
          Vwwwv = wMM.vmm(Vwwwv, mWvVV, Wmv);
        }
        return Vwwwv;
      }
      ;
      ;
      function WmMvv() {
        var vNvNV = document[VM[57]]("bod");
        if (vNvNV[VM[83]]) {
          vNvNV[VM[83]]();
        } else if (vNvNV[VM[38]]) {
          vNvNV[VM[38]]();
        } else if (vNvNV.mVMMv) {
          vNvNV.mVMMv();
        } else if (vNvNV[VM[98]]) {
          vNvNV[VM[98]]();
        }
      }
      ;
      ;
      function mvMMN() {
        if (document[VM[199]]) {
          document[VM[199]]();
        } else if (document[VM[217]]) {
          document[VM[217]]();
        } else if (document[VM[209]]) {
          document.mmWnN();
        } else if (document[VM[120]]) {
          document[VM[120]]();
        }
      }
      ;
      ;
      function wmnVW(MWN) {
        return {
          src: MWN,
          m: {
            n: 0
          }
        };
      }
      ;
      ;
      function mVnMv(MWN) {
        var Vwn = wmnVW(MWN);
        Vwn.m = MW.Mvw(Vwn[VM[58]], Vwn.m);
        return Vwn;
      }
      ;
      ;
      function NN(Vwn, nN, wn, VW, MnVNv, WwVNm, mw) {
        var m = Vwn.m;
        if (m.n !== 1) {
          Vwn.m = MW.Mvw(Vwn[VM[58]], Vwn.m);
          return;
        }
        mw *= vW;
        nN *= vW;
        wn *= vW;
        var Wmv = m.mvN * mw;
        var nVV = m.wmm * mw;
        var Wwmnv = -Wmv / 2 + MnVNv * mw;
        var MNVWw = -nVV / 2 + WwVNm * mw;
        if (nN + Wwmnv + Wmv < 0 || wn + MNVWw + nVV < 0 || nN - Wmv - MVM > 0 || wn - nVV - Vnv > 0) {
          return;
        }
        WV[VM[30]]();
        WV[VM[101]](nN, wn);
        WV[VM[129]](VW);
        WV[VM[134]](m, Wwmnv, MNVWw, Wmv, nVV);
        WV[VM[235]]();
      }
      ;
      ;
      function mnnmv(Vwn, nN, wn, VW, MnVNv, WwVNm, mw, wWwmw, WWNMV, NMvnN) {
        var m = Vwn.m;
        if (m.n !== 1) {
          Vwn.m = MW.Mvw(Vwn[VM[58]], Vwn.m);
          return;
        }
        mw *= vW;
        var Wmv = m.mvN * mw;
        var nVV = m.wmm * mw;
        WV[VM[30]]();
        WV[VM[101]](nN * vW, wn * vW);
        WV[VM[129]](VW);
        WV[VM[101]](MnVNv * mw, WwVNm * mw);
        WV[VM[129]](wWwmw);
        WV[VM[134]](m, -Wmv / 2 + WWNMV * mw, -nVV / 2 + NMvnN * mw, Wmv, nVV);
        WV[VM[235]]();
      }
      ;
      ;
      function mVwVm(Vwn, nN, wn, VW, NWMVW, VnWMv, vWMvw, MwWwm, mw) {
        var m = Vwn.m;
        if (m.n !== 1) {
          Vwn.m = MW.Mvw(Vwn[VM[58]], Vwn.m);
          return;
        }
        mw *= vW;
        nN *= vW;
        wn *= vW;
        var Wmv = vWMvw / 2 * mw;
        var nVV = MwWwm / 2 * mw;
        var Wwmnv = -Wmv / 2;
        var MNVWw = -nVV / 2;
        if (nN + Wwmnv + Wmv < 0 || wn + MNVWw + nVV < 0 || nN - Wmv - MVM > 0 || wn - nVV - Vnv > 0) {
          return;
        }
        WV[VM[30]]();
        WV[VM[101]](nN, wn);
        WV[VM[129]](VW);
        WV[VM[134]](m, NWMVW, VnWMv, vWMvw, MwWwm, Wwmnv, MNVWw, Wmv, nVV);
        WV[VM[235]]();
      }
      ;
      ;
      function WVvmM(vmVVm, Mww, N, nvvNw, mnN, W) {
        vmVVm[VM[214]]();
        vmVVm[VM[253]](Mww + W, N);
        vmVVm[VM[161]](Mww + nvvNw, N, Mww + nvvNw, N + mnN, W);
        vmVVm[VM[161]](Mww + nvvNw, N + mnN, Mww, N + mnN, W);
        vmVVm[VM[161]](Mww, N + mnN, Mww, N, W);
        vmVVm[VM[161]](Mww, N, Mww + nvvNw, N, W);
        vmVVm[VM[243]]();
      }
      ;
      ;
      return {
        options: WwV,
        MMmwM: MMmwM,
        wVmnv: wVmnv,
        MVwnw: MVwnw,
        mnVNV: mnVNV,
        WMnnM: WMnnM,
        rect: NNmnw,
        fillRect: WMn,
        MVvvv: MVvvv,
        WVvmM: WVvmM,
        VWVmW: VWVmW,
        MwNvv: MwNvv,
        line: MvmMN,
        NNMMw: NNMMw,
        NMmNm: NMmNm,
        Mvw: Mvw,
        vmm: vmm,
        WmMvv: WmMvv,
        mvMMN: mvMMN,
        NN: NN,
        mnnmv: mnnmv,
        mVwVm: mVwVm,
        wmnVW: wmnVW,
        mVnMv: mVnMv
      };
    }();
    var vVV = function () {
      function VW(VNWMm, nVWvV, MWMNV, nNWwn) {
        var VvmMv = nNWwn - nVWvV;
        var mnmMW = MWMNV - VNWMm;
        return Math[VM[69]](VvmMv, mnmMW);
      }
      ;
      ;
      function nMW(VNWMm, nVWvV, MWMNV, nNWwn) {
        var nN = MWMNV - VNWMm;
        var wn = nNWwn - nVWvV;
        return Math[VM[224]](nN * nN + wn * wn);
      }
      ;
      ;
      function NMM(VNWMm, nVWvV, MWMNV, nNWwn) {
        var nN = MWMNV - VNWMm;
        var wn = nNWwn - nVWvV;
        return nN * nN + wn * wn;
      }
      ;
      ;
      return {
        angle: VW,
        nMW: nMW,
        NMM: NMM
      };
    }();
    var wMM = function () {
      var wNvnN = Math[VM[99]] * 2;
      var vNv = {
        VWvvw: function (NWM, vMwWM, mMw) {
          return Math[VM[241]](mMw * NWM + vMwWM(NWM), 1);
        },
        NvwWM: function (NWM) {
          return NWM;
        },
        VWN: function (NWM) {
          return NWM * (2 - NWM);
        },
        WWvNm: function (NWM) {
          return --NWM * NWM * NWM + 1;
        },
        wvN: function (NWM) {
          if (NWM < 0.5) {
            return NWM * 2 * NWM;
          } else {
            return -1 + (4 - NWM * 2) * NWM;
          }
        },
        vvW: function (NWM) {
          return NWM * NWM;
        },
        WWmmn: function (NWM) {
          if (NWM < 0.5) {
            return NWM * 4 * NWM * NWM;
          } else {
            return (NWM - 1) * (NWM * 2 - 2) * (NWM * 2 - 2) + 1;
          }
        },
        Nvvnn: function (NWM) {
          return NWM * NWM * NWM;
        },
        vwvwM: function (NWM) {
          if (NWM < 0.5) {
            return NWM * 8 * NWM * NWM * NWM;
          } else {
            return 1 - --NWM * 8 * NWM * NWM * NWM;
          }
        },
        nNMnn: function (NWM) {
          return NWM * NWM * NWM * NWM;
        },
        Nmn: function (NWM) {
          return 1 - --NWM * NWM * NWM * NWM;
        },
        wmnvw: function (NWM) {
          return 1 + --NWM * NWM * NWM * NWM * NWM;
        }
      };
      function wwNWm(Nnn) {
        if (Nnn >= 20000) {
          Nnn = (Nnn - 20000) * 1000;
        } else if (Nnn >= 10000) {
          Nnn = (Nnn - 10000) * 100;
        }
        return Nnn;
      }
      ;
      ;
      function vWwwM(Nnn) {
        if (Nnn >= 10000) {
          var WvN = Math[VM[61]](Math[VM[179]](Nnn)) - 2;
          var NwmwV = Math[VM[144]](0, 3 - WvN);
          var V = Math[VM[61]](Nnn / 1000)[VM[151]]();
          if (NwmwV) {
            V += "." + (Nnn % 1000 / 1000)[VM[151]]()[VM[215]](2)[VM[215]](0, NwmwV);
            ;
            for (var Wv = V[VM[126]] - 1, NWWNv = 0; Wv > 0; Wv--) {
              if (V[Wv] != "0") {
                break;
              } else {
                NWWNv++;
              }
            }
            V = V[VM[215]](0, V[VM[126]] - NWWNv);
            if (V[V[VM[126]] - 1] === ".") {
              V = V[VM[215]](0, V[VM[126]] - 1);
            }
          }
          V += "k";
          return V;
        } else {
          return Nnn[VM[151]]();
        }
      }
      ;
      ;
      function vmm(Vwwwv, mWvVV, Wmv) {
        return (1 - Wmv) * Vwwwv + mWvVV * Wmv;
      }
      ;
      ;
      function VmNvW(Ww) {
        var Nnn = Ww + "";
        var V = "";
        var MwV = Nnn[VM[126]];
        for (var Wv = MwV - 1, mM = 0; Wv >= 0; Wv--, mM++) {
          var mnN = Nnn[Wv];
          if (mM > 2 && mnN !== "-") {
            mM = 0;
            V = "," + V;
          }
          V = mnN + V;
        }
        return V;
      }
      ;
      ;
      function mvnmW(vWvmn, WvM) {
        Mww = [];
        Mww[VM[154]][VM[117]](Mww, vWvmn);
        var VMNVv = [];
        while (Mww[VM[126]] > 0) {
          var W = Math[VM[61]](WvM() * Mww[VM[126]]);
          VMNVv[VM[154]](Mww[W]);
          Mww[VM[225]](W, 1);
        }
        return VMNVv;
      }
      ;
      ;
      function vWNnM(vwmww, MVWnv) {
        return MVWnv + Math[VM[108]]((vwmww - MVWnv) / wNvnN) * wNvnN;
      }
      ;
      ;
      return {
        vNv: vNv,
        vmm: vmm,
        wwNWm: wwNWm,
        vWwwM: vWwwM,
        VmNvW: VmNvW,
        mvnmW: mvnmW,
        vWNnM: vWNnM
      };
    }();
    var mvv = function () {
      function wMvvN(vN, WwN) {
        if (WwN !== mvv.MvNnv) {
          mvv[VM[102]] = WwN;
        }
        mvv.mmV = Math[VM[61]](vN[VM[89]] * MW[VM[29]].wNN);
        mvv.vMm = Math[VM[61]](vN[VM[180]] * MW[VM[29]].mvnVW);
        mvv[VM[232]] = Math[VM[61]](mvv.mmV / vW);
        mvv[VM[249]] = Math[VM[61]](mvv.vMm / vW);
      }
      ;
      ;
      function wwWnM() {
        mvv[VM[246]] = vVV[VM[246]](1, 0, mvv[VM[232]] - nWN, mvv[VM[249]] - mwMWM);
      }
      ;
      ;
      function MNVVn() {
        mvv.nMW = vVV.nMW(nWN, mwMWM, mvv[VM[232]], mvv[VM[249]]);
      }
      ;
      ;
      function vMWMW(vN, WwN) {
        wMvvN(vN, WwN);
        wwWnM();
      }
      ;
      ;
      function VNv(vN, WwN) {
        wMvvN(vN, WwN);
        wwWnM();
        MNVVn();
      }
      ;
      ;
      function NWW(vN, WWWVn, VVMwV) {
        vN[VM[89]] = VVMwV[VM[89]];
        vN[VM[180]] = VVMwV[VM[180]];
        vN[VM[122]] = WWWVn[VM[122]];
        vN[VM[22]] = WWWVn[VM[22]];
      }
      ;
      ;
      function wvvmw() {
        this[VM[89]] = 0;
        this[VM[180]] = 0;
        this[VM[122]] = false;
        this[VM[22]] = false;
        this[VM[40]] = function () {};
      }
      ;
      ;
      return {
        MvNnv: 0,
        nvmmV: 1,
        MmVVW: 2,
        state: 0,
        wMvvN: wMvvN,
        wwWnM: wwWnM,
        MNVVn: MNVVn,
        vMWMW: vMWMW,
        VNv: VNv,
        x: 0,
        y: 0,
        mmV: 0,
        vMm: 0,
        angle: 0,
        nMW: 0,
        NWW: NWW,
        wvvmw: wvvmw
      };
    }();
    var NM = function () {
      function WVvmM(WV, nmmvM, nnVNW, MN, ww, NnV) {
        if (MN < NnV * 2) {
          NnV = MN / 2;
        }
        if (ww < NnV * 2) {
          NnV = ww / 2;
        }
        if (NnV < 0) {
          NnV = 0;
        }
        WV[VM[214]]();
        WV[VM[253]](nmmvM + NnV, nnVNW);
        WV[VM[161]](nmmvM + MN, nnVNW, nmmvM + MN, nnVNW + ww, NnV);
        WV[VM[161]](nmmvM + MN, nnVNW + ww, nmmvM, nnVNW + ww, NnV);
        WV[VM[161]](nmmvM, nnVNW + ww, nmmvM, nnVNW, NnV);
        WV[VM[161]](nmmvM, nnVNW, nmmvM + MN, nnVNW, NnV);
        WV[VM[243]]();
      }
      ;
      ;
      function nMNVN(MN, ww, nwW, mWMwM, mnwnN) {
        var mm = {
          x: 0,
          y: 0
        };
        var nwW = nwW;
        var m = MW.Mvw(nwW);
        var wnNmV = 0;
        var wwMww = 0;
        var mNMwV = mWMwM;
        function Mw() {
          if (m.n !== 1) {
            return;
          }
          wnNmV += Math[VM[241]](nv, mnwnN * 3);
          if (wnNmV > mnwnN) {
            wnNmV -= mnwnN;
            wwMww = Math[VM[61]]((wwMww + 1) % (m[VM[255]] / mNMwV));
          }
          WV[VM[134]](m, mNMwV * wwMww, 0, mNMwV, m[VM[104]], mm[VM[232]], mm[VM[249]], MN * vW, ww * vW);
        }
        ;
        ;
        return {
          Mw: Mw,
          mm: mm
        };
      }
      ;
      ;
      function MwW(MN, ww, nwW) {
        var mm = {
          x: 0,
          y: 0,
          disable: 0
        };
        var nwW = nwW;
        var m;
        if (nwW !== undefined) {
          m = MW.Mvw(nwW);
        } else {
          mm[VM[231]] = 1;
        }
        function mWn() {
          mm[VM[231]] = 1;
        }
        ;
        ;
        function mmv() {
          mm[VM[231]] = 0;
        }
        ;
        ;
        function Mw() {
          if (mm[VM[231]] === 1 || m.n !== 1) {
            return;
          }
          WV[VM[134]](m, 0, 0, m[VM[255]], m[VM[104]], mm[VM[232]], mm[VM[249]], MN * vW, ww * vW);
        }
        ;
        ;
        return {
          Mw: Mw,
          mm: mm,
          show: mmv,
          mWn: mWn
        };
      }
      ;
      ;
      function vnn(MN, ww, nNVwv, NNMMM) {
        var mm = {
          x: 0,
          y: 0,
          disable: 0
        };
        var WwN = 0;
        if (NNMMM === undefined) {
          NNMMM = [];
          if (nNVwv !== undefined) {
            for (var Wv = 0; Wv < nNVwv[VM[126]]; Wv++) {
              NNMMM[Wv] = MW.Mvw(nNVwv[Wv]);
            }
          } else {
            mm[VM[231]] = 1;
          }
        }
        function mvM(nNVwv, NVvMW) {
          NNMMM = NVvMW;
          for (var Wv = 0; Wv < 3; Wv++) {
            var m = NNMMM[Wv];
            var M = nNVwv[Wv];
            if (m.n !== 1) {
              NNMMM[Wv] = MW.Mvw(M, m);
            }
          }
        }
        ;
        ;
        function mWn() {
          mm[VM[231]] = 1;
        }
        ;
        ;
        function mmv() {
          mm[VM[231]] = 0;
        }
        ;
        ;
        function wvn(wWVvv) {
          WwN = wWVvv;
        }
        ;
        ;
        function vMNVV() {
          return WwN;
        }
        ;
        ;
        function Mw() {
          if (mm[VM[231]] === 1) {
            return;
          }
          var m = NNMMM[WwN];
          if (NNMMM[WwN].n !== 1) {
            return;
          }
          WV[VM[134]](m, 0, 0, m[VM[255]], m[VM[104]], mm[VM[232]], mm[VM[249]], MN * vW, ww * vW);
        }
        ;
        ;
        function Nn() {
          if (mm[VM[231]] === 1) {
            return 0;
          }
          if (mvv.mmV > mm[VM[232]] && mvv.mmV < mm[VM[232]] + MN * vW && mvv.vMm > mm[VM[249]] && mvv.vMm < mm[VM[249]] + ww * vW) {
            if (mvv[VM[102]] === mvv.nvmmV) {
              WwN = NM.WVv;
            } else if (mvv[VM[102]] === mvv.MmVVW) {
              WwN = NM.nwmmV;
            } else if (mvv[VM[102]] === mvv.MvNnv && WwN !== NM.WVv) {
              WwN = NM.nwmmV;
            }
            return 1;
          }
          WwN = NM.WVN;
          return 0;
        }
        ;
        ;
        return {
          mm: mm,
          Nn: Nn,
          Mw: Mw,
          wvn: wvn,
          getState: vMNVV,
          mvM: mvM,
          show: mmv,
          mWn: mWn
        };
      }
      ;
      ;
      function mMm(mNN, NWmvV, NWNmv, ww, MN, mnmWw, vWvWv, WMWWm, nNn, WnvNM, nVVmN, NnV, wwmvn, nmmmv, WWmmM) {
        if (mNN[VM[126]] === 0) {
          mNN = " ";
        }
        if (vWvWv === undefined) {
          vWvWv = 0;
        }
        if (WMWWm === undefined) {
          WMWWm = 0;
        }
        if (nNn === undefined) {
          nNn = 0;
        }
        if (nmmmv === undefined) {
          nmmmv = 0;
        }
        var MVw = document[VM[230]]("canvas");
        var WV = MVw[VM[106]]("2d");
        WV[VM[86]] = "middle";
        WV[VM[70]] = (WWmmM !== undefined ? WWmmM + " " : "") + ww + "px " + NWmvV;
        if (MN !== undefined) {
          MN = Math[VM[241]](WV[VM[82]](mNN)[VM[255]], MN);
        } else {
          MN = WV[VM[82]](mNN)[VM[255]];
        }
        MVw[VM[255]] = MN + vWvWv;
        MVw[VM[104]] = ww + WMWWm;
        if (mnmWw !== undefined) {
          if (nVVmN !== undefined) {
            WV[VM[149]] = nVVmN;
          }
          WV[VM[210]] = mnmWw;
          if (NnV !== undefined) {
            WVvmM(WV, nNn + 2, nNn, MN + vWvWv - nNn * 2 - 4, ww + WMWWm - nNn * 2, NnV);
            WV[VM[145]]();
          } else {
            WV[VM[84]](nNn, nNn, MN + vWvWv - nNn * 2, ww + WMWWm - nNn * 2);
          }
          WV[VM[149]] = 1;
          if (nNn !== 0) {
            WV[VM[3]] = nNn;
            WV[VM[194]] = WnvNM;
            WV[VM[13]]();
          }
        }
        WV[VM[86]] = "middle";
        WV[VM[70]] = (WWmmM !== undefined ? WWmmM + " " : "") + ww + "px " + NWmvV;
        if (wwmvn !== undefined) {
          WV[VM[194]] = wwmvn;
          WV[VM[3]] = nmmmv;
          WV[VM[113]] = "miter";
          WV[VM[227]] = 2;
          WV[VM[220]](mNN, Math[VM[61]](vWvWv / 2), Math[VM[61]](WMWWm / 2) + Math[VM[61]](ww / 2), MN);
        }
        WV[VM[210]] = NWNmv;
        WV[VM[187]](mNN, Math[VM[61]](vWvWv / 2), Math[VM[61]](WMWWm / 2) + Math[VM[61]](ww / 2), MN);
        MVw.mvN = MVw[VM[255]] / 2;
        MVw.wmm = MVw[VM[104]] / 2;
        return MVw;
      }
      ;
      ;
      return {
        WVN: 0,
        nwmmV: 1,
        WVv: 2,
        vnn: vnn,
        MwW: MwW,
        nMNVN: nMNVN,
        mMm: mMm
      };
    }();
    function nWwnw(mwm, nVw) {
      var wnv = new Uint16Array(mwm);
      if (nVw[1] === 1) {
        nNV.VvMmw();
      }
      var MwV = (nVw[VM[126]] - 2) / 18;
      for (var Wv = 0, mwNVN = 2, wwwwV = 1; Wv < MwV; Wv++, mwNVN += 18, wwwwV += 9) {
        var vw = null;
        var nMV = nVw[mwNVN];
        var MWV = nVw[mwNVN + 1];
        var vv = nVw[mwNVN + 3];
        var WwN = wnv[wwwwV + 2];
        var MV = wnv[wwwwV + 3];
        var MNM = wnv[wwwwV + 8];
        if (WwN === 0) {
          nNV[VM[16]](nMV, MV, MWV, vv, MNM);
          continue;
        }
        vw = nNV[VM[206]](nMV, MV, MWV, vv);
        mvvMm(vw, nMV, MWV, MV, vv, wnv[wwwwV + 4], wnv[wwwwV + 5], wnv[wwwwV + 6], wnv[wwwwV + 7], MNM, nVw[mwNVN + 2], WwN);
        var vwN = nWw[vv][VM[109]];
        if (vwN !== undefined) {
          vwN(vw, wnv[wwwwV + 4], wnv[wwwwV + 5]);
        }
      }
    }
    ;
    ;
    function WvVMn(mwm) {
      var wnv = new Uint16Array(mwm);
      if (vNm.vNn === Mv.WWW || vNm.vNn === Mv.vWmNw) {
        NVm.vNnnv(wnv[1]);
        if (vNm.nMVnm <= 0) {
          vNm.vWmMV = NVm[VM[102]] === NVm.nNN.mNNvW ? 0 : 1;
          vNm.nMVnm = 3000;
        }
      } else if (vNm.vNn === Mv.NwvNm) {
        NVm.vNnnv(-1);
        setTimeout(vNm.wWvnM, 300);
      }
    }
    ;
    ;
    function nwvNn() {
      NVm.MwMVn();
      if (vNm.nMVnm <= 0) {
        vNm.vWmMV = 2;
        vNm.nMVnm = 3000;
      }
    }
    ;
    ;
    function VWnmw(nVw) {
      var Mm = nNV.NvNmW(wWm, Mv.nW[VM[5]], 0);
      if (Mm !== null) {
        nNV[VM[16]](Mm.nMV, Mm[VM[5]], Mm.MWV, Mm[VM[60]], 1);
      }
      Mv.nW.nMWNV = (nVw[1] << 8) + nVw[2];
      NVm.mVWMw();
    }
    ;
    ;
    function WNWnN(MV) {
      if (Mv.wwW[MV].NNn === 0) {
        Mv.MNm--;
      }
    }
    ;
    ;
    function wnwWN() {
      NVm.NnmVw();
    }
    ;
    ;
    function NvNmV() {
      NVm.VnWWm();
    }
    ;
    ;
    function NNMvN(mVw) {
      NVm[VM[138]](mVw);
    }
    ;
    function vmwnn(mwm, nVw) {
      if (mwm[VM[7]] === 1) {
        return;
      }
      var wnv = new Uint16Array(mwm);
      Mv.nMmVw(wnv, nVw);
    }
    ;
    ;
    function wwwvV(mwm, nVw) {
      Mv.nW[VM[5]] = nVw[1];
      var wnv = new Uint16Array(mwm);
      var VVV = wnv[3] << 5;
      Mv.Mwvmm(VVV >= Mv.nVmnM ? 1 : 0, VVV);
      NVm.mmvVW();
      Vw[VM[158]]();
      nNV.vWVNn = wnv[1];
      Mv.mMVnn = nVw[4];
      Mv.vNn = nVw[5];
      Mv.nW.NMMnw = -1;
      Mv.nW.vV = 0;
      Mv.nW[VM[181]] = 0;
      Mv.nW.nMvwm = [];
      Mv.nW.vvWMW = [];
      Mv.nW.vMV.nMw = 0;
      Mv.nW.vVM = -1;
      Mv.nW.VMvwn = 0;
      Mv.nW.VnVWV = 0;
      Mv.nW.Nnw = 0;
      Mv.nW.NMvmW = 0;
      Mv.nW.vWvnN = 0;
      Mv.nW.mwM = 0;
      for (var Wv = 0; Wv < Mv.nW.WnW[VM[126]]; Wv++) {
        Mv.nW.WnW[Wv] = 0;
      }
      for (var Wv = 0; Wv < 8; Wv++) {
        Mv.nW.VwMVW[Wv] = {
          mmVnm: 0,
          id: 0
        };
      }
      Mv.nW.nWwvN = 0;
      Mv.nW.nwWMn = 0;
      if (Mv.vNn === Mv.NwvNm) {
        Mv.nW.MnMWM = 0.2;
      } else if (Mv.vNn === Mv.vWmNw) {
        Mv.nW.MnMWM = 0.4;
      } else {
        Mv.nW.MnMWM = 1;
      }
      Mv.nW.vNNVM = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1]];
      if (Mv.vNn !== Mv.vWmNw) {
        Mv.nW.vnMmn = 10000000;
      }
      Mv.nW.nwNww = 0;
      Mv.nW.WnW[Wv] = 0;
      Mv.nW.nvN = 0;
      Mv.nW.vwm = 0;
      Mv.nW.MmnvM = 0;
      Mv.nW.MmNnm = 0;
      Mv.nW.vwwmn = 0;
      Mv.nW.MMmwv = 0;
      Mv.nW.VnMnn = [0, 0, 0, 0, 0];
      Mv.nW.NwvWV = 0;
      Mv.nW.mnnvm = 0;
      Mv.nW.nWv = 0;
      Mv.nW.nvW = -1;
      Mv.nW.mnMWn = 0;
      Mv.nW.MnV = -1;
      Mv.nW.MMV = -1;
      Mv.nW.VWMVN = -1;
      Mv.nW.vwwmm = 0;
      Mv.nW.Wvv = [];
      Mv.nW.WMV = [];
      Mv.nW.VVVVm = [];
      Mv.nW.WwNww = [];
      Mv.nW.mwmvn = 0;
      Mv.nW.WMnmv = 0;
      Mv.nW.wWVnN = 0;
      Mv.nW.NvWmn = [];
      Mv.nW.wMWVm = 0;
      Mv.nW.vnNNM = [];
      Mv.nW[VM[112]] = 0;
      Mv.nW.nMWNV = 0;
      Mv.nW.VWv = 0;
      Mv.nW.mNv = 0;
      Mv.nW.nwmwV = 0;
      Mv.nW.WVm = 0;
      Mv.nW.MwWWW = 0;
      Mv.nW.WmwVW = 0;
      Vw[VM[236]] = 0;
      Mv.nW.mNMNw = [];
      Mv.nW.MNmNw = 0;
      for (var Wv = 0; Wv < 8; Wv++) {
        Mv.nW.mNMNw[Wv] = [];
        for (var mM = 0; mM < 8; mM++) {
          Mv.nW.mNMNw[Wv][mM] = 0;
        }
      }
      var MwV = nWw[wWm].VWVVV;
      Mv.nW.vwv = [];
      for (var Wv = 0; Wv < MwV; Wv++) {
        Mv.nW.vwv[Wv] = [0, 0, 0, 0];
      }
      var MwV = (mwm[VM[7]] - 8) / 10;
      for (var wmVWW = 8, vMwmN = 4, Wv = 0; Wv < MwV; Wv++, wmVWW += 10, vMwmN += 5) {
        var nW = Mv.wwW[nVw[wmVWW]];
        nW[VM[5]] = nVw[wmVWW];
        Mv.Wvvwn(nW, nVw[wmVWW + 1]);
        nW.VWM = nVw[wmVWW + 2] === 0 ? 0 : Vw.nWW + nVw[wmVWW + 2] * 2000;
        nW.VnN = nVw[wmVWW + 3] === 0 ? 0 : Vw.nWW + nVw[wmVWW + 3] * 1000;
        nW.NNn = nVw[wmVWW + 4];
        if (nW.NNn !== 0) {
          Mv.MNm--;
        }
        nW.nwnNn = wnv[vMwmN + 3];
        nW.vV = wMM.wwNWm(wnv[vMwmN + 4]) + 1;
        console[VM[172]]("id", nW[VM[5]], "score", nW.vV);
        nW.wVNnn = wMM.vWwwM(nW.vV - 1);
      }
      Mv.nW.NNn = Mv.wwW[Mv.nW[VM[5]]].NNn;
      vmn[VM[62]]("tokenId", Mv.wwW[Mv.nW[VM[5]]].nwnNn);
      vmn[VM[62]]("userId", Mv.nW[VM[5]]);
      Mv.MVVNM();
      Mv.vwvVn();
    }
    ;
    ;
    function mVmnv() {
      NVm.wNmMM();
    }
    ;
    ;
    function nWNnm(nVw) {
      var nW = Mv.wwW[nVw[1]];
      nW.nMvwm[VM[154]](nVw[2] >> 2);
      nW.vvWMW[VM[154]](nVw[2] & 3);
    }
    ;
    ;
    function nMnmn(mwm) {
      var wnN = Mv.wnN;
      wnN.WW[VM[96]] = mwm[1];
      wnN.NwN[VM[96]] = mwm[2];
      wnN.NMv[VM[96]] = mwm[3];
      wnN.VNW[VM[96]] = mwm[4];
      wnN.wNn[VM[96]] = mwm[5];
    }
    ;
    ;
    function VnvNw(mwm) {
      var wnv = new Uint16Array(mwm);
      Mv.nW.vV = (wnv[1] << 16) + wnv[2];
    }
    ;
    ;
    function VwvVV(MV, VW) {
      var Mm = nNV.NvNmW(wWm, MV, 0);
      if (Mm !== null) {
        if (MV === Mv.nW[VM[5]]) {
          Vw.mVvMn = 3;
        }
        Mm.MvW = 300;
        Mm.NNw = VW * 2 * Math[VM[99]] / 255;
      }
    }
    ;
    ;
    function mWMWm(WmNwn) {
      for (var Wv = 0; Wv < Mv.nW.vwv[VM[126]]; Wv++) {
        for (var mM = 0; mM < 4; mM++) {
          Mv.nW.vwv[Wv][0] = 0;
        }
      }
      var mM = 0;
      for (var Wv = 1; Wv < WmNwn[VM[126]]; Wv += 4) {
        var mV = WmNwn[Wv];
        if (mV !== 0) {
          VNw.vwv[mM].mvM(wWw[mV].nm[VM[58]], wWw[mV].nm.m);
        } else {
          continue;
        }
        var mv = Mv.nW.vwv[mM];
        mv[1] = WmNwn[Wv + 1];
        mv[2] = WmNwn[Wv + 2];
        mv[3] = WmNwn[Wv + 3];
        mv[0] = mV;
        mM++;
      }
    }
    ;
    ;
    function wmWnW(mV) {
      var mv = Mv.nW.vwv;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (mv[Wv][0] === mV[1] && mv[Wv][1] === mV[2] && mv[Wv][2] === mV[3] && mv[Wv][3] === mV[4]) {
          mv[Wv][0] = 0;
          mv[Wv][1] = 0;
          mv[Wv][2] = 0;
          mv[Wv][3] = 0;
          if (VNw.MWw() === 1 && Mv.nW.MMV === -1) {
            Mv.mwV(Mv.nW.MnV);
          }
          return;
        }
      }
    }
    ;
    ;
    function VnwnW(mV) {
      var mv = Mv.nW.vwv;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (mv[Wv][0] === 0) {
          mv[Wv][0] = mV[1];
          mv[Wv][1] = mV[2];
          mv[Wv][2] = mV[3];
          mv[Wv][3] = mV[4];
          VNw.vwv[Wv].mvM(wWw[mV[1]].nm[VM[58]], wWw[mV[1]].nm.m);
          if (VNw.MWw() === 1 && Mv.nW.MMV === -1) {
            Mv.mwV(Mv.nW.MnV);
          }
          return;
        }
      }
    }
    ;
    ;
    function VVnmV(Ww) {
      Mv.wnN.WW[VM[96]] = Ww;
    }
    ;
    ;
    function wWWWm() {
      Mv.wnN.WW.nMM = 1;
    }
    ;
    ;
    function mwWnM(mwm) {
      Mv.MmWnw = wWw[(mwm[1] << 8) + mwm[2]].vmnnm;
    }
    ;
    ;
    function vMvNN() {
      Mv.wnN.WW.nMM = 0;
    }
    ;
    ;
    function vwnNn(MV) {
      var Mm = nNV.NvNmW(wWm, MV, 0);
      if (Mm !== null && Mv.wwW[MV].NNn === 0) {
        Mm.wNV = 300;
      }
    }
    ;
    ;
    function VNvwV() {
      Mv.wnN.VNW.nMM = -1;
    }
    ;
    ;
    function WNMVW(mV) {
      var mv = Mv.nW.vwv;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (mv[Wv][0] === mV[1] && mv[Wv][1] === mV[2] && mv[Wv][2] === mV[3] && mv[Wv][3] === mV[4]) {
          mv[Wv][1] = mV[5];
          if (VNw.MWw() === 1 && Mv.nW.MMV === -1) {
            Mv.mwV(Mv.nW.MnV);
          }
          return;
        }
      }
    }
    ;
    ;
    function vNWvM(mwm) {
      var mv = Mv.nW.vwv;
      var nMnwN = -1;
      var VWmMn = -1;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (nMnwN === -1 && mv[Wv][0] === mwm[1] && mv[Wv][1] === mwm[2] && mv[Wv][2] === mwm[3]) {
          nMnwN = Wv;
        } else if (mv[Wv][0] === mwm[1] && mv[Wv][1] === mwm[4] && mv[Wv][2] === mwm[5]) {
          VWmMn = Wv;
        }
      }
      var mV = wWw[mwm[1]];
      var wNMMN = mwm[2] + mwm[4];
      if (mV[VM[100]] < wNMMN) {
        mv[VWmMn][3] = Math[VM[241]](255, Math[VM[144]](0, Math[VM[61]]((mv[nMnwN][3] * mv[nMnwN][1] + mv[VWmMn][3] * (mV[VM[100]] - mv[nMnwN][1])) / mV[VM[100]])));
        mv[nMnwN][1] = wNMMN - mV[VM[100]];
        mv[VWmMn][1] = mV[VM[100]];
      } else {
        mv[VWmMn][3] = Math[VM[241]](255, Math[VM[144]](0, Math[VM[61]]((mv[nMnwN][3] * mv[nMnwN][1] + mv[VWmMn][3] * mv[VWmMn][1]) / wNMMN)));
        mv[nMnwN][0] = 0;
        mv[nMnwN][1] = 0;
        mv[nMnwN][2] = 0;
        mv[nMnwN][3] = 0;
        mv[VWmMn][1] = wNMMN;
      }
      if (VNw.MWw() === 1 && Mv.nW.MMV === -1) {
        Mv.mwV(Mv.nW.MnV);
      }
    }
    ;
    ;
    function VnwvW(mwm) {
      var mv = Mv.nW.vwv;
      var WM = Math[VM[61]](mwm[2] / 2);
      var vvMVv = -1;
      var NMNWm = -1;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (NMNWm === -1 && mv[Wv][0] === mwm[1] && mv[Wv][1] === mwm[2] && mv[Wv][2] === mwm[3]) {
          NMNWm = Wv;
          mv[Wv][1] -= WM;
        } else if (vvMVv === -1 && mv[Wv][0] === 0) {
          vvMVv = Wv;
          mv[Wv][0] = mwm[1];
          mv[Wv][1] = WM;
          mv[Wv][2] = mwm[4];
          VNw.vwv[Wv].mvM(wWw[mwm[1]].nm[VM[58]], wWw[mwm[1]].nm.m);
        }
      }
      mv[vvMVv][3] = mv[NMNWm][3];
      if (VNw.MWw() === 1 && Mv.nW.MMV === -1) {
        Mv.mwV(Mv.nW.MnV);
      }
    }
    ;
    ;
    function Vwwnn() {
      Mv.wnN.VNW.nMM = 0;
    }
    ;
    ;
    function vVNmn() {
      Mv.wnN.VNW.nMM = 1;
    }
    ;
    ;
    function wMNnN() {
      Mv.wnN.NMv.nMM = -1;
    }
    ;
    ;
    function mVVmn() {
      Mv.wnN.NMv.nMM = 0;
    }
    ;
    ;
    function VmmMN() {
      Mv.wnN.NMv.nMM = 1;
    }
    ;
    ;
    function VmmmM(Ww) {
      Mv.wnN.VNW[VM[96]] = Ww;
    }
    ;
    ;
    function Mnnwv() {
      Mv.wnN.WW.nMM = -1;
    }
    ;
    ;
    function WVvWv(mV) {
      var mv = Mv.nW.vwv;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (mv[Wv][0] === mV[1] && mv[Wv][1] === mV[2] && mv[Wv][2] === mV[3] && mv[Wv][3] === mV[4]) {
          mv[Wv][3] = mV[5];
          return;
        }
      }
    }
    ;
    ;
    function nmVMW(wW) {
      Mv.nW.vVM = 1;
      Mv.nW.VMvwn = wW * 100;
      Mv.nW.NwnMN = Mv.nW.VMvwn;
    }
    ;
    ;
    function mwVWV() {
      Mv.nW.vVM = -1;
      Mv.nW.VMvwn = 0;
    }
    ;
    ;
    function MNMmv(mV) {
      var mv = Mv.nW.vwv;
      for (var Wv = 0; Wv < mv[VM[126]]; Wv++) {
        if (mv[Wv][0] === mV[1] && mv[Wv][1] === mV[2] && mv[Wv][2] === mV[3] && mv[Wv][3] === mV[4]) {
          mv[Wv][1] = mV[5];
          mv[Wv][3] = mV[6];
          if (VNw.MWw() === 1 && Mv.nW.MMV === -1) {
            Mv.mwV(Mv.nW.MnV);
          }
          return;
        }
      }
    }
    ;
    ;
    function WmwMv(Nnw) {
      Mv.nW.Nnw = Nnw;
    }
    ;
    ;
    function VnmWm() {
      Mv.vNNnV(0, 0);
      Mv.wnN.NMv.nMM = -1;
    }
    ;
    ;
    function nWWwv() {
      Mv.vNNnV(1, 0);
      if (Mv.nW.vwm === 0) {
        Mv.wnN.NMv.nMM = 1;
      }
    }
    ;
    ;
    function MVMnm(VWv) {
      Mv.nW.VWv += VWv;
    }
    ;
    ;
    function mmvmw(nVw) {
      var mvW = nVw[1];
      Mv.nW[VM[112]] = mvW;
      Mv.nW.nwmwV = Mv.vwMvM(mvW);
      Mv.nW.VWv = (nVw[2] << 24) + (nVw[3] << 16) + (nVw[4] << 8) + nVw[5];
      Mv.nW.mNv = mvW;
      for (var Wv = 6; Wv < nVw[VM[126]]; Wv++) {
        vWVvw(nVw[Wv]);
      }
    }
    ;
    ;
    function vWVvw(VVvnV) {
      if (VVvnV === 0) {
        return;
      }
      Mv.nW.vnNNM[VVvnV] = 1;
      Mv.nW.mNv -= wWw[VVvnV][VM[213]].mwVNN;
      var vW = wWw[VVvnV][VM[236]];
      if (vW !== undefined) {
        Vw[VM[236]] = vW;
      } else {
        var MmNwm = wWw[VVvnV].MmNwm;
        if (MmNwm !== undefined) {
          for (var Wv = 0; Wv < MmNwm; Wv++) {
            Mv.nW.vwv[VM[154]]([0, 0, 0, 0]);
          }
        }
      }
      if (VNw.MWw() === 1 && Mv.nW.MMV !== -1) {
        Mv.Wvm(Mv.nW.MMV);
      }
    }
    ;
    ;
    function mmNnm(MV) {
      if (VNw.MWw() === 1 && Mv.nW.MnV === 0) {
        Mv.mwV(Mn.MWm);
      }
      var mVw = wWw[MV][VM[213]].VnNNN[0] * Mv.nW.MnMWM;
      Mv.nW.vwwmm = Date[VM[105]]() + mVw;
      Mv.nW.vnwvV = mVw;
    }
    ;
    ;
    function NNmVv() {
      if (VNw.MWw() === 1 && Mv.nW.MWWwM !== -1 && Mv.nW.MMV === -1 && Mv.nW.MnV !== Mn.MWm || Mv.nW.MwWWW === 1) {
        VNw.WNw();
      }
    }
    ;
    ;
    function WwVNW(nVw) {
      var vVW = nVw[1];
      Mv.mwV(vVW);
      if (nVw[8] === 0) {
        wN.Vww(wN.mn[VM[64]], 1, 0);
        VNw.NnvWv(1);
        Mv.nW.WVm = 1;
      }
      var nwV = Mv.nW.Vv;
      var WVw = nwV.WVw;
      Mv.nW.Vv.MwV = 4;
      for (var Wv = 0; Wv < 4; Wv++) {
        var mV = nVw[Wv + 4];
        WVw[Wv] = mV;
        if (mV !== 0) {
          VNw.WVw[Wv].mvM(wWw[mV].nm[VM[58]], wWw[mV].nm.m);
        } else {
          Mv.nW.Vv.MwV = Wv;
          break;
        }
      }
      nwV.mm = nVw[3];
      if (vVW === Mn.vMM || vVW === Mn.nwm || vVW === Mn.VmW || vVW === Mn.Wvw || vVW === Mn.MVV || vVW === Mn.MNw || vVW === Mn.vMW || vVW === Mn.nNW) {
        nwV.NVW = nVw[9];
      } else {
        nwV.NVW = -1;
      }
      if (WVw[0] !== 0 && nwV.mm !== 4 && WVw[nwV.mm] !== 0) {
        var mV = wWw[WVw[nwV.mm]];
        var MMW = mV[VM[213]].vVW;
        for (Wv = 0; Wv < MMW[VM[126]]; Wv++) {
          if (MMW[Wv] === vVW) {
            nwV.WvwnM = mV[VM[213]].VnNNN[Wv] * Mv.nW.MnMWM;
            break;
          }
        }
        nwV[VM[250]] = Date[VM[105]]() + nwV.WvwnM * (nVw[2] / 255);
      } else if (Mv.nW.Vv.MwV === nwV.mm) {
        nwV[VM[250]] = 0;
      }
    }
    ;
    ;
    function wmwVM(nVw) {
      Mv.nW.Vv.NVW = nVw[1];
    }
    ;
    ;
    function nmwNv() {
      Mv.nW.vwm = 1;
      Mv.wnN.NMv.nMM = -1;
    }
    ;
    ;
    function Nmwnn() {
      Mv.nW.vwm = 0;
      if (Mv.Mwm === 1 || Mv.mwn > 0) {
        Mv.wnN.NMv.nMM = 1;
      }
    }
    ;
    ;
    function NVMmM() {
      Mv.nW.NWwnw = 1;
      Mv.wnN.NwN.nMM = -1;
    }
    ;
    ;
    function MwnnM() {
      Mv.nW.NWwnw = 0;
      Mv.wnN.NwN.nMM = 1;
    }
    ;
    ;
    function vnnnN(NNN) {
      if (Mv.nW.MmNnm <= 0) {
        Mv.nW.MmNnm = 2000;
        Mv.nW.MmnvM = NNN;
      }
    }
    ;
    ;
    function nMMNV(mwm) {
      var wnv = new Uint16Array(mwm);
      Mv.wnN.WW.WWV = wnv[1];
      Mv.wnN.WW.mVv = wnv[2] / 10000;
      Mv.wnN.WW.NmM = wnv[3] / 10000;
      Mv.wnN.NwN.WWV = wnv[4];
      Mv.wnN.NwN.mVv = wnv[5] / 10000;
      Mv.wnN.NwN.NmM = wnv[6] / 10000;
      Mv.wnN.NMv.WWV = wnv[7];
      Mv.wnN.NMv.mVv = wnv[8] / 10000;
      Mv.wnN.NMv.NmM = wnv[9] / 10000;
      Mv.wnN.VNW.WWV = wnv[10];
      Mv.wnN.VNW.mVv = wnv[11] / 10000;
      Mv.wnN.VNW.NmM = wnv[12] / 10000;
      Mv.wnN.wNn.WWV = wnv[13];
      Mv.wnN.wNn.mVv = wnv[14] / 10000;
      Mv.wnN.wNn.NmM = wnv[15] / 10000;
      Mv.wnN.WW.nmV = Math[VM[241]](Mv.wnN.WW.WWV, Mv.wnN.WW.nmV);
      Mv.wnN.WW[VM[96]] = Math[VM[241]](Mv.wnN.WW.WWV, Mv.wnN.WW[VM[96]]);
      Mv.wnN.NwN.nmV = Math[VM[241]](Mv.wnN.NwN.WWV, Mv.wnN.NwN.nmV);
      Mv.wnN.NwN[VM[96]] = Math[VM[241]](Mv.wnN.NwN.WWV, Mv.wnN.NwN[VM[96]]);
      Mv.wnN.NMv.nmV = Math[VM[241]](Mv.wnN.NMv.WWV, Mv.wnN.NMv.nmV);
      Mv.wnN.NMv[VM[96]] = Math[VM[241]](Mv.wnN.NMv.WWV, Mv.wnN.NMv[VM[96]]);
      Mv.wnN.VNW.nmV = Math[VM[241]](Mv.wnN.VNW.WWV, Mv.wnN.VNW.nmV);
      Mv.wnN.VNW[VM[96]] = Math[VM[241]](Mv.wnN.VNW.WWV, Mv.wnN.VNW[VM[96]]);
      Mv.wnN.wNn.nmV = Math[VM[241]](Mv.wnN.wNn.WWV, Mv.wnN.wNn.nmV);
      Mv.wnN.wNn[VM[96]] = Math[VM[241]](Mv.wnN.wNn.WWV, Mv.wnN.wNn[VM[96]]);
    }
    ;
    ;
    function NwnMn(mVvMn) {
      Vw.NmMmM = -mVvMn;
    }
    ;
    ;
    function vMvMM(nVw) {
      var Nwn = Mv.nW.Nwn;
      if (nVw[1] === 1) {
        VNw.NnvWv(2);
        Mv.nW.MwWWW = 1;
        wN.Vww(wN.mn[VM[64]], 1, 0);
      }
      for (var Wv = 0; Wv < 4; Wv++) {
        for (var mM = 0; mM < 3; mM++) {
          var Ww = nVw[2 + Wv * 3 + mM];
          if (mM === 0) {
            if (Ww === 0) {
              Nwn[Wv][0] = 0;
              Nwn[Wv][1] = 0;
              Nwn[Wv][2] = 0;
              Nwn[Wv][3] = 0;
              break;
            }
            VNw.Nwn[Wv].mvM(wWw[Ww].nm[VM[58]], wWw[Ww].nm.m);
          }
          Nwn[Wv][mM] = Ww;
        }
        Nwn[Wv][3] = Nwn[Wv][2];
      }
    }
    ;
    ;
    function nWVnm() {
      Mv.wnN.wNn.nMM = 1;
    }
    ;
    ;
    function mvWWW() {
      Mv.wnN.wNn.nMM = -1;
    }
    ;
    ;
    function NvWNW(nW, nvW) {
      Mv.wwW[nW].nvW = nvW;
      Mv.wwW[nW].VVM = Mv.MWW[nvW].MWV;
      if (nW === Mv.nW[VM[5]]) {
        Mv.nW.nvW = nvW;
      }
    }
    ;
    ;
    function mmvMN(nW) {
      Mv.wwW[nW].nvW = -1;
      if (nW === Mv.nW[VM[5]]) {
        Mv.nW.nvW = -1;
      }
    }
    ;
    ;
    function NNnmN(nvW) {
      Mv.VNmWM(nvW);
      if (nvW === Mv.nW.nvW) {
        Mv.nW.nvW = -1;
        Mv.nW.vwwmn = 0;
      }
    }
    ;
    ;
    function Vmmwn(nW) {
      var WVw = Mv.nW.VnMnn;
      for (var Wv = 0; Wv < 5; Wv++) {
        if (WVw[Wv] === 0) {
          if (Mv.nW.nWv === 0) {
            Mv.nW.nWv = nW;
            Mv.nW.MMmwv = 0;
          } else {
            WVw[Wv] = nW;
          }
          return;
        }
      }
    }
    ;
    ;
    function VVwmv(nVw) {
      console[VM[172]](nVw);
      var mm = Mv.nW.VwMVW;
      var MwV = (nVw[VM[126]] - 1) / 3;
      var mM = 0;
      for (var Wv = 0; Wv < MwV; Wv++) {
        var MV = nVw[3 + Wv * 3];
        if (Mv.nW[VM[5]] !== MV) {
          var nN = nVw[1 + Wv * 3];
          var wn = nVw[2 + Wv * 3];
          var nW = Mv.wwW[MV];
          mm[mM][VM[5]] = MV;
          mm[mM].mmVnm = 14000;
          nW[VM[232]] = nN * Vw.wVWmW;
          nW[VM[249]] = wn * Vw.wVWmW;
          if (vVV.NMM(nW[VM[150]], nW[VM[169]], nW[VM[232]], nW[VM[249]]) > 3000000) {
            nW[VM[150]] = nW[VM[232]];
            nW[VM[169]] = nW[VM[249]];
          }
          mM++;
        }
      }
      Mv.nW.mVNNm = mM;
    }
    ;
    ;
    function VMVWn(nWwvN) {
      Mv.nW.nWwvN = nWwvN;
    }
    ;
    ;
    function NnVmw(nVw) {
      if (nVw[1] !== Mv.nW[VM[5]]) {
        var nW = Mv.wwW[nVw[1]];
        nW[VM[232]] = nVw[2] * Vw.wVWmW;
        nW[VM[249]] = nVw[3] * Vw.wVWmW;
        nW.nWwvN = nVw[4];
        Mv.nW.nwNww = nW[VM[5]];
        Mv.nW.nwWMn = 14000;
      }
    }
    ;
    ;
    function mvVnm(nVw) {
      Mv.nW.MNmNw++;
      Mv.nW.vnMmn = nVw[1] * 1000;
      for (var MMn = 2; MMn < 14; MMn++) {
        if (nVw[MMn] === 100) {
          Mv.nW.vNNVM[MMn - 2][0] = -1;
          Mv.nW.vNNVM[MMn - 2][1] = -1;
        } else {
          var Wv = Math[VM[61]](nVw[MMn] / 8);
          var mM = nVw[MMn] % 8;
          Mv.nW.mNMNw[Wv][mM] = Mv.nW.MNmNw;
          Mv.nW.vNNVM[MMn - 2][0] = Wv;
          Mv.nW.vNNVM[MMn - 2][1] = mM;
        }
      }
      Vw.mVmWW();
    }
    ;
    ;
    function mVWNW() {
      NVm.vNnnv(0);
      if (vNm.nMVnm <= 0) {
        vNm.vWmMV = 3;
        vNm.nMVnm = 3000;
      }
    }
    ;
    ;
    function MMnWn(MV) {
      var Mm = nNV.NvNmW(wWm, MV, 0);
      if (Mm !== null) {
        Mm.wvv = 300;
      }
    }
    ;
    ;
    function mNvwm(vvNVw) {
      Mv.nW.vvNVw = [];
      for (var Wv = 1; Wv < vvNVw[VM[126]]; Wv++) {
        Mv.nW.vvNVw[VM[154]](vvNVw[Wv] * 100);
      }
    }
    ;
    ;
    function wWVmm(mVw) {
      Vw.VnVWm(mVw * 1000);
    }
    ;
    ;
    function Wvwwm(MV, mVw) {
      Mv.wwW[MV].VWM = Vw.nWW + mVw * 2000;
    }
    ;
    ;
    function VmwwM(MV, mVw) {
      Mv.wwW[MV].VnN = Vw.nWW + mVw * 1000;
    }
    ;
    ;
    function VMmmn(MV, VnN) {
      var nW = Mv.wwW[MV];
      nW.VnN = VnN !== 0 ? Vw.nWW : 0;
      nW.VWM = Vw.nWW;
    }
    ;
    ;
    function vVWvv(VVV) {
      Mv.nW.vnMmn = VVV * 10000;
    }
    ;
    ;
    function mWVMV(mwm) {
      var nVw = new Uint8Array(mwm);
      switch (nVw[0]) {
        case 22:
          nWwnw(mwm, nVw);
          break;
        case 46:
          WvVMn(mwm);
          break;
        case 44:
          nwvNn();
          break;
        case 3:
          VWnmw(nVw);
          break;
        case 6:
          WNWnN(nVw[1]);
          break;
        case 0:
          wnwWN();
          break;
        case 53:
          NvNmV();
          break;
        case 7:
          NNMvN(nVw[1]);
          break;
        case 42:
          vmwnn(mwm, nVw);
          break;
        case 12:
          wwwvV(mwm, nVw);
          break;
        case 51:
          mVmnv();
          break;
        case 20:
          nWNnm(nVw);
          break;
        case 17:
          nMnmn(nVw);
          break;
        case 37:
          VnvNw(mwm);
          break;
        case 8:
          VwvVV(nVw[1], nVw[2]);
          break;
        case 41:
          mWMWm(nVw);
          break;
        case 19:
          wmWnW(nVw);
          break;
        case 27:
          VnwnW(nVw);
          break;
        case 15:
          VVnmV(nVw[1]);
          break;
        case 35:
          wWWWm();
          break;
        case 71:
          mwWnM(nVw);
          break;
        case 24:
          vMvNN();
          break;
        case 1:
          vwnNn(nVw[1]);
          break;
        case 28:
          VNvwV();
          break;
        case 14:
          Vwwnn();
          break;
        case 45:
          vVNmn();
          break;
        case 64:
          wMNnN();
          break;
        case 65:
          mVVmn();
          break;
        case 30:
          VmmMN();
          break;
        case 52:
          VmmmM(nVw[1]);
          break;
        case 31:
          Mnnwv();
          break;
        case 2:
          WNMVW(nVw);
          break;
        case 48:
          vNWvM(nVw);
          break;
        case 49:
          VnwvW(nVw);
          break;
        case 29:
          WVvWv(nVw);
          break;
        case 66:
          nmVMW(nVw[1]);
          break;
        case 47:
          mwVWV();
          break;
        case 67:
          MNMmv(nVw);
          break;
        case 70:
          WmwMv(nVw[1]);
          break;
        case 32:
          VnmWm();
          break;
        case 11:
          nWWwv();
          break;
        case 40:
          MVMnm((nVw[1] << 8) + nVw[2]);
          break;
        case 38:
          mmvmw(nVw);
          break;
        case 39:
          vWVvw(nVw[1]);
          break;
        case 73:
          mmNnm(nVw[1]);
          break;
        case 18:
          NNmVv();
          break;
        case 9:
          WwVNW(nVw);
          break;
        case 23:
          wmwVM(nVw);
          break;
        case 58:
          nWVnm();
          break;
        case 57:
          mvWWW();
          break;
        case 25:
          nmwNv();
          break;
        case 60:
          Nmwnn();
          break;
        case 4:
          vnnnN(nVw[1]);
          break;
        case 10:
          vMvMM(nVw);
          break;
        case 56:
          NvWNW(nVw[1], nVw[2]);
          break;
        case 26:
          mmvMN(nVw[1]);
          break;
        case 5:
          NNnmN(nVw[1]);
          break;
        case 21:
          Vmmwn(nVw[1]);
          break;
        case 69:
          VVwmv(nVw);
          break;
        case 59:
          VMVWn(nVw[1]);
          break;
        case 13:
          NnVmw(nVw);
          break;
        case 43:
          mvVnm(nVw);
          break;
        case 50:
          mVWNW();
          break;
        case 62:
          nMMNV(mwm);
          break;
        case 16:
          NwnMn(nVw[1]);
          break;
        case 68:
          MMnWn(nVw[1]);
          break;
        case 55:
          mNvwm(nVw);
          break;
        case 36:
          wWVmm(nVw[1]);
          break;
        case 61:
          Wvwwm(nVw[1], nVw[2]);
          break;
        case 34:
          VmwwM(nVw[1], nVw[2]);
          break;
        case 54:
          VMmmn(nVw[1], nVw[2]);
          break;
        case 72:
          vVWvv(nVw[1]);
          break;
        case 63:
          NVMmM();
          break;
        case 33:
          MwnnM();
          break;
      }
    }
    ;
    ;
    function VWwMW(mwm) {
      Mv.wwW[mwm[1]][VM[39]][VM[154]](mwm[2]);
    }
    ;
    ;
    function nvMwm(mwm) {
      var nW = Mv.wwW[mwm[1]];
      nW.nwnNn = mwm[2];
      nW.vV = 0;
      nW.mmVnm = wWm;
      nW.MWn = Mv.nW.NNnMv === 1 ? mwm[3] + "#" + mwm[1] : mwm[3];
      nW.mmw = mwm[4];
      nW.NNn = mwm[5];
      nW.nvW = -1;
      nW.NV = 0;
      nW.VN = 0;
      nW[VM[110]] = 1;
      nW.NnNmW = 1;
      nW.VnN = 0;
      nW.VWM = 0;
      nW.nMvwm = [];
      nW.vvWMW = [];
      nW.vvmmm = 0;
      nW.nvvMn = 0;
      nW[VM[39]] = [];
      nW.WnMmN = [];
      nW.wnNVn = [];
      nW[VM[208]] = [];
      nW.NnvVn = -1;
      nW.vWW = -1;
      nW.vMN = null;
      nW.NvmNW = null;
      nW.MwMMW = null;
      if (nW.NNn === 0) {
        Mv.MNm++;
      }
    }
    ;
    ;
    function wVVwm(mwm) {
      var MwV = mwm[VM[126]] - 1;
      Mv.mMVnn = MwV;
      vmn[VM[62]]("token", mwm[MwV]);
      mwm[0] = "";
      Mv.VwWnV(mwm);
    }
    ;
    ;
    function MMwmm(wMVww) {}
    ;
    ;
    function MnvNN(mwm) {
      var nvW = Mv.MWW[mwm[1]];
      nvW.wmmnM = mwm[2];
      nvW[VM[133]] = mwm[3];
      var nW = Mv.wwW[nvW.wmmnM];
      nW.VVM = nvW.MWV;
      nW.vwwmn = 1;
      nW.nvW = nvW[VM[5]];
      if (nvW.wmmnM === Mv.nW[VM[5]]) {
        Mv.nW.vwwmn = 1;
        Mv.nW.nvW = nvW[VM[5]];
      }
      if (VNw.nwM === nvW[VM[133]]) {
        VNw.MWmnv = 0;
      }
    }
    ;
    ;
    function wmwnw(mwm) {
      Mv.MMvMm(mwm);
    }
    ;
    ;
    function NwvWm(mwm) {
      switch (mwm[0]) {
        case 0:
          VWwMW(mwm);
          break;
        case 1:
          nvMwm(mwm);
          break;
        case 2:
          wVVwm(mwm);
          break;
        case 3:
          MMwmm(mwm[1]);
          break;
        case 4:
          MnvNN(mwm);
          break;
        case 5:
          wmwnw(mwm);
          break;
      }
    }
    ;
    ;
    function wvMnm(NNNwn) {
      var mmWMN = vmn[VM[174]]("token");
      var nwnNn = vmn[VM[174]]("tokenId");
      var NvvVW = -1;
      try {
        NvvVW = Number(vmn[VM[174]]("userId"));
        if (NvvVW === NaN) {
          NvvVW = -1;
        }
      } catch (VWn) {}
      ;
      var MWn = vmn[VM[174]]("nickname");
      var VVVmV = (NVm[VM[102]] & NVm.nNN.wWVvw) > 0 ? 1 : 0;
      var mmw = Number(vmn[VM[174]]("skin"));
      var nWWWv = 0;
      if (document[VM[57]]("passwordInput") !== null) {
        nWWWv = document[VM[57]]("passwordInput")[VM[96]];
        if (nWWWv[VM[126]] > 0) {
          vmn[VM[62]]("password", nWWWv);
        }
        if (mnm.Wwm("admin") !== null) {
          vNm.nmNnv = 0;
          vNm.vvvVn = -1;
        }
      }
      return [NNNwn, mmWMN, nwnNn, NvvVW, VVVmV, MWn, mmw, vNm.nmNnv, nWWWv];
    }
    ;
    ;
    var NVm = function () {
      nNN = {
        NvWwM: 1,
        VnvmV: 2,
        wWwWv: 4,
        mNNvW: 8,
        vVNwm: 16,
        VvMWm: 32,
        wWVvw: 64,
        MmwmN: 128,
        VNnNV: 256,
        WnMMv: 512,
        wMnvM: 1024
      };
      var WnmnW = 0;
      var nwvNm = 1;
      var wMwnm = 2;
      var wvwwV = 3;
      var VwVwn = 3000;
      var nwNVV = 1500;
      var nMwmM = JSON[VM[18]]([0]);
      var mmVmW = 20;
      var WNmVw = 150;
      var NMMww = 60;
      var wMw = 0;
      var mMN = 1;
      var WNn = undefined;
      var VwNnM = 0;
      var VWWNn = 0;
      var mVw = 0;
      var WnNMW = VwVwn;
      var Mnw = 0;
      var MWNwN = 0;
      var MNvMw = 0;
      var mMNNM = 0;
      var NNNwn = 0;
      var vNMmW = 0;
      var MWNWm = 0;
      var vMwmM = 0;
      var vNVwW = 0;
      var MmVWm = 0;
      var vVVMN = 0;
      var vnwVW = mvv[VM[246]];
      var mWWNM = 0;
      var NwvWm = undefined;
      var mWVMV = undefined;
      var wvMnm = undefined;
      function nvM(mMnMN, VVnmm, NvnNw, nmvvm, vVnwv, wmVWv, wVNwN, Mmnvw, wnwVv) {
        NNNwn = mMnMN !== undefined ? mMnMN : 0;
        vNMmW = VVnmm !== undefined ? VVnmm : 15000;
        vMwmM = nmvvm !== undefined ? nmvvm : 3;
        MWNwN = vVnwv !== undefined ? vVnwv : 20000;
        NMNnw = wmVWv !== undefined ? wmVWv : 10000;
        mWVMV = wVNwN !== undefined ? wVNwN : function () {};
        NwvWm = Mmnvw !== undefined ? Mmnvw : function () {};
        wvMnm = wnwVv !== undefined ? wnwVv : function () {};
        MWNWm = NvnNw !== undefined ? NvnNw : 2000;
        mWWNM = WVM;
        var wwNMM = vmn[VM[174]]("serverVersion");
        if (vmn[VM[174]]("token") === null || wwNMM !== "" + NNNwn) {
          vmn[VM[62]]("token", nWNnN());
        }
        vmn[VM[62]]("serverVersion", NNNwn);
      }
      ;
      ;
      function MmwNv() {
        console[VM[164]]("Disconnected");
        if (NVm[VM[102]] & nNN.VNnNV) {
          NVm[VM[102]] = 0;
        } else {
          NVm[VM[102]] = nNN.wWVvw;
        }
        NVm.VNnWn = false;
        WNn[VM[184]]();
      }
      ;
      ;
      function NvvMv() {
        if (nv > NMNnw) {
          mVw = WVM;
        }
        if (WVM - mVw > vNMmW) {
          mVw = WVM;
          MmwNv();
        }
      }
      ;
      ;
      function mwmWN() {
        clearTimeout(WwMmv);
      }
      ;
      ;
      function wmVvV(mmWMN) {
        VWWNn = 0;
        NVm[VM[102]] = nNN.VnvmV + (NVm[VM[102]] & (nNN.wWVvw | nNN.vNVmV));
        MVnVV(mmWMN);
      }
      ;
      ;
      function VWvNV(MWn, mmw, mmWMN) {
        if ((NVm[VM[102]] & nNN.VnvmV) === 0 && (NVm[VM[102]] & nNN.NvWwM) === 0) {
          vmn[VM[62]]("nickname", MWn);
          vmn[VM[62]]("skin", mmw);
          wmVvV(mmWMN);
        }
      }
      ;
      ;
      function VwWwn() {
        VWWNn++;
        WNn[VM[184]]();
        if (VWWNn >= vMwmM) {
          NVm[VM[102]] = nNN.wWwWv + (NVm[VM[102]] & nNN.wWVvw);
          if ((NVm[VM[102]] & nNN.wWVvw) > 0) {
            wnw();
          }
        } else {
          MmwNv();
        }
      }
      ;
      ;
      function VnM(MMnmV) {
        Mnw = WVM;
        WNn[VM[177]](MMnmV);
      }
      ;
      ;
      function vVvVm() {
        if (WVM - Mnw > MWNwN) {
          WNn[VM[177]](nMwmM);
          Mnw = WVM;
        }
      }
      ;
      ;
      function nNvNn(mVWvN) {
        if (WVM - vNVwW > MmVWm) {
          Mnw = WVM;
          WNn[VM[177]](JSON[VM[18]]([1, mVWvN]));
          return 0;
        }
        return MmVWm - (WVM - vNVwW);
      }
      ;
      ;
      function MwWWm() {
        if (WVM - mWWNM > WNmVw) {
          var vwWNN = ((mvv[VM[246]] - vnwVW) * 180 / Math[VM[99]] % 360 + 360) % 360;
          if (vwWNN > 2) {
            Mnw = WVM;
            mWWNM = WVM;
            vnwVW = mvv[VM[246]];
            vwWNN = Math[VM[61]]((mvv[VM[246]] * 180 / Math[VM[99]] % 360 + 360) % 360);
            WNn[VM[177]](JSON[VM[18]]([6, vwWNN]));
          }
        }
      }
      ;
      ;
      function NWmVN() {
        if (WVM - mWWNM > NMMww) {
          var vwWNN = ((mvv[VM[246]] - vnwVW) * 180 / Math[VM[99]] % 360 + 360) % 360;
          if (vwWNN > 2) {
            Mnw = WVM;
            mWWNM = WVM;
            vnwVW = mvv[VM[246]];
            vwWNN = Math[VM[61]]((mvv[VM[246]] * 180 / Math[VM[99]] % 360 + 360) % 360);
            WNn[VM[177]](JSON[VM[18]]([6, vwWNN]));
          }
        }
      }
      ;
      ;
      function vvnwV() {
        var mvVmw = wwm.NMMwW();
        if (mvVmw !== mMNNM) {
          Mnw = WVM;
          console[VM[172]]("sendShift", mvVmw);
          mMNNM = mvVmw;
          WNn[VM[177]](JSON[VM[18]]([7, mvVmw]));
        }
      }
      ;
      ;
      function mWVWM() {
        if (mvv[VM[232]] >= nWN) {
          if (vVVMN !== mMN) {
            Mnw = WVM;
            vVVMN = mMN;
            WNn[VM[177]](JSON[VM[18]]([3, mMN]));
          }
        } else if (vVVMN !== wMw) {
          Mnw = WVM;
          vVVMN = wMw;
          WNn[VM[177]](JSON[VM[18]]([3, wMw]));
        }
      }
      ;
      ;
      function NnmnN() {
        Mnw = WVM;
        WNn[VM[177]](JSON[VM[18]]([4]));
      }
      ;
      ;
      function VnNwN() {
        Mnw = WVM;
        WNn[VM[177]](JSON[VM[18]]([5]));
      }
      ;
      ;
      function WMMNM() {
        var VN = 0;
        if (wwm.vnNmn() === 1) {
          VN |= 1;
        }
        if (wwm.nWNmN() === 1) {
          VN |= 2;
        }
        if (wwm.VVmNV() === 1) {
          VN |= 4;
        }
        if (wwm.VWvwv() === 1) {
          VN |= 8;
        }
        if (MNvMw !== VN) {
          Mnw = WVM;
          MNvMw = VN;
          WNn[VM[177]](JSON[VM[18]]([2, VN]));
        }
      }
      ;
      ;
      function MVnVV(mmWMN) {
        var nMN = NVm.MMVwW.ports.default.hostname;
        var port = NVm.MMVwW.ports.default.port;
        var WNWnw = NVm.MMVwW.ports.default.is_tls ? 1 : 0;
        WNn = new Wm[VM[173]]("ws" + (WNWnw === 1 ? "s" : "") + "://" + nMN + ":" + port + "/?token=" + mmWMN);
        VwNnM++;
        WNn.WWNMm = VwNnM;
        var WWNMm = VwNnM;
        WNn[VM[239]] = "arraybuffer";
        WNn[VM[189]] = function () {
          if (this.WWNMm !== VwNnM) {
            return;
          }
          MmwNv();
        };
        WNn[VM[160]] = function (vN) {
          if (this.WWNMm !== VwNnM) {
            return;
          }
          MmwNv();
        };
        WNn[VM[23]] = function (vN, MMWNn) {
          if (this.WWNMm !== VwNnM) {
            return;
          }
          mVw = WVM;
          if (typeof vN[VM[128]] === "string") {
            NwvWm(JSON[VM[71]](vN[VM[128]]));
          } else {
            mWVMV(vN[VM[128]]);
          }
        };
        WNn[VM[163]] = function (vN) {
          vVVMN = -1;
          Mnw = WVM;
          mwmWN();
          WNn[VM[177]](JSON[VM[18]](wvMnm(NNNwn)));
          WwMmv = setTimeout(function () {
            if (WWNMm !== VwNnM) {
              return;
            }
            VwWwn();
          }, MWNWm);
        };
        WwMmv = setTimeout(function () {
          if (WWNMm !== VwNnM) {
            return;
          }
          VwWwn();
        }, MWNWm);
      }
      ;
      ;
      function MwMVn() {
        NVm[VM[102]] |= NVm.nNN.VvMWm;
      }
      ;
      ;
      function VnVMW(mVw) {
        vNVwW = WVM;
        MmVWm = mVw * 60000;
      }
      ;
      ;
      function VnWWm() {
        NVm[VM[102]] = nNN.wMnvM;
        wnw();
      }
      ;
      ;
      function wNmMM() {
        NVm[VM[102]] = nNN.WnMMv;
        wnw();
      }
      ;
      ;
      function mVWMw() {
        NVm[VM[102]] = nNN.MmwmN;
        wnw();
      }
      ;
      ;
      function NnmVw() {
        console[VM[172]]("failRestore");
        mwmWN();
        NVm[VM[102]] = nNN.VNnNV;
        NVm.VNnWn = false;
        vNm.wWvnM(1);
        wnw();
      }
      ;
      ;
      function mmvVW() {
        mwmWN();
        NVm[VM[102]] = NVm.nNN.NvWwM;
        NVm.VNnWn = false;
        if (NVm.MNn !== null) {
          NVm.MNn();
        }
      }
      ;
      ;
      function vNnnv(wwNMM) {
        if (wwNMM > NNNwn) {
          NVm[VM[102]] = nNN.mNNvW;
        } else if (wwNMM < NNNwn) {
          NVm[VM[102]] = nNN.vVNwm;
        }
        mwmWN();
      }
      ;
      ;
      var NmmMw = {
        WnmvM: "Survival",
        WVnMW: "Battle Royale",
        NNn: "Ghoul"
      };
      function nNnWw(nmNvm) {
        let headers = {
          Accept: "application/json"
        };
        if (Wm.RIVET_TOKEN) {
          headers.Authorization = "Bearer " + Wm.RIVET_TOKEN;
        }
        fetch("https://api.rivet.gg/matchmaker/lobbies/list", {
          headers: headers
        }).then(WmM => {
          if (WmM[VM[42]]) {
            return WmM[VM[170]]();
          } else {
            throw "Failed to list lobbies: " + WmM[VM[197]];
          }
        }).then(WmM => {
          console[VM[172]]("Servers", WmM);
          NVm.vww = WmM.lobbies[VM[152]](lobby => {
            let wWvMn = WmM.regions[VM[147]](W => W.region_id == lobby.region_id);
            let vMnNW = wWvMn ? wWvMn.region_display_name : "?";
            return [lobby.lobby_id, "", "", 1, vMnNW, lobby.total_player_count, lobby.game_mode_id];
          });
          nmNvm();
        });
      }
      ;
      ;
      function nWNnN() {
        var mmWMN = "";
        for (var Wv = 0; Wv < mmVmW; Wv++) {
          mmWMN += String[VM[200]](48 + Math[VM[61]](Math[VM[185]]() * 74));
        }
        return mmWMN;
      }
      ;
      ;
      function vwN() {
        if (NVm[VM[102]] === NVm.nNN.NvWwM) {
          NvvMv();
          vVvVm();
        }
      }
      ;
      ;
      function wnw() {
        if (NVm.wnw !== null) {
          var WwN = NVm[VM[102]];
          if (!(NVm[VM[102]] & nNN.VNnNV)) {
            NVm[VM[102]] = 0;
          }
          NVm.wnw(WwN);
        }
      }
      ;
      ;
      return {
        state: 0,
        nNN: nNN,
        vww: undefined,
        mvvNw: 0,
        nvM: nvM,
        VWvNV: VWvNV,
        nNnWw: nNnWw,
        MwMVn: MwMVn,
        mmvVW: mmvVW,
        vNnnv: vNnnv,
        NnmVw: NnmVw,
        wNmMM: wNmMM,
        VnWWm: VnWWm,
        muted: VnVMW,
        mVWMw: mVWMw,
        nNvNn: nNvNn,
        VnM: VnM,
        WMMNM: WMMNM,
        MwWWm: MwWWm,
        NWmVN: NWmVN,
        mWVWM: mWVWM,
        NnmnN: NnmnN,
        VnNwN: VnNwN,
        vvnwV: vvnwV,
        update: vwN,
        wnw: null,
        MNn: null
      };
    }();
    var Mv = function () {
      var vvv = 0;
      var Vvw = 0;
      var MMwmn = 0;
      var nvNMN = 0;
      var WMwWv = 18;
      var NMWmv = 9;
      var wwmVw = 50;
      function VVVVn(NMmnv, MNVvV) {
        vvv = NMmnv;
        Vvw = MNVvV;
        MMwmn = NMmnv - 1;
        nvNMN = MNVvV - 1;
      }
      ;
      ;
      function VwWnV(mVwNV) {
        Mv.MNm = -1;
        for (var Wv = 0; Wv < Mv.mMVnn; Wv++) {
          if (mVwNV[Wv] !== 0) {
            Mv.MNm++;
          }
          Mv.wwW[Wv] = new mMvwW(Wv, mVwNV[Wv]);
        }
      }
      ;
      ;
      function mMvwW(MV, MWn) {
        this.MWn = nW.NNnMv === 1 ? MWn + "#" + MV : MWn;
        this[VM[5]] = MV;
        this.nwnNn = 0;
        this.mmw = 0;
        this.NNn = 0;
        this.vV = 0;
        this.wVNnn = 0;
        this.nvW = -1;
        this.VVM = 0;
        this.vwwmn = 0;
        this.VWM = 0;
        this.VnN = 0;
        this.nMvwm = [];
        this.vvWMW = [];
        this.vvmmm = 0;
        this.nvvMn = 0;
        this[VM[39]] = [];
        this.WnMmN = [];
        this.wnNVn = [];
        this[VM[208]] = [];
        this.vWNnw = [{
          x: 0,
          y: 0,
          mVw: 0,
          angle: 0,
          size: 0
        }, {
          x: 0,
          y: 0,
          mVw: 0,
          angle: 0,
          size: 0
        }, {
          x: 0,
          y: 0,
          mVw: 0,
          angle: 0,
          size: 0
        }];
        this.WMNWv = [{
          type: 0,
          x: 0,
          y: 0,
          mVw: 0,
          VNWMm: 0,
          nVWvV: 0
        }, {
          type: 0,
          x: 0,
          y: 0,
          mVw: 0,
          VNWMm: 0,
          nVWvV: 0
        }, {
          type: 0,
          x: 0,
          y: 0,
          mVw: 0,
          VNWMm: 0,
          nVWvV: 0
        }, {
          type: 0,
          x: 0,
          y: 0,
          mVw: 0,
          VNWMm: 0,
          nVWvV: 0
        }];
        this.NV = 0;
        this.VN = 0;
        this[VM[110]] = 1;
        this.NnNmW = 1;
        this.vNN = -1;
        this.mmNMW = 0;
        this.MwMMW = null;
        this.vMN = null;
        this.vnW = null;
        this.NnvVn = -1;
        this.vWW = -1;
        this[VM[232]] = 0;
        this[VM[249]] = 0;
        this[VM[150]] = 0;
        this[VM[169]] = 0;
        this.nWwvN = 0;
      }
      ;
      ;
      function MMvMm(MWW) {
        for (var Wv = 0; Wv < WMwWv; Wv++) {
          Mv.MWW[Wv] = new mmnMM(Wv, MWW[Wv + 1]);
        }
      }
      ;
      ;
      function Wvvwn(mvWMw, MV) {
        if (MV === wwmVw) {
          mvWMw.nvW = -1;
          return;
        } else if (MV > wwmVw) {
          MV -= wwmVw + 1;
          Mv.MWW[MV].wmmnM = mvWMw[VM[5]];
          mvWMw.vwwmn = 1;
          if (Mv.nW[VM[5]] === mvWMw[VM[5]]) {
            Mv.nW.vwwmn = 1;
          }
        } else {
          mvWMw.vwwmn = 0;
        }
        if (Mv.nW[VM[5]] === mvWMw[VM[5]]) {
          Mv.nW.nvW = MV;
        }
        mvWMw.nvW = MV;
        mvWMw.VVM = Mv.MWW[MV].MWV;
      }
      ;
      ;
      function vVNNN() {
        nW.nWv = 0;
        for (var Wv = 0; Wv < nW.VnMnn[VM[126]]; Wv++) {
          if (nW.VnMnn[Wv] !== 0) {
            nW.nWv = nW.VnMnn[Wv];
            nW.VnMnn[Wv] = 0;
            return;
          }
        }
        nW.mnnvm = 0;
      }
      ;
      ;
      function VNmWM(MV) {
        var nvW = Mv.MWW[MV];
        nvW[VM[208]] = null;
        nvW.wWNVN = null;
        nvW.MWV = VVM++;
        nvW.wmmnM = 0;
        nvW[VM[133]] = "";
      }
      ;
      ;
      var VVM = 0;
      function mmnMM(MV, NWw) {
        this[VM[5]] = MV;
        this[VM[133]] = NWw;
        this[VM[208]] = null;
        this.wWNVN = null;
        this.wmmnM = 0;
        this.MWV = VVM++;
      }
      ;
      ;
      function wMvvN() {
        var MwV = nWw[VM[126]];
        for (var Wv = 0; Wv <= MwV; Wv++) {
          if (MwV !== Wv && nWw[Wv].VN === 0) {
            continue;
          }
          var wVN = nNV.wVN[Wv];
          var nNn = nNV[VM[216]][Wv];
          var Nnn = nNn[VM[216]];
          for (var mM = 0; mM < Nnn; mM++) {
            vmmvv(wVN[nNn.Wmn[mM]]);
          }
        }
        if (Mv.nW.nvW !== -1) {
          for (var Wv = 0; Wv < nW.mVNNm; Wv++) {
            var MNwNM = nW.VwMVW[Wv];
            if (MNwNM.mmVnm < 0) {
              continue;
            }
            var VmN = Mv.wwW[MNwNM[VM[5]]];
            VmN[VM[150]] = MW.vmm(VmN[VM[150]], VmN[VM[232]], 0.03);
            VmN[VM[169]] = MW.vmm(VmN[VM[169]], VmN[VM[249]], 0.03);
            MNwNM.mmVnm -= nv;
          }
        }
        if (Mv.nW.nwWMn > 0) {
          var VmN = Mv.wwW[Mv.nW.nwNww];
          VmN[VM[150]] = MW.vmm(VmN[VM[150]], VmN[VM[232]], 0.03);
          VmN[VM[169]] = MW.vmm(VmN[VM[169]], VmN[VM[249]], 0.03);
          Mv.nW.nwWMn -= nv;
        }
      }
      ;
      ;
      function vmmvv(vw) {
        nN = vw[VM[150]] + nv * vw.mMw * vw.VnwnV;
        wn = vw[VM[169]] + nv * vw.mMw * vw.Wvnmw;
        if (vVV.NMM(vw[VM[150]], vw[VM[169]], vw.NWN, vw.vVw) < vVV.NMM(nN, wn, vw[VM[150]], vw[VM[169]])) {
          vw[VM[150]] = vw.NWN;
          vw[VM[169]] = vw.vVw;
        } else {
          vw[VM[150]] = nN;
          vw[VM[169]] = wn;
        }
        vw[VM[232]] = wMM.vmm(vw[VM[232]], vw[VM[150]], vw.vmm);
        vw[VM[249]] = wMM.vmm(vw[VM[249]], vw[VM[169]], vw.vmm);
        vw.Wv = Math[VM[144]](0, Math[VM[241]](nvNMN, Math[VM[61]](vw[VM[249]] / Vw.wVw)));
        vw.mM = Math[VM[144]](0, Math[VM[241]](MMwmn, Math[VM[61]](vw[VM[232]] / Vw.wVw)));
        if (Mv.nW[VM[5]] === vw.nMV && vw[VM[5]] === 0) {
          vw[VM[246]] = mvv[VM[246]];
        } else if (vw.nMV === 0) {
          vw[VM[246]] = wMM.vmm(vw[VM[246]], vw.nvnNW, vw.vmm / 2);
        } else {
          vw[VM[246]] = wMM.vmm(vw[VM[246]], vw.nvnNW, vw.vmm * 2);
        }
      }
      ;
      ;
      function VVNnn(Mww, N) {
        if (Mv.wwW[Mww].MWn === 0 && Mv.wwW[N].MWn === 0) {
          return 0;
        } else if (Mv.wwW[Mww].MWn === 0) {
          return Mv.wwW[N].vV - 1;
        } else if (Mv.wwW[N].MWn === 0) {
          return -1 - Mv.wwW[Mww].vV;
        } else {
          return Mv.wwW[N].vV - Mv.wwW[Mww].vV;
        }
      }
      ;
      ;
      function MVVNM() {
        console[VM[172]](Mv.mMVnn);
        for (var Wv = 0; Wv < Mv.mMVnn; Wv++) {
          Mv.NvM[Wv] = Wv;
        }
        Mv.NvM = Mv.NvM[VM[188]](VVNnn)[VM[67]](0, 10);
        for (var Wv = 0; Wv < Mv.mMVnn; Wv++) {
          Mv.wmWwW = 1;
        }
      }
      ;
      ;
      function nMmVw(wnv, nVw) {
        for (var Wv = 0; Wv < 10; Wv++) {
          var MV = nVw[2 + Wv * 4];
          var vV = wnv[2 + Wv * 2];
          var nW = Mv.wwW[MV];
          nW.vV = wMM.wwNWm(vV);
          nW.nWwvN = nVw[3 + Wv * 4];
          var wVNnn = wMM.vWwwM(nW.vV);
          if (wVNnn !== nW.wVNnn) {
            nW.vnW = null;
          }
          nW.wVNnn = wVNnn;
          Mv.NvM[Wv] = MV;
        }
        Mv.wmWwW = 1;
      }
      ;
      ;
      function WwMVM() {
        this.nmV = 0;
        this[VM[96]] = 0;
        this.WWV = 0;
        this.mMw = 0;
        this[VM[250]] = 0;
        this.WnnNN = 1;
        this.Mmmwm = 0;
      }
      ;
      ;
      function Vwnvw(vnM, Ww, mVv, NmM, nMM) {
        vnM.nmV = Ww;
        vnM[VM[96]] = Ww;
        vnM.WWV = Ww;
        vnM.mVv = mVv;
        vnM.NmM = NmM;
        vnM.nMM = nMM;
        vnM.Mmmwm = 0;
      }
      ;
      ;
      function vwvVn() {
        var nnV = nWw[wWm].wnN;
        Vwnvw(wnN.WW, nnV.WW.WWV, nnV.WW.mVv, nnV.WW.NmM, 0);
        if (nW.NNn === 0) {
          Vwnvw(wnN.NwN, nnV.NwN.WWV, nnV.NwN.mVv, nnV.NwN.NmM, 1);
          Vwnvw(wnN.NMv, nnV.NMv.WWV, nnV.NMv.mVv, nnV.NMv.NmM, 0);
          Vwnvw(wnN.VNW, nnV.VNW.WWV, nnV.VNW.mVv, nnV.VNW.NmM, -1);
          Vwnvw(wnN.wNn, nnV.wNn.WWV, nnV.wNn.mVv, nnV.wNn.NmM, 0);
        } else {
          Vwnvw(wnN.NwN, nnV.NwN.WWV, nnV.NwN.mVv, 0, 1);
          Vwnvw(wnN.NMv, nnV.NMv.WWV, nnV.NMv.mVv, 0, 0);
          Vwnvw(wnN.VNW, nnV.VNW.WWV, nnV.VNW.mVv * 2, nnV.VNW.NmM / 2, -1);
          Vwnvw(wnN.wNn, nnV.wNn.WWV, nnV.wNn.mVv, 0, 0);
        }
        Vwnvw(wnN.VWv, 255, 0, 0, 0);
        wnN.VWv[VM[96]] = 0;
        wnN.VWv.nmV = 0;
        nW.nwmwV = vmvWW;
        if (Mwm === mvnNV) {
          wnN.NMv.nMM = 1;
        }
      }
      ;
      ;
      function NvVwN(vnM) {
        if (vnM.nMM === 1) {
          vnM[VM[96]] = Math[VM[241]](vnM.WWV, Math[VM[144]](vnM[VM[96]] - nv * (vnM.NmM - vnM.Mmmwm), 0));
        } else if (vnM.nMM === -1) {
          vnM[VM[96]] = Math[VM[241]](vnM[VM[96]] + nv * (vnM.mVv + vnM.Mmmwm), vnM.WWV);
        }
        vnM.nmV = wMM.vmm(vnM.nmV, vnM[VM[96]], 0.1);
      }
      ;
      ;
      function VMMNN() {
        NvVwN(wnN.WW);
        NvVwN(wnN.NwN);
        NvVwN(wnN.NMv);
        NvVwN(wnN.wNn);
        NvVwN(wnN.VNW);
        NvVwN(wnN.VWv);
        Mv.nW.nNVmW += nv;
        if (wnN.wNn.nmV > 254) {
          nnN.WvMwv = 0;
        } else {
          nnN.WvMwv = Math[VM[241]](1, Math[VM[144]](0, 1 - wnN.wNn.nmV / 255));
        }
        VvMVW();
      }
      ;
      ;
      var wnN = {
        WW: new WwMVM(),
        NwN: new WwMVM(),
        NMv: new WwMVM(),
        wNn: new WwMVM(),
        VNW: new WwMVM(),
        VWv: new WwMVM()
      };
      var mvnNV = 1;
      var nVmnM = 0;
      var Mwm = nVmnM;
      var WNVVn = 0;
      function WNVmv() {
        var VMm;
        VMm = mmvnw;
        mmvnw = wWw;
        wWw = VMm;
        VMm = nMvWm;
        nMvWm = wMV;
        wMV = VMm;
        VMm = nVNnW;
        nVNnW = mnn;
        mnn = VMm;
        VMm = mWMWV;
        mWMWV = mWm;
        mWm = VMm;
        VMm = nVVmm;
        nVVmm = nWw;
        nWw = VMm;
        VMm = WMVwm;
        WMVwm = WnnNn;
        WnnNn = VMm;
        VMm = vMnnM;
        vMnnM = WwVnW;
        WwVnW = VMm;
        VMm = vwNwn;
        vwNwn = vmN;
        vmN = VMm;
        Mwm = (Mwm + 1) % 2;
        Mv.Mwm = Mwm;
        if (Mwm === 0) {
          document[VM[57]]("bod")[VM[219]][VM[251]] = "#3D5942";
          MVw[VM[219]][VM[251]] = "#3D5942";
        } else {
          document[VM[57]]("bod")[VM[219]][VM[251]] = "#0B2129";
          MVw[VM[219]][VM[251]] = "#0B2129";
        }
        WNVVn = 0;
      }
      ;
      ;
      function vNNnV(Wmn, vnmVm) {
        if (Wmn !== Mwm) {
          Mv.mwn = 1000;
        }
        Mv.Mwm = Mwm;
        WNVVn = vnmVm;
      }
      ;
      ;
      function Mwvmm(Wmn, vnmVm) {
        if (Wmn !== Mwm) {
          WNVmv();
        }
        Mv.Mwm = Mwm;
        WNVVn = vnmVm;
      }
      ;
      ;
      function vVvmV() {
        WNVVn += nv;
        return WNVVn % Mv.nVmnM + Mwm * 10000000;
      }
      ;
      ;
      function mnVvm(MV) {
        var MwV = 0;
        var mV = wWw[MV];
        VNw.wMWmv.mvM(mV.nm[VM[58]], mV.nm.m);
        var mmMvM = mV[VM[213]].nmW;
        var MMW = mV[VM[213]].vVW;
        var nmW = VNw.nmW;
        var mVnWN = VNw.mVnWN;
        var WwNww = nW.WwNww;
        nW.VWMVN = MV;
        if (MMW !== undefined) {
          for (var Wv = 0; Wv < MMW[VM[126]]; Wv++) {
            var NNN = Mnmvn[MMW[Wv]];
            if (NNN !== undefined) {
              mV = wWw[NNN];
              mVnWN[MwV].mvM(mV.nm[VM[58]], mV.nm.m);
              MwV++;
            }
          }
        }
        nW.wMWVm = MwV;
        MwV = 0;
        if (mmMvM !== undefined) {
          for (Wv = 0; Wv < mmMvM[VM[126]]; Wv++) {
            mV = wWw[mmMvM[Wv][0]];
            nmW[MwV].mvM(mV.nm[VM[58]], mV.nm.m);
            WwNww[MwV] = mV[VM[5]];
            MwV++;
          }
        }
        nW.mwmvn = MwV;
        MmVNW(mmMvM);
      }
      ;
      ;
      function wvVWW(MV, wm) {
        if (nW.vnNNM[MV] === 1 || wm[VM[112]] === -1) {
          return 2;
        } else if (wm[VM[112]] > nW[VM[112]] || nW.mNv < wm.mwVNN || wm.MVMWV !== -1 && nW.vnNNM[wm.MVMWV] === undefined) {
          return 0;
        }
        return 1;
      }
      ;
      ;
      function MmVNW(nmW) {
        var VvWWW = nW.VVVVm;
        var mv = nW.vwv;
        var nmvVN = 1;
        if (nmW === undefined) {
          return nmvVN;
        }
        for (var Wv = 0; Wv < nmW[VM[126]]; Wv++) {
          var mVvvM = nmW[Wv];
          for (var mM = 0; mM < mv[VM[126]]; mM++) {
            var mV = mv[mM];
            if (mV[0] === mVvvM[0]) {
              if (mV[1] >= mVvvM[1]) {
                VvWWW[Wv] = mVvvM[1];
                break;
              } else {
                VvWWW[Wv] = -mVvvM[1];
              }
            }
          }
          if (mM === mv[VM[126]]) {
            VvWWW[Wv] = -mVvvM[1];
            nmvVN = 0;
          }
        }
        return nmvVN;
      }
      ;
      ;
      function vnVnM() {
        if (Mv.nW.WVm === 1 || Mv.nW.MwWWW === 1) {
          Mv.nW.WVm = 0;
          Mv.nW.MwWWW = 0;
          NVm.VnM("[17]");
        }
      }
      ;
      ;
      function Wvm(Mnv) {
        Mv.vnVnM();
        var vMMvW = 0;
        var MwMnm = 0;
        var MwV = 0;
        var nwV = nW.Wvv;
        var Wvv = VNw.nwV;
        var WMV = nW.WMV;
        for (var Wv = 1; Wv < wWw[VM[126]]; Wv++) {
          var mV = wWw[Wv];
          if (mV[VM[213]].Mnv === Mnv) {
            if (vMMvW === 0) {
              vMMvW = Wv;
              MwMnm = MwV;
            }
            Wvv[MwV].mvM(mV.nm[VM[58]], mV.nm.m);
            nwV[MwV] = Wv;
            WMV[MwV] = wvVWW(Wv, mV[VM[213]]);
            MwV++;
          }
        }
        nW.mnMWn = MwV;
        nW.MnV = -1;
        nW.MMV = Mnv;
        nW.nVNnV = MwMnm;
        mnVvm(vMMvW);
      }
      ;
      ;
      function mwV(vVW) {
        if (vVW === Mn.MWm) {
          Mv.vnVnM();
          nW.Vv.NVW = -1;
        }
        var vMMvW = 0;
        var MwMnm = 0;
        var MVMWV = Mv.nW.VWMVN;
        var MwV = 0;
        var nwV = nW.Wvv;
        var WMV = nW.WMV;
        var Wvv = VNw.nwV;
        for (var Wv = 1; Wv < wWw[VM[126]]; Wv++) {
          var mV = wWw[Wv];
          var wm = mV[VM[213]];
          if (wm.vVW !== undefined && wm.vVW[VM[44]](vVW) !== -1 && (wm[VM[112]] === -1 || nW.vnNNM[mV[VM[5]]] === 1)) {
            if (vMMvW === 0 || MVMWV === Wv) {
              vMMvW = Wv;
              MwMnm = MwV;
            }
            Wvv[MwV].mvM(mV.nm[VM[58]], mV.nm.m);
            nwV[MwV] = Wv;
            WMV[MwV] = MmVNW(wm.nmW);
            MwV++;
          }
        }
        nW.mnMWn = MwV;
        nW.MnV = vVW;
        nW.MMV = -1;
        nW.nVNnV = MwMnm;
        if (vMMvW > 0) {
          mnVvm(vMMvW);
        }
      }
      ;
      ;
      vmvWW = 900;
      NNMvw = 1.105;
      function vwMvM(mvW) {
        var VWv = vmvWW;
        for (var Wv = 0; Wv < mvW; Wv++) {
          VWv = Math[VM[61]](VWv * NNMvw);
        }
        return VWv;
      }
      ;
      ;
      function VvMVW() {
        if (nW.VWv > 0 && Math[VM[0]](wnN.VWv.nmV - wnN.VWv[VM[96]]) < 0.6) {
          if (wnN.VWv[VM[96]] === 255) {
            wnN.VWv.nmV = 0;
            wnN.VWv[VM[96]] = 0;
            nW[VM[112]]++;
            nW.mNv++;
            if (VNw.MWw() === 1 && nW.MMV !== -1) {
              Wvm(nW.MMV);
            }
            wN.Vww(wN.mn.Vvmvm, 1, 0);
            return;
          }
          if (nW.VWv >= nW.nwmwV) {
            wnN.VWv[VM[96]] = 255;
            nW.VWv -= nW.nwmwV;
            nW.nwmwV = Math[VM[61]](nW.nwmwV * NNMvw);
          } else {
            wnN.VWv[VM[96]] = Math[VM[61]](nW.VWv * 255 / nW.nwmwV);
          }
        }
      }
      ;
      ;
      var nW = {
        id: 0,
        x: 0,
        y: 0,
        vNw: 0,
        mvm: 0,
        vV: 0,
        NMMnw: -1,
        VVMMV: 0,
        vnW: null,
        click: 0,
        vwv: [],
        mwmvn: 0,
        wMWVm: 0,
        NvWmn: 0,
        mnMWn: 0,
        WVm: 0,
        MwWWW: 0,
        MnV: -1,
        MMV: -1,
        VWMVN: -1,
        nVNnV: -1,
        vnNNM: [],
        level: 0,
        nMWNV: 0,
        VWv: 0,
        nwmwV: 0,
        mNv: 0,
        WwNww: [],
        Wvv: [],
        WMV: [],
        VVVVm: [],
        vwwmm: 0,
        vnwvV: 0,
        vMV: {
          nMw: 0,
          x: 0,
          y: 0,
          id: 0
        },
        vwNVn: null,
        vVM: -1,
        VMvwn: 0,
        NwnMN: 0,
        nw: -1,
        vnmvm: -1,
        WmwVW: 0,
        MMw: -1,
        mVmvW: -1,
        NnvWW: -1,
        wnnvW: -1,
        Nwn: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
        WVMMv: 0,
        Vv: {
          WVw: [0, 0, 0, 0],
          mm: 0,
          time: 0,
          WvwnM: 0,
          MwV: 0,
          NVW: 0
        },
        Nnw: 0,
        mVVnW: 0,
        NMvmW: 0,
        vWvnN: 0,
        mwM: 0,
        WnW: [0, 0, 0],
        VVnWm: 0,
        wNmWN: 0,
        VvnnM: [0, 0, 0],
        MWwWv: [0, 0, 0],
        nvN: 0,
        VnW: 0,
        Vmn: 0,
        vNNVn: 0,
        vwm: 0,
        MmnvM: 0,
        MmNnm: 0,
        mnnvm: 0,
        vwwmn: 0,
        NmNmW: 0,
        MMmwv: 0,
        MWmnv: 0,
        NwvWV: 0,
        VnMnn: [0, 0, 0, 0, 0],
        nWv: 0,
        MMmwv: 0,
        nvW: -1,
        VwMVW: [],
        mVNNm: 0,
        nWwvN: 0,
        nwNww: 0,
        nwWMn: 0,
        vNNVM: null,
        vnMmn: 0,
        MnMWM: 1,
        wnwMm: 0,
        mNMNw: 0,
        MNmNw: 0,
        NNnMv: 0,
        NNn: 0,
        vvNVw: []
      };
      return {
        WWW: 0,
        NwvNm: 1,
        vWmNw: 2,
        vNn: 0,
        NvM: [],
        MVVNM: MVVNM,
        nMmVw: nMmVw,
        VVVVn: VVVVn,
        wmWwW: 0,
        mMVnn: 0,
        MNm: 0,
        MMvMm: MMvMm,
        MWW: [],
        Wvvwn: Wvvwn,
        VNmWM: VNmWM,
        vVNNN: vVNNN,
        VwWnV: VwWnV,
        wwW: [],
        nW: nW,
        vmmvv: vmmvv,
        wMvvN: wMvvN,
        wnN: wnN,
        vwvVn: vwvVn,
        VMMNN: VMMNN,
        WNVmv: WNVmv,
        vNNnV: vNNnV,
        Mwvmm: Mwvmm,
        vVvmV: vVvmV,
        nVmnM: 480000,
        Mwm: 0,
        mwn: 0,
        mwV: mwV,
        Wvm: Wvm,
        mnVvm: mnVvm,
        vnVnM: vnVnM,
        vwMvM: vwMvM
      };
    }();
    var nNV = function () {
      var Vwmwm = 0;
      var wVN = [];
      var nNn = [];
      var VNMVv = [];
      var mNvWV = 0;
      function nvM(VVvww, mnMmV, NVNmW) {
        nNV.mnMmV = mnMmV === undefined ? 0 : mnMmV;
        nNV.NVNmW = NVNmW === undefined ? 0 : NVNmW;
        mNvWV = nNV.NVNmW + nNV.mnMmV;
        Vwmwm = nWw[VM[126]];
        var MwV = nWw[VM[126]] + 1;
        for (var Wv = 0; Wv < MwV; Wv++) {
          nNn[Wv] = new mmWMn.mmWMn(VVvww);
          wVN[Wv] = [];
          for (var mM = 0; mM < VVvww; mM++) {
            wVN[Wv][mM] = nNV[VM[26]](Wv);
          }
        }
      }
      ;
      ;
      function NVWvV(vv) {
        return new MMWnn(vv);
      }
      ;
      ;
      function VvMmw() {
        for (var Wv = 0; Wv < nWw[VM[126]]; Wv++) {
          nNn[Wv][VM[216]] = 0;
        }
        VNMVv = [];
      }
      ;
      ;
      function WnM(nMV, MV, MWV, vv, mmwwm) {
        var Wv = 0;
        var WVnvN = (nMV === 0 ? 0 : mNvWV) + nMV * nNV.vWVNn + MV;
        var vw = VNMVv[WVnvN];
        if (vw !== undefined && vw[VM[60]] === vv && vw.MWV === MWV) {
          VNMVv[WVnvN] = undefined;
        }
        var N = nNn[vv];
        var WNvmw = wVN[vv];
        var MwV = N[VM[216]];
        for (Wv = 0; Wv < MwV; Wv++) {
          var vw = WNvmw[N.Wmn[Wv]];
          if (vw.MWV === MWV && vw.nMV === nMV && vw[VM[5]] === MV) {
            mmWMn.VNWmM(N, Wv);
            if (nWw[vw[VM[60]]][VM[16]] > 0 && mmwwm === 1) {
              var NWmmw = wVN[Vwmwm][mmWMn.vNVNm(nNn[Vwmwm])];
              for (var mM in vw) {
                NWmmw[mM] = vw[mM];
              }
              NWmmw.mNM = 1;
            }
            return;
          }
        }
      }
      ;
      ;
      function MWM(nMV, MV, MWV, vv) {
        var WVnvN = (nMV === 0 ? 0 : mNvWV) + nMV * nNV.vWVNn + MV;
        var vw = VNMVv[WVnvN];
        if (vw === undefined || vw.MWV !== MWV) {
          var MNMWn = mmWMn.vNVNm(nNn[vv]);
          vw = wVN[vv][MNMWn];
          if (vw === undefined) {
            console[VM[172]]("Memory Warn: new entitie created");
            wVN[vv][MNMWn] = nNV[VM[26]](vv);
            vw = wVN[vv][MNMWn];
          }
          VNMVv[WVnvN] = vw;
          vw[VM[109]] = 0;
          vw.mNM = 0;
        }
        return vw;
      }
      ;
      ;
      function WmnWv() {
        var N = nNn[Vwmwm];
        var WNvmw = wVN[Vwmwm];
        var MwV = N[VM[216]];
        for (Wv = 0; Wv < MwV; Wv++) {
          var vw = WNvmw[N.Wmn[Wv]];
          if (vw.mNM !== 1) {
            mmWMn.VNWmM(N, Wv);
            MwV--;
            Wv--;
          }
        }
      }
      ;
      ;
      function NvNmW(vv, nMV, MV) {
        var WNvmw = wVN[vv];
        var N = nNn[vv];
        var MwV = N[VM[216]];
        for (var Wv = 0; Wv < MwV; Wv++) {
          var Mm = WNvmw[N.Wmn[Wv]];
          if (Mm[VM[5]] === MV && Mm.nMV === nMV) {
            return Mm;
          }
        }
        return null;
      }
      ;
      ;
      return {
        nvM: nvM,
        create: NVWvV,
        get: MWM,
        NvNmW: NvNmW,
        remove: WnM,
        VvMmw: VvMmw,
        wVN: wVN,
        border: nNn,
        WmnWv: WmnWv,
        vWVNn: 0,
        mnMmV: 0,
        NVNmW: 0
      };
    }();
    var nWw = [{
      wnN: {
        WW: {
          WWV: 255,
          NmM: 0.005,
          mVv: 0.005
        },
        NwN: {
          WWV: 255,
          NmM: 0.0012,
          mVv: 0.0012
        },
        NMv: {
          WWV: 255,
          NmM: 0.0035,
          mVv: 0.005
        },
        wNn: {
          WWV: 255,
          NmM: 0.024,
          mVv: 0.003
        },
        VNW: {
          WWV: 255,
          NmM: 0.03,
          mVv: 0.015
        }
      },
      wnnWM: [{
        head: {
          src: "img/day-skin0.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm0.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm0.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-skin1.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm0.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm0.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-skin2.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm2.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm2.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-skin3.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm2.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm2.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-skin4.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm4.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm4.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-skin5.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm4.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm4.png",
          m: {
            n: 0
          }
        }
      }],
      wWmWN: [{}, {
        head: {
          src: "img/day-headscarf.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-chapka.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-chapka.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-chapka.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-coat.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-coat.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-coat.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-gaz-mask.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-gaz-protection.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-gaz-protection.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-gaz-protection.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-radiation-suit.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-radiation-suit.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-radiation-suit.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-metal-helmet.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-welding-helmet.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-welding-helmet.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-welding-helmet.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-gladiator-helmet.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-gladiator-armor.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-gladiator-armor.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-leather-jacket.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-leather-jacket.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-leather-jacket.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-kevlar-suit.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-kevlar-suit.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-kevlar-suit.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-SWAT-suit.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-SWAT-suit.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-SWAT-suit.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-protective-suit.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-protective-suit.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-protective-suit.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-tesla-0.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-tesla-0.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-tesla-0.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-tesla-armor.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-tesla-armor.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-tesla-armor.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-camouflage-gear.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-camouflage-gear.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-camouflage-gear.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-christmas-hat.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-deer-hat.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-snowman-hat.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-snowman-hat.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-snowman-hat.png",
          m: {
            n: 0
          }
        }
      }, {
        head: {
          src: "img/day-elf-hat.png",
          m: {
            n: 0
          }
        },
        Vmm: {
          src: "img/day-left-arm-elf-hat.png",
          m: {
            n: 0
          }
        },
        WWN: {
          src: "img/day-right-arm-elf-hat.png",
          m: {
            n: 0
          }
        }
      }],
      vWNnw: {
        src: "img/day-run-effect.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-dead-player.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/hurt-player.png",
        m: {
          n: 0
        }
      },
      wNV: {
        src: "img/heal-player.png",
        m: {
          n: 0
        }
      },
      NwN: {
        src: "img/food-player.png",
        m: {
          n: 0
        }
      },
      WMNWv: [{
        src: "img/day-shotgun-cartridge.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-9mm-cartridge.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-AK47-cartridge.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-crossbow-cartridge.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-nails-cartridge.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-cells-cartridge.png",
        m: {
          n: 0
        }
      }],
      VvvVW: [[{
        src: "img/day-bullet1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bullet2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bullet2l.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-bullet3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bullet4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bullet4l.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-bullet5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bullet6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bullet6l.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-wood-arrow.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-arrow1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-arrowl.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-wood-spear0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-spear1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-spearl.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-wood-crossarrow.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-crossarrow1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-crossarrowl.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-nail1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-nail2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-nail2l.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-laser0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-laser1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-laser1l.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-grenade0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-grenade1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-grenadel.png",
        m: {
          n: 0
        }
      }]],
      mNn: [[{
        src: "img/day-gun-effect0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-gun-effect1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-gun-effect2.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-laser-effect0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-laser-effect1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-laser-effect2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-laser-effect3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-laser-effect4.png",
        m: {
          n: 0
        }
      }]],
      NMmnw: [{
        type: 0,
        id: 0,
        NmW: 0,
        WWN: {
          angle: 0,
          x: 22,
          y: 39
        },
        Vmm: {
          angle: 0,
          x: 22,
          y: -39
        },
        mVn: 0,
        MVW: 0.5,
        NVN: 3,
        NmV: ["audio/hand-swing0.mp3", "audio/hand-swing2.mp3", "audio/hand-swing3.mp3"],
        NV: 0.05,
        VN: 3,
        mVw: 300,
        Vvm: 301,
        WWn: 150,
        wmw: 20,
        vWwVw: 3,
        NwW: 10,
        VNW: 2,
        NnV: 30,
        wwNww: 0,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/pickaxe-swing.mp3"],
        VV: {
          src: "img/day-stone-pickaxe.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 30,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 800,
        VvmnV: 800,
        Vvm: 801,
        WWn: 650,
        wmw: 45,
        vWwVw: 16,
        NwW: 15,
        VNW: 5,
        NnV: 50,
        nMW: 56,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/pickaxe-swing.mp3"],
        VV: {
          src: "img/day-steel-pickaxe.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 30,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 800,
        VvmnV: 800,
        Vvm: 801,
        WWn: 650,
        wmw: 55,
        vWwVw: 22,
        NwW: 15,
        VNW: 5,
        NnV: 50,
        nMW: 56,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/hatchet-swing.mp3"],
        VV: {
          src: "img/day-hachet.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 30,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 500,
        VvmnV: 500,
        Vvm: 501,
        WWn: 350,
        wmw: 30,
        vWwVw: 7,
        NwW: 10,
        VNW: 4,
        NnV: 40,
        nMW: 59,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/axe-swing.mp3"],
        VV: {
          src: "img/day-stone-axe.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 30,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.05,
        VN: 3,
        mVw: 650,
        Vvm: 651,
        WWn: 550,
        wmw: 50,
        vWwVw: 26,
        NwW: 20,
        VNW: 4,
        NnV: 46,
        nMW: 72,
        vNN: 0,
        Nn: 0
      }, {
        type: 3,
        id: 0,
        NmW: 1,
        mVn: 0.75,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/spear-shot.mp3"],
        VV: {
          src: "img/day-wood-spear.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 25,
          y: 40
        },
        WWN: {
          angle: 0,
          x: 10,
          y: 44
        },
        Vmm: {
          angle: 0,
          x: 22,
          y: -39
        },
        wmn: [0],
        mWV: 4,
        wMv: 0.5,
        VVn: 1,
        path: 600,
        wmw: 80,
        NwW: 30,
        NV: 0.05,
        mNMWm: 2,
        VN: 3,
        mVw: 850,
        Vvm: 100,
        WWn: 100,
        VNW: 15,
        x: -40,
        nMW: 47,
        Wmw: 60,
        vNN: 0,
        Nn: 0
      }, {
        type: 4,
        id: 0,
        NmW: 1,
        WVNvw: {
          src: "img/day-wood-arrow1.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        mVn: 1.08,
        MVW: 1.4,
        NVN: 1,
        NmV: ["audio/bow-shot.mp3"],
        VV: {
          src: "img/day-wood-bow.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 44,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 10,
          y: 44
        },
        Vmm: {
          angle: 0,
          x: 40,
          y: -30
        },
        wmw: 40,
        NwW: 10,
        wmn: [0],
        mWV: 3,
        wMv: 0.75,
        VVn: 1,
        path: 800,
        NV: 0.5,
        mNMWm: 1,
        VN: 1,
        mVw: 1200,
        Vvm: 120,
        WWn: 100,
        VNW: 8,
        x: -1,
        nMW: 47,
        Wmw: -8,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 43,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/shotgun-shot.mp3"],
        VV: {
          src: "img/day-shotgun.png",
          m: {
            n: 0
          },
          x: 60,
          y: 0
        },
        wmw: 21,
        NwW: 20,
        mNn: 0,
        wwN: 0,
        vNVvW: 500,
        Vwm: 3,
        mVM: 4,
        wmv: 3,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0, 0.1, -0.1, 0.2, -0.2],
        mWV: 2,
        wMv: 1.1,
        VVn: 1,
        MvNMN: 8,
        reload: 10,
        MVnmv: 1,
        Wmw: 58,
        NV: 1,
        VN: 2,
        mVw: 900,
        Vvm: 901,
        VNW: 0,
        x: 0,
        path: 600,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/9mm-shot.mp3"],
        VV: {
          src: "img/day-9mm.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 28,
        NwW: 10,
        mNn: 0,
        wwN: 1,
        vNVvW: 400,
        Vwm: 2,
        mVM: 1,
        wmv: 2,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 0,
        wMv: 1.2,
        VVn: 1,
        MvNMN: 20,
        reload: 22,
        MVnmv: 0,
        Wmw: 40,
        NV: 1,
        VN: 2,
        mVw: 400,
        Vvm: 401,
        VNW: 0,
        x: 0,
        path: 800,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        mVn: 0,
        MVW: 1.3,
        NVN: 1,
        NmV: ["audio/desert-eagle-shot.mp3"],
        VV: {
          src: "img/day-desert-eagle.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 40,
        NwW: 25,
        mNn: 0,
        wwN: 1,
        vNVvW: 400,
        Vwm: 2,
        mVM: 1,
        wmv: 2,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 0,
        wMv: 1.4,
        VVn: 1,
        MvNMN: 7,
        reload: 22,
        MVnmv: 0,
        Wmw: 40,
        NV: 1,
        VN: 2,
        mVw: 400,
        Vvm: 401,
        VNW: 0,
        x: 0,
        path: 900,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 43,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/ak47-shot.mp3"],
        VV: {
          src: "img/day-AK47.png",
          m: {
            n: 0
          },
          x: 60,
          y: 0
        },
        wmw: 30,
        NwW: 25,
        mNn: 0,
        wwN: 2,
        vNVvW: 500,
        Vwm: 3,
        mVM: 2,
        wmv: 4,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 1,
        wMv: 1.4,
        VVn: 1,
        MvNMN: 30,
        reload: 25,
        MVnmv: 0,
        Wmw: 58,
        NV: 1,
        VN: 2,
        mVw: 120,
        Vvm: 121,
        VNW: 0,
        x: 0,
        path: 900,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 43,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/sniper-shot.mp3"],
        VV: {
          src: "img/day-sniper.png",
          m: {
            n: 0
          },
          x: 60,
          y: 0
        },
        wmw: 90,
        NwW: 30,
        mNn: 0,
        wwN: 2,
        vNVvW: 500,
        Vwm: 3,
        mVM: 1,
        wmv: 4,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 1,
        wMv: 1.5,
        VVn: 1,
        MvNMN: 10,
        reload: 20,
        MVnmv: 0,
        Wmw: 70,
        NV: 1,
        VN: 2,
        mVw: 1250,
        Vvm: 1251,
        VNW: 0,
        x: 0,
        path: 1100,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-raw-steak.png",
          m: {
            n: 0
          },
          angle: 1,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 20,
        NwN: 30,
        MVm: 0,
        vmw: 20,
        wNV: -10,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-cooked-steak.png",
          m: {
            n: 0
          },
          angle: 1,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 4,
        NV: 0.4,
        VN: 0.8,
        VNW: 0,
        Vnw: 200,
        wait: 20,
        NwN: 127,
        MVm: 0,
        vmw: 80,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-steak.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 20,
        NwN: 15,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-orange.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 40,
        MVm: 0,
        vmw: 10,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-orange.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 5,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-medikit.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 55,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 32
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -32
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 25,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: 200,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-bandage.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: 60,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-soda.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 30,
        MVm: 0,
        vmw: 155,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 43,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/mp5-shot.mp3"],
        VV: {
          src: "img/day-MP5.png",
          m: {
            n: 0
          },
          x: 60,
          y: 0
        },
        wmw: 18,
        NwW: 15,
        mNn: 0,
        wwN: 1,
        vNVvW: 500,
        Vwm: 3,
        mVM: 2,
        wmv: 4,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 0,
        wMv: 1.2,
        VVn: 1,
        MvNMN: 30,
        reload: 26,
        MVnmv: 0,
        Wmw: 52,
        NV: 1,
        VN: 2,
        mVw: 100,
        Vvm: 101,
        VNW: 0,
        x: 0,
        path: 900,
        nMW: 47,
        Nn: 0
      }, {
        type: 6,
        id: 0,
        NmW: 0,
        WWN: {
          angle: 0,
          x: 22,
          y: 39
        },
        Vmm: {
          angle: 0,
          x: 22,
          y: -39
        },
        NV: 0.05,
        VN: 3,
        wwNww: 0,
        Nnw: {
          src: "img/day-hand-craft.png",
          m: {
            n: 0
          }
        },
        WwVWV: {
          src: "img/day-hand-craftpencil.png",
          m: {
            n: 0
          }
        },
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/pickaxe-swing.mp3"],
        VV: {
          src: "img/day-sulfur-pickaxe.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 20,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 800,
        VvmnV: 800,
        Vvm: 801,
        WWn: 650,
        wmw: 65,
        vWwVw: 30,
        NwW: 15,
        VNW: 5,
        NnV: 50,
        nMW: 56,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/hammer-swing.mp3"],
        VV: {
          src: "img/day-hammer.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 25,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 1100,
        VvmnV: 1100,
        Vvm: 1101,
        WWn: 950,
        wmw: 120,
        vWwVw: 30,
        NwW: 30,
        VNW: 15,
        NnV: 40,
        nMW: 56,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-repair-hammer.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 20,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 700,
        VvmnV: 700,
        Vvm: 701,
        WWn: 550,
        wmw: 40,
        vWwVw: 15,
        NwW: 10,
        VNW: 6,
        NnV: 40,
        nMW: 59,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-tomato-soup.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 30,
        NwN: 160,
        MVm: 0,
        vmw: 40,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-radaway.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 25
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -25
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 30,
        NwN: 0,
        MVm: 255,
        vmw: 30,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-tomato.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 50,
        MVm: 0,
        vmw: 10,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-tomato.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 5,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/crossbow-shot.mp3"],
        VV: {
          src: "img/day-wood-crossbow.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 50,
        NwW: 15,
        mNn: 0,
        wwN: 3,
        vNVvW: 400,
        Vwm: 2,
        mVM: 1,
        wmv: 2,
        mvV: 1,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 5,
        wMv: 0.95,
        VVn: 1,
        MvNMN: 1,
        reload: 8,
        MVnmv: 0,
        Wmw: 40,
        NV: 1,
        VN: 2,
        mVw: 400,
        Vvm: 401,
        VNW: 12,
        x: 0,
        path: 800,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/nail-gun-shot.mp3"],
        VV: {
          src: "img/day-nail-gun.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 6,
        NwW: 10,
        mNn: 0,
        wwN: 4,
        vNVvW: 400,
        Vwm: 2,
        mVM: 1,
        wmv: 2,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 6,
        wMv: 1,
        VVn: 1,
        MvNMN: 80,
        reload: 30,
        MVnmv: 0,
        Wmw: 52,
        NV: 1,
        VN: 2,
        mVw: 300,
        Vvm: 301,
        VNW: 0,
        x: 0,
        path: 500,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 43,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/shotgun-shot.mp3"],
        VV: {
          src: "img/day-sawed-off-shotgun.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 28,
        NwW: 30,
        mNn: 0,
        wwN: 0,
        vNVvW: 500,
        Vwm: 3,
        mVM: 4,
        wmv: 3,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0, 0.12, -0.12, 0.24, -0.24],
        mWV: 2,
        wMv: 1.11,
        VVn: 1,
        MvNMN: 8,
        reload: 10,
        MVnmv: 1,
        Wmw: 53,
        NV: 1,
        VN: 2,
        mVw: 900,
        Vvm: 901,
        VNW: 0,
        x: 0,
        path: 400,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-chips.png",
          m: {
            n: 0
          },
          angle: 1,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 4,
        NV: 0.4,
        VN: 0.8,
        VNW: 0,
        Vnw: 200,
        wait: 20,
        NwN: 90,
        MVm: 0,
        vmw: 50,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-chips.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 5,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/laser-pistol-shot.mp3"],
        VV: {
          src: "img/day-laser-pistol.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 55,
        NwW: 0,
        mNn: 1,
        wwN: 5,
        vNVvW: 400,
        Vwm: 2,
        mVM: 1,
        wmv: 2,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 7,
        wMv: 1.45,
        VVn: 2,
        MvNMN: 12,
        reload: 22,
        MVnmv: 0,
        Wmw: 50,
        NV: 1,
        VN: 2,
        mVw: 400,
        Vvm: 401,
        VNW: 0,
        x: 0,
        path: 900,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 0.8,
        NVN: 1,
        NmV: ["audio/axe-swing.mp3"],
        VV: {
          src: "img/day-sulfur-axe.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 30,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.05,
        VN: 3,
        mVw: 650,
        Vvm: 651,
        WWn: 550,
        wmw: 50,
        vWwVw: 30,
        NwW: 20,
        VNW: 4,
        NnV: 46,
        nMW: 72,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-joystick.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 2,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: 0,
        Mwn: 0,
        vNN: 0,
        Nn: 1
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/laser-submachine-shot.mp3"],
        VV: {
          src: "img/day-laser-submachine.png",
          m: {
            n: 0
          },
          x: 50,
          y: 0
        },
        wmw: 45,
        NwW: 0,
        mNn: 1,
        wwN: 5,
        vNVvW: 500,
        Vwm: 3,
        mVM: 2,
        wmv: 4,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 7,
        wMv: 1.45,
        VVn: 2,
        MvNMN: 30,
        reload: 25,
        MVnmv: 0,
        Wmw: 54,
        NV: 1,
        VN: 2,
        mVw: 160,
        Vvm: 161,
        VNW: 0,
        x: 0,
        path: 900,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 3,
        id: 0,
        NmW: 1,
        VV: {
          src: "img/day-hand-grenade.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 25,
          y: 50
        },
        WWN: {
          angle: 0,
          x: 10,
          y: 44
        },
        Vmm: {
          angle: 0,
          x: 22,
          y: -39
        },
        wmn: [0],
        mWV: 8,
        wMv: 0.4,
        VVn: 1,
        path: 380,
        wmw: 15,
        NwW: 5,
        NV: 0.05,
        mNMWm: 2,
        VN: 3,
        mVw: 850,
        Vvm: 100,
        WWn: 100,
        VNW: 15,
        x: -50,
        nMW: 47,
        Wmw: 25,
        vNN: 0,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-super-hammer.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 25,
          y: 5,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        mVw: 1100,
        VvmnV: 1100,
        Vvm: 1101,
        WWn: 950,
        wmw: 1000,
        vWwVw: 255,
        NwW: 30,
        VNW: 15,
        NnV: 40,
        nMW: 56,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-ghoul-drug.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 13
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 30,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: -10,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-mushroom1.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 0,
        MVm: 0,
        vmw: 10,
        wNV: -20,
        Mwn: 12,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-mushroom2.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 40,
        MVm: 0,
        vmw: 10,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-mushroom3.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 40,
        MVm: 0,
        vmw: 10,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-mushroom1.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 8,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-mushroom2.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 5,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-mushroom3.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 5,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-lapadoine.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 13
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 30,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: -10,
        Mwn: 2,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-pumpkin.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 25
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -25
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 20,
        NwN: 90,
        MVm: 0,
        vmw: 20,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-pumpkin.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 25
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -25
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 30,
        MVm: 0,
        vmw: 0,
        wNV: -40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-antidote.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 13
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -13
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 30,
        NwN: 0,
        MVm: 0,
        vmw: 0,
        wNV: 50,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-acorn.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 15,
        MVm: 0,
        vmw: 0,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        mVn: 0,
        MVW: 1,
        NVN: 3,
        NmV: 1,
        VV: {
          src: "img/day-hand-rotten-acorn.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 2,
        MVm: 0,
        vmw: 0,
        wNV: -20,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 2,
        id: 0,
        NmW: 1,
        WWN: {
          angle: 0,
          x: 32,
          y: 15
        },
        Vmm: {
          angle: 0,
          x: 43,
          y: -13
        },
        mVn: 0,
        MVW: 1,
        NVN: 1,
        NmV: ["audio/laser-sniper-shot.mp3"],
        VV: {
          src: "img/day-laser-sniper.png",
          m: {
            n: 0
          },
          x: 55,
          y: 0
        },
        wmw: 100,
        NwW: 0,
        mNn: 1,
        wwN: 5,
        vNVvW: 500,
        Vwm: 3,
        mVM: 1,
        wmv: 4,
        mvV: 0,
        wvVVW: 0,
        Vwvnm: 0,
        wmn: [0],
        mWV: 7,
        wMv: 1.5,
        VVn: 2,
        MvNMN: 10,
        reload: 20,
        MVnmv: 0,
        Wmw: 70,
        NV: 1,
        VN: 2,
        mVw: 1250,
        Vvm: 1251,
        VNW: 0,
        x: 0,
        path: 1100,
        nMW: 47,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-christmas-cake.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 127,
        MVm: 0,
        vmw: 30,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-rotten-christmas-cake.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 10,
        MVm: 0,
        vmw: 0,
        wNV: -20,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-gingerbread-man.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 20,
        MVm: 0,
        vmw: 20,
        wNV: 40,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-rotten-gingerbread-man.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 10,
        MVm: 0,
        vmw: 0,
        wNV: -20,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }, {
        type: 1,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-sugar-can.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 30,
          y: 0,
          VNm: 4,
          x2: 20,
          y2: 10
        },
        WWN: {
          angle: 0,
          x: 33,
          y: 28,
          nMW: 8,
          VNm: 1.8
        },
        Vmm: {
          angle: 0,
          x: 30,
          y: -28,
          nMW: -14,
          VNm: 1
        },
        NV: 0.02,
        VN: 2,
        VvmnV: 650,
        mVw: 650,
        Vvm: 651,
        WWn: 550,
        wmw: 60,
        vWwVw: 38,
        NwW: 20,
        VNW: 16,
        NnV: 50,
        nMW: 56,
        vNN: 0,
        Nn: 0
      }, {
        type: 5,
        id: 0,
        NmW: 0,
        VV: {
          src: "img/day-hand-sugar-can-bow.png",
          m: {
            n: 0
          },
          angle: 0,
          x: 50,
          y: 0
        },
        WWN: {
          angle: 0,
          x: 32,
          y: 10
        },
        Vmm: {
          angle: 0,
          x: 32,
          y: -10
        },
        Vwm: 3,
        NV: 0.02,
        VN: 2,
        VNW: 0,
        Vnw: 200,
        wait: 10,
        NwN: 30,
        MVm: 0,
        vmw: 50,
        wNV: 0,
        Mwn: 0,
        vNN: 1,
        Nn: 0
      }],
      vvVWN: {
        w: 24,
        nVV: 24
      },
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0.23,
      nnmMv: 0.35,
      nwmwN: 0.08,
      mnwwn: 0.08,
      nVNVv: 0.08,
      NmMnm: 0.05,
      VNwmm: 0,
      remove: 1000,
      z: 0,
      WW: 0,
      VWVVV: 8,
      vmm: 0.15,
      VWw: -1
    }, {
      vvVWN: {
        w: 0,
        nVV: 0
      },
      NnV: 50,
      Vvnmn: 0,
      MnWWw: 0,
      MvmNV: 0,
      wVV: 0,
      mMw: 0.2,
      VNwmm: 2,
      remove: 1000,
      z: 0,
      WW: 0,
      vmm: 0.1,
      VWw: 20000
    }, {
      vvVWN: {
        w: 0,
        nVV: 0
      },
      NnV: 4,
      Vvnmn: 0,
      MnWWw: 0,
      MvmNV: 0,
      wVV: 0,
      mMw: 1,
      VNwmm: 2,
      remove: 1000,
      z: 0,
      WW: 0,
      vmm: 0.2,
      VWw: -1
    }, {
      vvVWN: {
        w: 0,
        nVV: 0
      },
      Vvnmn: 0,
      MnWWw: 0,
      MvmNV: 0,
      wVV: 0,
      mMw: 0,
      WW: 0,
      remove: 1000,
      z: 0,
      vmm: 0.2,
      VNwmm: 1,
      VWw: -1
    }, {
      vvVWN: {
        w: 0,
        nVV: 0
      },
      Vvnmn: 0,
      MnWWw: 0,
      MvmNV: 0,
      wVV: 0,
      mMw: 0,
      WW: 0,
      remove: 1000,
      z: 0,
      vmm: 0.2,
      VNwmm: 1,
      VWw: -1
    }, {
      vvVWN: {
        w: 0,
        nVV: 0
      },
      Vvnmn: 0,
      MnWWw: 0,
      MvmNV: 0,
      wVV: 0,
      mMw: 0,
      WW: 0,
      remove: 1000,
      z: 0,
      vmm: 0.2,
      VNwmm: 1,
      VWw: -1
    }, {
      vvVWN: {
        w: 0,
        nVV: 0
      },
      Vvnmn: 0,
      MnWWw: 0,
      MvmNV: 0,
      wVV: 0,
      mMw: 0,
      WW: 0,
      remove: 1000,
      z: 0,
      vmm: 0.2,
      VNwmm: 1,
      VWw: -1
    }, {
      mMw: 0.7,
      WW: 0,
      z: 0,
      vmm: 0.2
    }, {
      vvVWN: {
        w: 24,
        nVV: 24
      },
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0,
      VNwmm: 0,
      remove: 1000,
      z: 1,
      WW: 0,
      vmm: 0.15,
      VWw: 1800000
    }, {
      vvVWN: {
        w: 24,
        nVV: 24
      },
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0,
      VNwmm: 0,
      remove: 1000,
      z: 1,
      WW: 0,
      vmm: 0.15,
      VWw: 1800000
    }, {
      vvVWN: {
        w: 24,
        nVV: 24
      },
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0,
      VNwmm: 0,
      remove: 1000,
      z: 1,
      WW: 0,
      vmm: 0.15,
      VWw: 1800000
    }, {
      vvVWN: {
        w: 24,
        nVV: 24
      },
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0,
      VNwmm: 0,
      remove: 1000,
      z: 1,
      WW: 0,
      vmm: 0.15,
      VWw: 1800000
    }, {
      vvVWN: {
        w: 24,
        nVV: 24
      },
      Wvnww: [{
        src: "img/day-explosion0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-explosion9.png",
        m: {
          n: 0
        }
      }],
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0,
      VNwmm: 2,
      remove: 0,
      z: 1,
      WW: 64000,
      vmm: 0.15,
      VWw: 1500
    }, {
      vvVWN: {
        w: 24,
        nVV: 24
      },
      NnV: 38,
      mnWmN: 40,
      Vvnmn: 36,
      MnWWw: 36,
      MvmNV: 36,
      wVV: 36,
      mMw: 0.23,
      nnmMv: 0.35,
      nwmwN: 0.08,
      NmMnm: 0.05,
      VNwmm: 0,
      remove: 1000,
      z: 0,
      WW: 0,
      VWVVV: 8,
      vmm: 0.15,
      VWw: -1
    }];
    function MMWnn(vv) {
      this.MWV = 0;
      this.nMV = 0;
      this[VM[5]] = 0;
      this[VM[60]] = vv;
      this.nvm = 0;
      this[VM[246]] = 0;
      this.nvnNW = 0;
      this.VnwnV = 0;
      this.Wvnmw = 0;
      this[VM[102]] = 0;
      this.MNM = 0;
      this.WnN = 0;
      this[VM[232]] = 0;
      this[VM[249]] = 0;
      this[VM[150]] = 0;
      this[VM[169]] = 0;
      this.NWN = -1;
      this.vVw = 0;
      this.MvwWn = 0;
      this.vNwwv = 0;
      this.Wv = 0;
      this.mM = 0;
      this.mMw = 0;
      this[VM[109]] = 0;
      this.mNM = 0;
      this.wnn = 0;
      this.wnM = 0;
      this.MvW = 0;
      this.NNw = 0;
      this.wNV = 0;
      this.VnV = 0;
      this.NNv = 0;
      this.NV = 0;
      this.wVv = 0;
      this.NNW = [];
      this.Mw = null;
      for (var Wv = 0; Wv < 10; Wv++) {
        this.NNW[VM[154]]({
          c: 0,
          V: 0,
          vWvmn: 0,
          VNwnn: 0,
          NWM: 0,
          r: 0
        });
      }
      this.vmm = 0.1;
    }
    ;
    ;
    function mvvMm(vw, nMV, MWV, MV, vv, nN, wn, NWN, vVw, MNM, VW, WwN) {
      vw.nMV = nMV;
      vw.MWV = MWV;
      vw[VM[5]] = MV;
      vw.nvnNW = wMM.vWNnM(vw[VM[246]], VW * 2 * Math[VM[99]] / 255);
      vw[VM[102]] = WwN;
      vw.NWN = NWN;
      vw.vVw = vVw;
      vw.MNM = MNM;
      if (vw[VM[109]] === 0) {
        var nnV = nWw[vv];
        vw.mMw = nnV.mMw;
        vw[VM[246]] = vw.nvnNW;
        vw[VM[232]] = nN;
        vw[VM[249]] = wn;
        vw[VM[103]] = nnV[VM[103]];
        vw.vmm = nnV.vmm;
        vw[VM[150]] = nN;
        vw[VM[169]] = wn;
        vw.Wv = Math[VM[61]](wn / Vw.wVw);
        vw.mM = Math[VM[61]](nN / Vw.wVw);
        vw.wnn = 0;
        vw.wnM = 0;
        vw.MvW = 0;
        vw.wvv = 0;
        vw.NNw = 0;
        vw.wNV = 0;
        vw.VnV = 0;
        vw.NV = 0;
        vw.wVv = 0;
        vw.NNv = 0;
        vw.WnN = 0;
        vw.nvm = 0;
        vw.Mw = null;
        var nvM = nnV.nvM;
        if (nvM !== undefined) {
          nvM(vw);
        }
      }
      var VW = vVV[VM[246]](vw[VM[150]], vw[VM[169]], NWN, vVw);
      vw.VnwnV = Math[VM[178]](VW);
      vw.Wvnmw = Math[VM[142]](VW);
      vw[VM[109]] = 1;
    }
    ;
    ;
    var mmWMn = function () {
      function vNVNm(N) {
        if (N[VM[216]] === N[VM[242]]) {
          N.Wmn[N[VM[242]]] = N[VM[242]];
          N.mMnnM[N[VM[242]]] = N[VM[242]];
          N[VM[242]]++;
        }
        return N.Wmn[N[VM[216]]++];
      }
      ;
      ;
      function Wvvmm(N) {
        if (N[VM[216]] < N[VM[242]]) {
          return N.Wmn[N[VM[216]]++];
        }
        return -1;
      }
      ;
      ;
      function VNWmM(N, vVmVW) {
        N[VM[216]]--;
        var mWVmW = N.Wmn[N[VM[216]]];
        N.Wmn[N[VM[216]]] = N.Wmn[vVmVW];
        N.Wmn[vVmVW] = mWVmW;
      }
      ;
      ;
      function vwwmw(N, wwmvN) {
        N[VM[216]]--;
        var mWVmW = N.Wmn[N[VM[216]]];
        var NMwWn = N.mMnnM[wwmvN];
        N.Wmn[N[VM[216]]] = wwmvN;
        N.Wmn[NMwWn] = mWVmW;
        N.mMnnM[mWVmW] = NMwWn;
        N.mMnnM[wwmvN] = N[VM[216]];
      }
      ;
      ;
      function mmWMn(NvV) {
        this[VM[242]] = NvV;
        this[VM[216]] = 0;
        this.Wmn = [];
        this.mMnnM = [];
        for (var Wv = 0; Wv < NvV; Wv++) {
          this.Wmn[Wv] = Wv;
          this.mMnnM[Wv] = Wv;
        }
      }
      ;
      ;
      function NVVNM(NvV) {
        var nNn = new mmWMn(NvV);
        var Wmn = nNn.Wmn;
        var wmwMm = new Array(NvV);
        this[VM[126]] = 0;
        this[VM[158]] = function mVWVW() {
          nNn[VM[216]] = 0;
          this[VM[126]] = 0;
        };
        this[VM[175]] = function WVMmW(NNM) {
          wmwMm[vNVNm(nNn)] = NNM;
          this[VM[126]]++;
        };
        this[VM[16]] = function WnM(NNM) {
          for (var Wv = 0; Wv < this[VM[126]]; Wv++) {
            if (wmwMm[Wmn[Wv]] === NNM) {
              VNWmM(nNn, Wv);
              this[VM[126]]--;
              return;
            }
          }
        };
        this[VM[206]] = function MWM(Wv) {
          return wmwMm[Wmn[Wv]];
        };
      }
      ;
      ;
      function mvNMw(NvV) {
        var nNn = new mmWMn(NvV);
        var Wmn = nNn.Wmn;
        var wmwMm = new Array(NvV);
        var Wv = 0;
        var vwMMW = [];
        for (Wv = 0; Wv < NvV; Wv++) {
          vwMMW[Wv] = -1;
        }
        this[VM[126]] = 0;
        this[VM[158]] = function mVWVW() {
          nNn[VM[216]] = 0;
          this[VM[126]] = 0;
        };
        this[VM[175]] = function WVMmW(NNM) {
          var mm = vNVNm(nNn);
          wmwMm[mm] = NNM;
          vwMMW[NNM] = nNn[VM[216]] - 1;
          this[VM[126]]++;
        };
        this[VM[16]] = function WnM(NNM) {
          var mm = vwMMW[NNM];
          if (mm === -1) {
            return;
          }
          vwMMW[NNM] = -1;
          VNWmM(nNn, mm);
          this[VM[126]]--;
          if (this[VM[126]] > 0) {
            vwMMW[wmwMm[Wmn[mm]]] = mm;
          }
        };
        this[VM[206]] = function MWM(Wv) {
          return wmwMm[Wmn[Wv]];
        };
      }
      ;
      ;
      return {
        mmWMn: mmWMn,
        mvNMw: mvNMw,
        NVVNM: NVVNM,
        Wvvmm: Wvvmm,
        vNVNm: vNVNm,
        vwwmw: vwwmw,
        VNWmM: VNWmM
      };
    }();
    var WWVNV = function () {
      function WVvvw(mwVnV) {
        var VNwnn = 2147483648;
        var Mww = 1103515245;
        var mnN = 12345;
        var WwN = mwVnV ? mwVnV : Math[VM[61]](Math[VM[185]]() * (VNwnn - 1));
        this.nvM = function (mwVnV) {
          WwN = mwVnV ? mwVnV : Math[VM[61]](Math[VM[185]]() * (VNwnn - 1));
        };
        this[VM[206]] = function () {
          WwN = (Mww * WwN + mnN) % VNwnn;
          return WwN / VNwnn;
        };
      }
      ;
      ;
      return {
        WVvvw: WVvvw
      };
    }();
    var vWnVV = function () {
      function WmnNW(wwV, nwVMW, Vwmmn, VvW, VNnMn) {
        var MwmmM = VvW;
        var VVNNm = wwV[Vwmmn];
        var wvvVn = wwV[Vwmmn];
        wwV[Vwmmn] = wwV[VNnMn];
        wwV[VNnMn] = wvvVn;
        for (var WNNVV = VvW; WNNVV < VNnMn; WNNVV++) {
          if (nwVMW(wwV[WNNVV], VVNNm) <= 0) {
            var wvvVn = wwV[WNNVV];
            wwV[WNNVV] = wwV[MwmmM];
            wwV[MwmmM] = wvvVn;
            MwmmM++;
          }
        }
        var wvvVn = wwV[VNnMn];
        wwV[VNnMn] = wwV[MwmmM];
        wwV[MwmmM] = wvvVn;
        return MwmmM;
      }
      ;
      ;
      function vNmmM(wwV, nwVMW, VvW, VNnMn) {
        var Vwmmn = 0;
        if (VvW < VNnMn) {
          Vwmmn = VvW + Math[VM[56]]((VNnMn - VvW) * 0.5);
          vNNMw = WmnNW(wwV, nwVMW, Vwmmn, VvW, VNnMn);
          vNmmM(wwV, nwVMW, VvW, vNNMw - 1);
          vNmmM(wwV, nwVMW, vNNMw + 1, VNnMn);
        }
      }
      ;
      ;
      function mmvnv(wwV, nwVMW) {
        try {
          vNmmM(wwV, nwVMW, 0, wwV[VM[126]] - 1);
        } catch (VWn) {
          wwV[VM[188]](nwVMW);
        }
      }
      ;
      ;
      return {
        sort: mmvnv
      };
    }();
    var vvVNN = function () {
      var WwM = 0;
      var MnMvv = {
        VMmwm: [WwM++, "en"],
        MVnNM: [WwM++, "ru"],
        WmVww: [WwM++, "sp"],
        mnVwV: [WwM++, "fr"],
        mvMvM: [WwM++, "de"],
        NMMnW: [WwM++, "it"],
        vmVwv: [WwM++, "pl"],
        vNvWv: [WwM++, "pt"]
      };
      var Nww = MnMvv.VMmwm;
      var MMVVv = Nww[0];
      var NwvMM = [];
      for (var Wv = 0; Wv < WwM; Wv++) {
        NwvMM[Wv] = [];
      }
      var wNVNm = MnMvv.VMmwm;
      function WMvvM(wvWMm) {
        Nww = wvWMm;
        vvVNN[VM[8]] = Nww;
        MMVVv = Nww[0];
        vmn[VM[62]]("lang", JSON[VM[18]](Nww));
      }
      ;
      ;
      function MWM(MV) {
        if (NwvMM[MMVVv] === undefined || NwvMM[MMVVv][MV] === undefined) {
          return NwvMM[wNVNm[0]][MV];
        } else {
          return NwvMM[MMVVv][MV];
        }
      }
      ;
      ;
      function MmMwV(MV) {
        var wVM;
        if (NwvMM[MMVVv] === undefined || NwvMM[MMVVv][MV] === undefined) {
          wvNVn = NwvMM[wNVNm][MV];
        } else {
          wvNVn = NwvMM[MMVVv][MV];
        }
        for (var Wv = 1; Wv < arguments[VM[126]]; Wv++) {
          wvNVn[0] = wvNVn[0][VM[107]]("%d", arguments[Wv]);
        }
        return wvNVn;
      }
      ;
      ;
      function mNWVN(mNvnV) {
        for (var Wv = 0; Wv < mNvnV[VM[126]]; Wv++) {
          NwvMM[MMVVv][Wv] = [mNvnV[Wv]];
        }
      }
      ;
      ;
      function mmvmM(wvWMm, callback) {
        WMvvM(wvWMm);
        if (NwvMM[wvWMm[0]][VM[126]] !== 0) {
          if (callback !== undefined) {
            callback();
          }
          return;
        }
        var nnvvn = new XMLHttpRequest();
        nnvvn[VM[64]]("GET", "json/lang" + wvWMm[1] + ".json", true);
        nnvvn[VM[140]] = function () {
          if (nnvvn[VM[192]] === 4 && this[VM[197]] === 200) {
            mNWVN(JSON[VM[71]](this.wmMvn));
            if (callback !== undefined) {
              callback();
            }
          }
        };
        nnvvn[VM[177]]();
      }
      ;
      ;
      function nvM(mNvnV, vWvMW, callback) {
        if (vWvMW !== undefined) {
          wNVNm = vWvMW;
        }
        if (mNvnV !== undefined) {
          var VMm = MMVVv;
          MMVVv = wNVNm[0];
          mNWVN(mNvnV);
          MMVVv = VMm;
        }
        var nVNvN = vmn[VM[174]]("lang");
        if (nVNvN === null) {
          var Nnwvn = navigator[VM[171]] || navigator[VM[33]];
          switch (Nnwvn) {
            case "ru":
              Nww = MnMvv.MVnNM;
              break;
            case "en":
              Nww = MnMvv.VMmwm;
              break;
            case "es":
              Nww = MnMvv.WmVww;
              break;
            case "fr":
              Nww = MnMvv.mnVwV;
              break;
            case "it":
              Nww = MnMvv.NMMnW;
              break;
            case "pl":
              Nww = MnMvv.vmVwv;
              break;
            case "de":
              Nww = MnMvv.mvMvM;
              break;
            case "pt":
              Nww = MnMvv.vNvWv;
              break;
          }
        } else {
          Nww = JSON[VM[71]](nVNvN);
        }
        mmvmM(Nww, callback);
      }
      ;
      ;
      return {
        languages: MnMvv,
        lang: Nww,
        get: MWM,
        MmMwV: MmMwV,
        nvM: nvM,
        mmvmM: mmvmM
      };
    }();
    var wwm = function () {
      var nnVWv = "0";
      var mNNmW = "1";
      var vMw = 0;
      var MmnmN = 1;
      var wMw = 65;
      var mMN = 68;
      var WwW = 87;
      var nVN = 83;
      var WmVMW = 37;
      var vNnwm = 39;
      var WnvMv = 38;
      var VvwWM = 40;
      var NNmvv = 16;
      var Vmw = new Array(255)[VM[145]](vMw);
      var mWnnn = null;
      function MMVwv() {
        if (mWnnn === mNNmW) {
          return 1;
        } else {
          return 0;
        }
      }
      ;
      ;
      function mwwwW() {
        if (mWnnn === nnVWv) {
          return 1;
        } else {
          return 0;
        }
      }
      ;
      ;
      function vmMnm() {
        wMw = 81;
        mMN = 68;
        WwW = 90;
        nVN = 83;
        vmn[VM[62]]("keyboardMap", mNNmW);
        mWnnn = mNNmW;
      }
      ;
      ;
      function WnMNv() {
        wMw = 65;
        mMN = 68;
        WwW = 87;
        nVN = 83;
        vmn[VM[62]]("keyboardMap", nnVWv);
        mWnnn = nnVWv;
      }
      ;
      ;
      function nnvWm(vN) {
        var MMn = Math[VM[241]](vN[VM[198]] || vN[VM[238]], 255);
        Vmw[MMn] = vMw;
      }
      ;
      ;
      function VvNVW(vN) {
        var MMn = Math[VM[241]](vN[VM[198]] || vN[VM[238]], 255);
        if (MMn === wMw || MMn === WmVMW) {
          wMMMN();
        } else if (MMn === WwW || MMn === WnvMv) {
          NMvnm();
        } else if (MMn === nVN || MMn === VvwWM) {
          MmmmM();
        } else if (MMn === mMN || MMn === vNnwm) {
          NnvnN();
        }
        Vmw[MMn] = MmnmN;
        return MMn;
      }
      ;
      ;
      function wMMMN() {
        Vmw[mMN] = vMw;
        Vmw[vNnwm] = vMw;
      }
      ;
      ;
      function NnvnN() {
        Vmw[wMw] = vMw;
        Vmw[WmVMW] = vMw;
      }
      ;
      ;
      function MmmmM() {
        Vmw[WwW] = vMw;
        Vmw[WnvMv] = vMw;
      }
      ;
      ;
      function NMvnm() {
        Vmw[nVN] = vMw;
        Vmw[VvwWM] = vMw;
      }
      ;
      ;
      function vnNmn() {
        return Vmw[wMw] || Vmw[WmVMW];
      }
      ;
      ;
      function nWNmN() {
        return Vmw[mMN] || Vmw[vNnwm];
      }
      ;
      ;
      function VVmNV() {
        return Vmw[nVN] || Vmw[VvwWM];
      }
      ;
      ;
      function VWvwv() {
        return Vmw[WwW] || Vmw[WnvMv];
      }
      ;
      ;
      function NMMwW() {
        return Vmw[NNmvv];
      }
      ;
      ;
      function MNVNv(mMmWM) {
        return Vmw[mMmWM];
      }
      ;
      ;
      function vmwmM() {
        Vmw[mMN] = vMw;
        Vmw[vNnwm] = vMw;
        Vmw[wMw] = vMw;
        Vmw[WmVMW] = vMw;
        Vmw[WwW] = vMw;
        Vmw[WnvMv] = vMw;
        Vmw[nVN] = vMw;
        Vmw[VvwWM] = vMw;
      }
      ;
      ;
      function wvNvn() {
        this[VM[238]] = 0;
        this[VM[198]] = 0;
        this[VM[122]] = false;
        this[VM[22]] = false;
        this[VM[40]] = function () {};
      }
      ;
      ;
      mWnnn = vmn[VM[174]]("keyboardMap");
      if (mWnnn === null) {
        var mWvWm = navigator[VM[171]] || navigator[VM[33]];
        if (mWvWm === "fr" || mWvWm === "fr-FR") {
          vmMnm();
        } else {
          WnMNv();
        }
      } else if (mWnnn === mNNmW) {
        vmMnm();
      } else {
        WnMNv();
      }
      return {
        vmMnm: vmMnm,
        WnMNv: WnMNv,
        nnvWm: nnvWm,
        VvNVW: VvNVW,
        vmwmM: vmwmM,
        vnNmn: vnNmn,
        nWNmN: nWNmN,
        VVmNV: VVmNV,
        VWvwv: VWvwv,
        MMVwv: MMVwv,
        mwwwW: mwwwW,
        NMMwW: NMMwW,
        MNVNv: MNVNv,
        wvNvn: wvNvn
      };
    }();
    var wN = function () {
      var Wvmmn = 30000;
      var NvNWw = 300;
      Wm[VM[218]] = Wm[VM[218]] || Wm[VM[31]];
      var nMNvn = new AudioContext();
      if (!nMNvn[VM[25]]) {
        nMNvn[VM[25]] = nMNvn.mvWMW;
      }
      mwWmw = null;
      nMmmw = null;
      nmnWV = [];
      mmMnn = null;
      nmWMM = null;
      function MmWvV() {
        return mmMnn;
      }
      ;
      ;
      function wnWvm() {
        mwWmw = nMNvn[VM[68]]();
        nMmmw = new MediaRecorder(mwWmw[VM[52]]);
        nMmmw[VM[41]] = function (vN) {
          nmnWV[VM[154]](vN[VM[128]]);
        };
        nMmmw[VM[54]] = function (vN) {
          var MWmVv = JSON[VM[71]]("{ \"type\" : \"audio/ogg; codecs=opus\" }");
          nmWMM = new Blob(nmnWV, MWmVv);
          mmMnn = URL[VM[95]](nmWMM);
        };
      }
      ;
      ;
      function nWVnw() {
        nmWMM = null;
        mmMnn = null;
        nmnWV = [];
        nMmmw[VM[221]]();
      }
      ;
      ;
      function mnmNn() {
        nMmmw[VM[1]]();
      }
      ;
      ;
      var WwV = {
        VvWwv: 1,
        MVmwn: 1
      };
      try {
        var Ww = vmn[VM[174]]("isFx");
        if (Ww !== null) {
          WwV.VvWwv = Number(Ww);
        } else if (Mwv === 1) {
          WwV.VvWwv = 0;
        }
        Ww = vmn[VM[174]]("isAudio");
        if (Ww !== null) {
          WwV.MVmwn = Number(Ww);
        } else if (Mwv === 1) {
          WwV.MVmwn = 0;
        }
      } catch (VWn) {
        if (Mwv === 1) {
          WwV.VvWwv = 0;
          WwV.MVmwn = 0;
        }
      }
      function vMNWM(Ww) {
        if (Ww === 0 && WwV.MVmwn !== Ww) {
          for (var MvWVM in wN.nmv) {
            var nmv = wN.nmv[MvWVM];
            NWvVW(nmv);
          }
        }
        WwV.MVmwn = Ww;
        vmn[VM[62]]("isAudio", "" + Ww);
      }
      ;
      ;
      function WNmWM(Ww) {
        if (Ww === 0 && WwV.VvWwv !== Ww) {
          for (var vMNMw in wN.mn) {
            var mn = wN.mn[vMNMw];
            NWvVW(mn);
          }
        }
        WwV.VvWwv = Ww;
        vmn[VM[62]]("isFx", "" + Ww);
      }
      ;
      ;
      function Vww(mn, nwn, nMW, vwNWN) {
        if (nMW > NvNWw) {
          return;
        }
        nwn = (1 - nMW / NvNWw) * nwn;
        mn[VM[93]] = nwn;
        WmWnN(mn, 0, vwNWN);
        mn.nMn = 0;
      }
      ;
      ;
      function WVn(nwW, nwn, MWWWm, mn) {
        this[VM[127]] = nwW;
        this[VM[51]] = null;
        this[VM[9]] = null;
        this.n = 0;
        this.nMn = 0;
        this.NmVwv = null;
        this[VM[204]] = MWWWm;
        this[VM[93]] = 1;
        this.wnwvV = -1;
        if (nwn !== undefined) {
          this[VM[93]] = nwn;
        }
        this.wMWnV = -1;
        this.mn = 0;
        if (mn === 1) {
          this.mn = 1;
        }
        this.VwVwW = 0;
        this.VNWvn = 0;
        this.vNVWm = 0;
        this[VM[221]] = 0;
        this.mnwvn = 0;
      }
      ;
      ;
      function vwvMw(NmV, Ww) {
        NmV.NmVwv[VM[205]][VM[96]] = Ww;
        NmV[VM[93]] = Ww;
      }
      ;
      ;
      function NWvVW(NmV) {
        if (NmV.nMn === 1) {
          NmV.nMn = 0;
          NmV.wnwvV = -1;
          NmV[VM[9]][VM[1]]();
          console[VM[172]]("Stop", NmV[VM[127]]);
        }
      }
      ;
      ;
      function wMmMm(NmV, VVV, MNV) {
        if (NmV.wMWnV !== -1) {
          NmV[VM[93]] = NmV.wMWnV;
        }
        NmV.VwVwW = 0;
        NmV.VNWvn = VVV;
        NmV.vNVWm = MNV;
        console[VM[172]]("FADE", NmV[VM[127]]);
      }
      ;
      ;
      function WmWnN(NmV, VVV, vwNWN) {
        if (NmV.mn === 0) {
          if (WwV.MVmwn === 0) {
            return;
          }
        } else if (WwV.VvWwv === 0) {
          return;
        }
        if (NmV.nMn === 1) {
          if (NmV.wnwvV !== -1 && NmV.VNWvn === 0 && WVM - NmV.wnwvV > Wvmmn) {
            NWvVW(NmV);
            return;
          }
          if (NmV.VNWvn > 0) {
            NmV.VwVwW = Math[VM[241]](NmV.VwVwW + nv, NmV.VNWvn);
            var nwn = Math[VM[144]](0, Math[VM[241]](1, NmV[VM[93]] + Math[VM[178]]((1 - NmV.VwVwW / NmV.VNWvn) * 0.5 * Math[VM[99]]) * NmV.vNVWm));
            NmV.NmVwv[VM[205]][VM[96]] = nwn;
            NmV.wMWnV = nwn;
            if (NmV.VwVwW === NmV.VNWvn) {
              NmV[VM[93]] = nwn;
              NmV.wMWnV = -1;
              NmV.VNWvn = 0;
              NmV.VwVwW = 0;
              if (NmV[VM[93]] === 0) {
                NmV.wnwvV = WVM;
              } else {
                NmV.wnwvV = -1;
              }
            }
          }
          return;
        }
        if (NmV.VNWvn === 0 && NmV.VwVwW === 0 && NmV[VM[93]] === 0) {
          return;
        }
        if (NmV.n !== 1) {
          Nvv(NmV);
          return;
        }
        var VMM = nMNvn[VM[131]]();
        var NmVwv = nMNvn[VM[25]]();
        NmV[VM[9]] = VMM;
        NmV.NmVwv = NmVwv;
        vwvMw(NmV, NmV[VM[93]]);
        VMM[VM[51]] = NmV[VM[51]];
        VMM[VM[123]](NmVwv);
        if (mwWmw !== null) {
          VMM[VM[123]](mwWmw);
        }
        NmVwv[VM[123]](nMNvn[VM[72]]);
        if (NmV[VM[204]] === true) {
          VMM[VM[204]] = NmV[VM[204]];
        }
        if (!VMM[VM[1]]) {
          VMM[VM[1]] = VMM.vVnvm;
        }
        if (!VMM[VM[221]]) {
          VMM[VM[221]] = VMM.nmNvv;
        }
        NmV[VM[9]][VM[221]]((vwNWN === undefined ? 0 : vwNWN) + nMNvn[VM[118]], VVV === undefined ? 0 : VVV);
        NmV.nMn = 1;
        NmV[VM[221]] = WVM;
        console[VM[172]]("Start", NmV[VM[127]], NmV.VwVwW, NmV.VNWvn, VVV);
      }
      ;
      ;
      function Nvv(NmV) {
        if (NmV.n === 2) {
          return;
        }
        console[VM[172]]("LOAD", NmV);
        var Mmnnn = new XMLHttpRequest();
        Mmnnn[VM[64]]("GET", NmV[VM[127]], true);
        Mmnnn[VM[247]] = "arraybuffer";
        Mmnnn[VM[92]] = function () {
          nMNvn[VM[47]](Mmnnn[VM[248]], function (mNMMm) {
            NmV[VM[51]] = mNMMm;
            NmV.n = 1;
            NmV.mnwvn = mNMMm[VM[136]] * 1000;
          });
        };
        NmV.n = 2;
        Mmnnn[VM[177]]();
        return;
      }
      ;
      ;
      return {
        WVn: WVn,
        Nvv: Nvv,
        WmWnN: WmWnN,
        Vww: Vww,
        NWvVW: NWvVW,
        wMmMm: wMmMm,
        vwvMw: vwvMw,
        options: WwV,
        vMNWM: vMNWM,
        WNmWM: WNmWM,
        wnWvm: wnWvm,
        nWVnw: nWVnw,
        mnmNn: mnmNn,
        MmWvV: MmWvV,
        nmv: {},
        mn: {}
      };
    }();
    var mnm = function () {
      var VNNWm;
      function nvM() {
        VNNWm = NM.MwW(423, 276, "img/loading1.png");
      }
      ;
      ;
      var VMV;
      var VNM = new mvv.wvvmw();
      var nNM = new wwm.wvNvn();
      var MVn = 800;
      var vvN = 0;
      function vnVmN(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.nNMnn, 0.05);
      }
      var NvN = 800;
      var nvn = 0;
      function mMvVW(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.Nmn, 0.05);
      }
      var WmW = 0;
      var mMv = 0;
      var MvM = undefined;
      function nMn() {
        MW.NMmNm(mnm);
        mMv = NvN;
        WmW = NvN;
        MvM = mMvVW;
        nvn = 1;
        vwN();
      }
      ;
      ;
      function wWn(wwM) {
        VMV = wwM;
        mMv = MVn;
        WmW = MVn;
        MvM = vnVmN;
        vvN = 1;
      }
      ;
      ;
      function vwN() {
        var Nvm = 0;
        var vWn = 0;
        if (mMv > 0) {
          vWn = Vnv;
          var mwn = MvM(1 - mMv / WmW);
          if (mwn === 1) {
            mMv = 0;
          }
          if (vvN === 1) {
            mwn *= -1;
          } else {
            mwn = 1 - Math[VM[0]](mwn);
          }
          Nvm *= mwn;
          vWn *= mwn;
        }
        VNNWm.mm[VM[232]] = mVV - Math[VM[61]](vW * 211) + Nvm;
        VNNWm.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 138)) + vWn;
      }
      ;
      ;
      function Mw() {
        if (NmVMN() === 0) {
          return;
        }
        WV[VM[48]](0, 0, MVM, Vnv);
        VNNWm.Mw();
      }
      ;
      ;
      function NmVMN() {
        if (vvN === 1) {
          vwN();
          if (mMv < 0) {
            vvN = 0;
            VMV.nMn();
            return 0;
          }
          mMv -= nv;
        } else if (nvn === 1) {
          vwN();
          if (mMv < 0) {
            nvn = 0;
            mnm.Wwm = function (NWw) {
              mvVnv = location[VM[55]];
              NWw = NWw[VM[107]](/[\[]/, "\\[")[VM[107]](/[\]]/, "\\]");
              var NmNwn = "[\\?&]" + NWw + "=([^&#]*)";
              var NvWMn = new RegExp(NmNwn);
              var VVnvv = NvWMn[VM[159]](mvVnv);
              if (VVnvv === null) {
                return null;
              } else {
                return VVnvv[1];
              }
            };
            function VMNWw() {
              var vww = NVm.vww;
              vNm.regions = [];
              vNm.NwM = [];
              vNm.nVvnw = [];
              var regions = [];
              var VwWVv = [];
              var nMMWN = 0;
              var WVwvn = "<select id=\"servers\"><option value=\"auto\">Auto Select Server</option>";
              for (var Wv = 0; Wv < vww[VM[126]]; Wv++) {
                var wWvMn = vww[Wv][4];
                var mMVnn = vww[Wv][5];
                var vNn = vww[Wv][6];
                nMMWN += mMVnn;
                if (vNn == "ghoul") {
                  vNm.nVvnw[VM[154]](Wv);
                  continue;
                }
                if (vNn == "br") {
                  wWvMn = wWvMn[VM[107]]("BR", "");
                  if (vNm.regions[wWvMn] === undefined) {
                    vNm.regions[wWvMn] = [];
                  }
                  vNm.regions[wWvMn][VM[154]](Wv);
                  continue;
                }
                for (var mM = 0; mM < regions[VM[126]]; mM++) {
                  if (regions[mM] === wWvMn) {
                    VwWVv[mM] += mMVnn;
                    mM = -1;
                    break;
                  }
                }
                if (mM !== -1) {
                  regions[VM[154]](wWvMn);
                  VwWVv[VM[154]](mMVnn);
                }
              }
              var wvmmn = 1;
              var NwMMV = 0;
              for (Wv = 0; Wv < regions[VM[126]]; Wv++) {
                wWvMn = regions[Wv];
                WVwvn += "<option disabled>" + regions[Wv] + " - " + VwWVv[Wv] + " players</option>";
                wvmmn++;
                var MV = 1;
                for (mM = 0; mM < vww[VM[126]]; mM++) {
                  if (vww[mM][4] === wWvMn && vww[mM][6] === "survival") {
                    WVwvn += "<option value=\"" + vww[mM][0] + "\">" + regions[Wv] + " " + MV++ + " - " + vww[mM][5] + " players</option>";
                    if (NVm.mvvNw === mM) {
                      NwMMV = wvmmn;
                    }
                    wvmmn++;
                  }
                }
              }
              vNm.nNnNN = "<select id=\"servers\"><option value=\"auto\">Auto Select Server</option>";
              for (var Wv in vNm.regions) {
                var wvmmn = 0;
                for (var MMn = 0; MMn < vNm.regions[Wv][VM[126]]; MMn++) {
                  wvmmn += vww[vNm.regions[Wv][MMn]][5];
                }
              }
              vNm.NwM = vNm.NwM[VM[188]](function (Mww, N) {
                return Number(vww[N][5]) - Number(vww[Mww][5]);
              });
              vNm.VmNWw = "<select id=\"servers\"><option value=\"auto\">Auto Select Server</option>";
              for (var Wv in vNm.NwM) {
                vNm.VmNWw += "<option value=\"" + vww[vNm.NwM[Wv]][0] + "\">" + vww[vNm.NwM[Wv]][4][VM[107]]("PRIV", "") + " - " + vww[vNm.NwM[Wv]][5] + " players</option>";
              }
              vNm.WwvMN = "<select id=\"servers\"><option value=\"auto\">Auto Select Server</option>";
              for (var Wv in vNm.nVvnw) {
                vNm.WwvMN += "<option value=\"" + vww[vNm.nVvnw[Wv]][0] + "\">" + vww[vNm.nVvnw[Wv]][4][VM[107]]("GHOUL", "") + " - " + vww[vNm.nVvnw[Wv]][5] + " players</option>";
              }
              WVwvn += "<option disabled>All servers - " + nMMWN + " players</option></select>";
              vNm.nNnNN += "<option disabled>All servers - " + nMMWN + " players</option></select>";
              vNm.VmNWw += "<option disabled>All servers - " + nMMWN + " players</option></select>";
              vNm.WwvMN += "<option disabled>All servers - " + nMMWN + " players</option></select>";
              document[VM[57]]("serverList")[VM[66]] = WVwvn;
              document[VM[57]]("servers")[VM[45]] = 0;
              if (mnm.Wwm("admin") !== null || mnm.Wwm("member") !== null || mnm.Wwm("moderator") !== null) {
                if (mnm.Wwm("admin") !== null || mnm.Wwm("moderator") !== null) {
                  Mv.nW.NNnMv = 1;
                  document[VM[57]]("chatInput")[VM[155]] = 1000000;
                }
                document[VM[57]]("nickname")[VM[66]] += "<input id=\"passwordInput\" type=\"password\" placeholder=\"Password\" maxLength=\"16\">";
                var nWWWv = vmn[VM[174]]("password");
                if (nWWWv !== null) {
                  document[VM[57]]("passwordInput")[VM[96]] = nWWWv;
                }
              }
              var port = mnm.Wwm("port");
              var nMN = mnm.Wwm("ips");
              if (nMN !== null) {
                nMN = nMN[VM[107]](/\./g, "-");
                var mvvNw = Number(document[VM[57]]("servers")[VM[96]]);
                NVm.vww[mvvNw][0] = nMN;
                NVm.vww[mvvNw][1] = nMN + ".devast.io";
                NVm.vww[mvvNw][2] = port === null ? "443" : port;
                NVm.vww[mvvNw][3] = 1;
              }
              nMN = mnm.Wwm("ip");
              if (nMN !== null) {
                nMN = nMN[VM[107]](/\./g, "-");
                var mvvNw = Number(document[VM[57]]("servers")[VM[96]]);
                NVm.vww[mvvNw][0] = nMN;
                NVm.vww[mvvNw][1] = nMN;
                NVm.vww[mvvNw][2] = port === null ? "8080" : port;
                NVm.vww[mvvNw][3] = 0;
              }
            }
            ;
            ;
            NVm.nNnWw(function () {
              VMNWw();
              mnm.wWn(vNm);
            });
            var MWnMn = nWw[mNvwn].Wvnww;
            var vvWwM = nVVmm[mNvwn].Wvnww;
            for (var Wv = 0; Wv < MWnMn[VM[126]]; Wv++) {
              MWnMn[Wv].m = MW.Mvw(MWnMn[Wv][VM[58]], MWnMn[Wv].m);
              vvWwM[Wv].m = MW.Mvw(vvWwM[Wv][VM[58]], vvWwM[Wv].m);
            }
          }
          mMv -= nv;
        }
        return 1;
      }
      ;
      ;
      return {
        wWn: wWn,
        nvM: nvM,
        nMn: nMn,
        update: vwN,
        Mw: Mw
      };
    }();
    var vNm = function () {
      function wWvnM(wMMMW) {
        console[VM[172]]("Join server");
        vNm.nmNnv = Wm.Widget.isBlocked;
        try {
          document[VM[57]]("trevda")[VM[5]];
          document[VM[57]]("preroll")[VM[5]];
        } catch (VWn) {
          vNm.nmNnv = 1;
        }
        try {
        } catch (VWn) {}
        var WVwvm;
        if (vNm.vNn === Mv.WWW) {
          WVwvm = "survival";
        } else if (vNm.vNn === Mv.vWmNw) {
          WVwvm = "ghoul";
        } else if (vNm.vNn === Mv.NwvNm) {
          WVwvm = "br";
        } else {
          throw new Error("Unknown game mode", vNm.vNn);
        }
        var NmMWM = document[VM[57]]("servers")[VM[96]];
        var nwW;
        var NmVnN;
        if (NmMWM == "auto") {
          nwW = "https://api.rivet.gg/matchmaker/lobbies/find";
          NmVnN = {
            game_modes: [WVwvm]
          };
        } else {
          nwW = "https://api.rivet.gg/matchmaker/lobbies/join";
          NmVnN = {
            lobby_id: NmMWM
          };
        }
        if (NVm.VNnWn || NVm[VM[102]] === NVm.nNN.NvWwM) {
          console[VM[172]]("Already joining server");
          return;
        }
        NVm.VNnWn = true;
        let headers = {
          Accept: "application/json",
          "Content-Type": "application/json"
        };
        if (Wm.RIVET_TOKEN) {
          headers.Authorization = "Bearer " + Wm.RIVET_TOKEN;
        }
        Wm.fetch(nwW, {
          method: "POST",
          headers: headers,
          body: JSON[VM[18]](NmVnN)
        }).then(WmM => {
          if (WmM[VM[42]]) {
            return WmM[VM[170]]();
          } else {
            throw "Failed to find lobby: " + WmM[VM[197]];
          }
        }).then(WmM => {
          console[VM[172]]("Lobby found", WmM);
          let lobby = WmM.lobby;
          NVm.mvvNw = NVm.vww[VM[78]](nN => nN[0] == lobby.lobby_id);
          NVm.MMVwW = lobby;
          NVm.VWvNV(document[VM[57]]("nicknameInput")[VM[96]], 0, lobby.player.token);
        }).catch(WvMVw => {
          console[VM[164]]("Failed to join server", WvMVw);
          alert("Failed to join server");
          NVm.VNnWn = false;
        });
      }
      ;
      ;
      function wnw(WwN) {}
      ;
      ;
      function vwWVw() {
        wWn(VNw);
      }
      ;
      ;
      function MNn() {
        vwWVw();
      }
      ;
      ;
      var MnN = 0;
      function wVn(vv, nN, wn, VW, nwnMM, wMvvw) {
        var vw = nNV[VM[206]](0, MnN, MnN, vv);
        mvvMm(vw, 0, MnN, MnN, vv, nN, wn, nN, wn, (nwnMM << 5) + (wMvvw << 10), VW, 1);
        MnN++;
      }
      ;
      function wNNwV(vv, nN, wn, Wn, WwN, nvm) {
        var vw = nNV[VM[206]](0, MnN, MnN, vv);
        mvvMm(vw, 0, MnN, MnN, vv, nN, wn, nN, wn, (nvm << 7) + (Wn << 5), 0, WwN);
        MnN++;
      }
      ;
      var MVv = 0;
      var mvnMN = {
        nMwvW: [{
          NWw: "Yuukun",
          button: ["img/yuukun0out.png", "img/yuukun0in.png", "img/yuukun0click.png"],
          mvVnv: "https://www.youtube.com/watch?v=TyI_8Il64d8"
        }, {
          NWw: "eXistenZ",
          button: ["img/existenz5out.png", "img/existenz5in.png", "img/existenz5click.png"],
          mvVnv: "https://www.youtube.com/watch?v=Seq6QGBTvNQ"
        }, {
          NWw: "Bubble Gum",
          button: ["img/bubblegum2out.png", "img/bubblegum2in.png", "img/bubblegum2click.png"],
          mvVnv: "https://youtu.be/fD7lx9zAQGU"
        }],
        vMWnn: [{
          NWw: "Devaster",
          button: ["img/devaster0out.png", "img/devaster0in.png", "img/devaster0click.png"],
          mvVnv: "https://www.youtube.com/watch?v=Jpgx-d3qHzs"
        }]
      };
      var wmMnW = mvnMN.nMwvW;
      var Nnwvn = navigator[VM[171]] || navigator[VM[33]];
      if (Nnwvn[VM[76]]()[VM[44]]("fr") !== -1) {
        wmMnW = mvnMN.vMWnn;
      }
      var NvmVN = wmMnW[Math[VM[61]](wmMnW[VM[126]] * Math[VM[185]]())];
      var VnvwN = [NM.mMm(NvmVN.NWw, "'Viga', sans-serif", "#FFFFFF", 30, 150), NM.mMm(NvmVN.NWw, "'Viga', sans-serif", "#C5B03C", 30, 150), NM.mMm(NvmVN.NWw, "'Viga', sans-serif", "#9B800D", 30, 150)];
      VnvwN[0].n = 1;
      VnvwN[1].n = 1;
      VnvwN[2].n = 1;
      var wwwNM = NM.vnn(VnvwN[0].mvN, VnvwN[0].wmm, undefined, VnvwN);
      var VVvnN = NM.vnn(120, 67, NvmVN[VM[59]]);
      var wnWVm = {
        m: null
      };
      var vVm;
      var nnmvn;
      var MWn;
      var NnvwV;
      var NWwnM;
      var wvM;
      var wnMnn;
      var nnvmN;
      var WwvnN;
      var vww;
      var NvMwv;
      var WwNMw;
      var MvvnN;
      var nNWNN;
      var WmwWV;
      var wWwVw;
      var MmMWW;
      var vNVVW;
      var nwwvM;
      var wVVvm;
      var mVwWm;
      var nWm;
      var wVMmV;
      var NnmwM;
      var NmWvw;
      var mWVWW;
      var MmNnw;
      var VmV;
      var nwNWw;
      var wnnWW;
      var NMw;
      var Mvm;
      var mmmnW;
      var WMVMM;
      var WmvWN;
      var NnWmM;
      var NMvNv;
      var MMnnw;
      var nMMMw;
      var wVmNN;
      var NwM;
      var mVMwn;
      var Vmvmm;
      var MMWwV;
      var mnnnN;
      var mnNVw;
      var wVVnn;
      var mMwwv;
      var mwMWv;
      var MVMvv;
      var wWMnN;
      function nvM() {
        vNm.wWvnM = wWvnM;
        vNm.vvvVn = 1;
        vNm.WWv = 0;
        try {
          vNm.nmNnv = Wm.Widget.isBlocked;
        } catch (VWn) {}
        vNm.vNn = 0;
        vNm.nmvwV = 1;
        vNm.vWmMV = 0;
        vNm.nMVnm = 0;
        document[VM[57]]("nicknameInput")[VM[96]] = vmn[VM[174]]("nickname", MWn);
        wN.wMmMm(wN.nmv[VM[15]], 1000, nnN.MMNVM);
        nNV.VvMmw();
        Vw[VM[158]](1);
        MnN = 0;
        wVn(VwMWm, 200, 0, 127, mnW.mVnVn, 3);
        wVn(MvNVm, 400, 100, 127, mnW.Nvvnw, 2);
        wVn(VVv, 100, 100, 127, mnW.vMn, 0);
        wNNwV(VVNmM, 900, 500, 0, 33, vM.WNV);
        wNNwV(VwvMV, 800, 400, 1, 1, vM.vWv);
        wVn(VVv, 1100, 300, 10, mnW.vMn, 1);
        wVn(VVv, 800, 200, 127, mnW.vMn, 2);
        wVn(VVv, 700, 100, 127, mnW.vMn, 3);
        wVn(VVv, 1200, 0, 127, mnW.vMn, 0);
        wVn(VVv, 1300, 100, 127, mnW.vMn, 4);
        wVn(VVv, 1300, 300, 127, mnW.vMn, 2);
        wVn(VVv, 800, 500, 127, mnW.vMn, 4);
        wVn(MvNVm, 1000, 200, 127, mnW.Nvvnw, 0);
        wVn(VVv, 700, 600, 127, mnW.vMn, 0);
        wVn(VVv, 500, 400, 127, mnW.vMn, 2);
        wVn(VwMWm, 500, 700, 127, mnW.mVnVn, 3);
        wVn(VwMWm, 1000, 300, 127, mnW.mVnVn, 4);
        wVn(VVv, 1300, 500, 100, mnW.vMn, 2);
        wVn(VVv, 1200, 700, 127, mnW.vMn, 4);
        wVn(VVv, 1300, 700, 127, mnW.vMn, 0);
        wVn(VwMWm, 800, 600, 127, mnW.mVnVn, 5);
        wVn(VVv, 500, 600, 127, mnW.vMn, 4);
        wVn(VwMWm, 200, 400, 127, mnW.MwVmV, 0);
        wVn(VwMWm, 400, 500, 50, mnW.nVNMm, 3);
        wVn(VVv, 100, 400, 190, mnW.vMn, 2);
        wVn(VVv, 100, 500, 190, mnW.vMn, 3);
        wVn(VVv, 100, 600, 127, mnW.vMn, 4);
        wVn(VVv, 0, 500, 127, mnW.vMn, 1);
        wVn(VVv, 200, 300, 50, mnW.vMn, 4);
        wVn(VVv, 400, 200, 10, mnW.vMn, 2);
        wVn(VVv, 500, 200, 10, mnW.vMn, 1);
        wVn(VVv, 100, 800, 10, mnW.vMn, 0);
        wVn(VVv, 400, 800, 10, mnW.vMn, 1);
        wVn(VVv, 700, 800, 10, mnW.vMn, 2);
        wVn(VwMWm, 900, 700, 50, mnW.nVNMm, 4);
        if (Mwv === 1) {
          vVm = NM.MwW(650, 312, "img/logo-homepage-mobile2.png");
        } else {
          vVm = NM.MwW(650, 312, "img/logo-homepage4.png");
        }
        if (Mwv === 1) {
          nnmvn = NM.vnn(0, 0);
        } else {
          nnmvn = NM.vnn(94, 40, ["img/more-io-games-out.png", "img/more-io-games-in.png", "img/more-io-games-click.png"]);
        }
        MWn = document[VM[57]]("nickname");
        NnvwV = MWn[VM[219]];
        NWwnM = {
          x: 0,
          y: 0
        };
        MWn[VM[121]]("keyup", function (vN) {
          if ((vvN | nvn) === 1) {
            return;
          }
          if (vN[VM[238]] === 13) {
            wWvnM();
          }
        }, false);
        wvM = NM.vnn(136, 57, ["img/play-button-out.png", "img/play-button-in.png", "img/play-button-click.png"]);
        wnMnn = document[VM[57]]("terms");
        nnvmN = wnMnn[VM[219]];
        WwvnN = {
          x: 0,
          y: 0
        };
        vww = document[VM[57]]("serverList");
        NvMwv = vww[VM[219]];
        WwNMw = {
          x: 0,
          y: 0
        };
        vww[VM[121]]("mouseover", function (vN) {
          if ((vvN | nvn) === 1) {
            return;
          }
        }, false);
        vww[VM[121]]("mousedown", function (vN) {
          if ((vvN | nvn) === 1) {
            return;
          }
        }, false);
        vww[VM[121]]("mouseup", function (vN) {
          if ((vvN | nvn) === 1) {
            return;
          }
        }, false);
        if (Mwv === 1) {
          MvvnN = NM.MwW(0, 0);
        } else {
          MvvnN = NM.MwW(230, 235, "img/changelogBox.png");
        }
        nNWNN = document[VM[57]]("changelog");
        WmwWV = nNWNN[VM[219]];
        wWwVw = {
          x: 0,
          y: 0
        };
        if (Mwv === 1) {
          MmMWW = NM.MwW(0, 0);
        } else {
          MmMWW = NM.MwW(230, 355, "img/commandsBox.png");
        }
        vNVVW = document[VM[57]]("howtoplay");
        nwwvM = vNVVW[VM[219]];
        wVVvm = {
          x: 0,
          y: 0
        };
        if (Mwv === 1) {
          mVwWm = NM.MwW(0, 0);
        } else {
          mVwWm = NM.MwW(123, 55, "img/gameMade.png");
        }
        if (Mwv === 1) {
          nWm = NM.vnn(0, 0);
        } else {
          nWm = NM.vnn(40, 38, ["img/twitter-button-out.png", "img/twitter-button-in.png", "img/twitter-button-click.png"]);
        }
        if (Mwv === 1) {
          wVMmV = NM.vnn(0, 0);
        } else {
          wVMmV = NM.vnn(40, 38, ["img/facebook-button-out.png", "img/facebook-button-in.png", "img/facebook-button-click.png"]);
        }
        if (Mwv === 1) {
          NnmwM = NM.vnn(0, 0);
        } else {
          NnmwM = NM.vnn(40, 38, ["img/youtube-button-out.png", "img/youtube-button-in.png", "img/youtube-button-click.png"]);
        }
        if (Mwv === 1) {
          NmWvw = NM.vnn(0, 0);
        } else {
          NmWvw = NM.vnn(40, 38, ["img/tiktok-button-out.png", "img/tiktok-button-in.png", "img/tiktok-button-click.png"]);
        }
        if (Mwv === 1) {
          mWVWW = NM.vnn(0, 0);
        } else {
          mWVWW = NM.vnn(54, 54, ["img/home-reddit-button-out.png", "img/home-reddit-button-in.png", "img/home-reddit-button-click.png"]);
        }
        if (Mwv === 1) {
          MmNnw = NM.vnn(0, 0);
        } else {
          MmNnw = NM.vnn(54, 54, ["img/home-discord-button-out.png", "img/home-discord-button-in.png", "img/home-discord-button-click.png"]);
        }
        VmV = NM.vnn(93, 51, ["img/survivalmode-button-out.png", "img/survivalmode-button-in.png", "img/survivalmode-button-click.png"]);
        nwNWw = NM.vnn(93, 51, ["img/battle-royale-button-out.png", "img/battle-royale-button-in.png", "img/battle-royale-button-click.png"]);
        wnnWW = NM.vnn(93, 51, ["img/ghoul-mode-button-out.png", "img/ghoul-mode-button-in.png", "img/ghoul-mode-button-click.png"]);
        NMw = NM.vnn(68, 34, ["img/private-server-button-out.png", "img/private-server-button-in.png", "img/private-server-button-click.png"]);
        Mvm = NM.vnn(68, 34, ["img/public-server-button-out.png", "img/public-server-button-in.png", "img/public-server-button-click.png"]);
        if (Mwv === 1) {
          mmmnW = NM.MwW(0, 0);
        } else {
          mmmnW = NM.MwW(171, 432, "img/featured.png");
        }
        if (Mwv === 1) {
          WMVMM = NM.vnn(0, 0);
        } else {
          WMVMM = NM.vnn(60, 60, ["img/home-limaxio-out.png", "img/home-limaxio-in.png", "img/home-limaxio-click.png"]);
        }
        if (Mwv === 1) {
          WmvWN = NM.vnn(0, 0);
        } else {
          WmvWN = NM.vnn(60, 60, ["img/home-oibio-out.png", "img/home-oibio-in.png", "img/home-oibio-click.png"]);
        }
        if (Mwv === 1) {
          NnWmM = NM.vnn(0, 0);
        } else {
          NnWmM = NM.vnn(60, 60, ["img/home-starveio-out.png", "img/home-starveio-in.png", "img/home-starveio-click.png"]);
        }
        if (Mwv === 1) {
          NMvNv = NM.vnn(0, 0);
        } else {
          NMvNv = NM.vnn(60, 60, ["img/home-nendio-out.png", "img/home-nendio-in.png", "img/home-nendio-click.png"]);
        }
        MMnnw = document[VM[57]]("featuredVideo");
        nMMMw = MMnnw[VM[219]];
        wVmNN = {
          x: 0,
          y: 0
        };
        if (Mwv === 1) {
          NwM = NM.vnn(0, 0);
        } else {
          NwM = NM.vnn(86, 48, ["img/privateserver-button-out.png", "img/privateserver-button-in.png", "img/privateserver-button-click.png"]);
        }
        if (Mwv === 1) {
          mVMwn = NM.vnn(0, 0);
        } else {
          mVMwn = NM.vnn(52, 42, ["img/map-editor-button-out.png", "img/map-editor-button-in.png", "img/map-editor-button-click.png"]);
        }
        Vmvmm = document[VM[57]]("trevda");
        MMWwV = Vmvmm[VM[219]];
        mnnnN = {
          x: 0,
          y: 0
        };
        mnNVw = document[VM[57]]("preroll");
        wVVnn = mnNVw[VM[219]];
        mMwwv = {
          x: 0,
          y: 0
        };
        mwMWv = document[VM[57]]("footer");
        MVMvv = mwMWv[VM[219]];
        wWMnN = {
          x: 0,
          y: 0
        };
      }
      ;
      ;
      var VMV;
      var VNM = new mvv.wvvmw();
      var nNM = new wwm.wvNvn();
      var MVn = 800;
      var vvN = 0;
      function vnVmN(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.nNMnn, 0.05);
      }
      var NvN = 2000;
      var nvn = 0;
      function mMvVW(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.Nmn, 0.05);
      }
      var WmW = 0;
      var mMv = 0;
      var MvM = undefined;
      function nMn() {
        NVm.wnw = wnw;
        NVm.MNn = MNn;
        Mv.nW.nvN = 0;
        Mv.nW[VM[5]] = 0;
        Vw.VmMNm(0);
        Vw.nMvvv();
        if (vNm.vNn === 1) {
          Mvm.mWn();
          NMw.mWn();
        }
        vNm.MMWwV = MMWwV;
        if (Mwv === 1) {
          wwwNM.mWn();
          VVvnN.mWn();
          mVMwn.mWn();
        }
        MW.NMmNm(vNm);
        mMv = NvN;
        WmW = NvN;
        MvM = mMvVW;
        nvn = 1;
        vwN();
        NnvwV[VM[49]] = "inline-block";
        if (Mwv === 0) {
          nnvmN[VM[49]] = "inline-block";
        }
        NvMwv[VM[49]] = "inline-block";
        if (Mwv === 0) {
          WmwWV[VM[49]] = "inline-block";
        }
        if (Mwv === 0) {
          nwwvM[VM[49]] = "inline-block";
        }
        if (Mwv === 0) {
          nMMMw[VM[49]] = "inline-block";
        }
      }
      ;
      ;
      function wWn(wwM) {
        VMV = wwM;
        nnmNm();
        mMv = MVn;
        WmW = MVn;
        MvM = vnVmN;
        vvN = 1;
      }
      ;
      ;
      function vwN() {
        var Nvm = 0;
        var vWn = 0;
        if (mMv > 0) {
          vWn = Vnv;
          var mwn = MvM(1 - mMv / WmW);
          if (mwn === 1) {
            mMv = 0;
          }
          if (nvn === 1) {
            mwn = 1 - Math[VM[0]](mwn);
          }
          Nvm *= mwn;
          vWn *= mwn;
        }
        vVm.mm[VM[232]] = mVV - Math[VM[61]](vW * 325) + Math[VM[61]]((Mwv === 0 ? -30 : -70) * vW) - Nvm;
        vVm.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 156) + Math[VM[61]]((Mwv === 0 ? -150 : -150) * vW)) - vWn;
        nnmvn.mm[VM[232]] = Math[VM[61]](vW * 5) + Nvm;
        nnmvn.mm[VM[249]] = Vnv - Math[VM[61]](vW * 40) + Math[VM[61]](vW * -5) + vWn;
        NWwnM[VM[232]] = mVV - Math[VM[61]](vW * 96) + Math[VM[61]]((Mwv === 0 ? 4 : -35.5) * vW) - Nvm;
        NnvwV[VM[125]] = NWwnM[VM[232]] + "px";
        NWwnM[VM[249]] = vVm.mm[VM[249]] + Math[VM[61]](vW * 143);
        NnvwV[VM[63]] = NWwnM[VM[249]] + "px";
        wvM.mm[VM[232]] = vVm.mm[VM[232]] + Math[VM[61]](vW * 290);
        wvM.mm[VM[249]] = vVm.mm[VM[249]] + Math[VM[61]](vW * 235);
        WwvnN[VM[232]] = MVM - 152 + Nvm;
        nnvmN[VM[125]] = WwvnN[VM[232]] + "px";
        WwvnN[VM[249]] = Vnv - 17 + vWn;
        nnvmN[VM[63]] = WwvnN[VM[249]] + "px";
        WwNMw[VM[232]] = mVV - Math[VM[61]](vW * 100) + Math[VM[61]]((Mwv === 0 ? 5 : -35) * vW) - Nvm;
        NvMwv[VM[125]] = WwNMw[VM[232]] + "px";
        WwNMw[VM[249]] = NWwnM[VM[249]] + Math[VM[61]](vW * 45);
        NvMwv[VM[63]] = WwNMw[VM[249]] + "px";
        MvvnN.mm[VM[232]] = MVM - Math[VM[61]](vW * 230) + Math[VM[61]](vW * 7) - Nvm;
        MvvnN.mm[VM[249]] = -vWn;
        wWwVw[VM[232]] = MVM - 200 + Math[VM[61]](vW * 8) - Nvm;
        WmwWV[VM[125]] = wWwVw[VM[232]] + "px";
        wWwVw[VM[249]] = Math[VM[61]](vW * 18) - vWn;
        WmwWV[VM[63]] = wWwVw[VM[249]] + "px";
        MmMWW.mm[VM[232]] = MvvnN.mm[VM[232]];
        MmMWW.mm[VM[249]] = MvvnN.mm[VM[249]] + Math[VM[61]](vW * 230);
        wVVvm[VM[232]] = MVM - 200 + Math[VM[61]](vW * 10) - Nvm;
        nwwvM[VM[125]] = wVVvm[VM[232]] + "px";
        wVVvm[VM[249]] = wWwVw[VM[249]] + Math[VM[61]](vW * 217);
        nwwvM[VM[63]] = wVVvm[VM[249]] + "px";
        mVwWm.mm[VM[232]] = Math[VM[61]](vW * 15) - Nvm;
        mVwWm.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        nWm.mm[VM[232]] = mVwWm.mm[VM[232]] + Math[VM[61]](vW * -5);
        nWm.mm[VM[249]] = mVwWm.mm[VM[249]] + Math[VM[61]](vW * 55);
        wVMmV.mm[VM[232]] = nWm.mm[VM[232]] + Math[VM[61]](vW * 45);
        wVMmV.mm[VM[249]] = nWm.mm[VM[249]];
        NnmwM.mm[VM[232]] = wVMmV.mm[VM[232]] + Math[VM[61]](vW * 45);
        NnmwM.mm[VM[249]] = nWm.mm[VM[249]];
        NmWvw.mm[VM[232]] = NnmwM.mm[VM[232]] + Math[VM[61]](vW * 45);
        NmWvw.mm[VM[249]] = nWm.mm[VM[249]];
        mWVWW.mm[VM[232]] = vVm.mm[VM[232]] + Math[VM[61]](vW * 26);
        mWVWW.mm[VM[249]] = vVm.mm[VM[249]] + Math[VM[61]](vW * 36);
        MmNnw.mm[VM[232]] = mWVWW.mm[VM[232]] + Math[VM[61]](vW * 83.5);
        MmNnw.mm[VM[249]] = mWVWW.mm[VM[249]];
        VmV.mm[VM[232]] = wvM.mm[VM[232]] + Math[VM[61]](vW * 213);
        VmV.mm[VM[249]] = wvM.mm[VM[249]] + Math[VM[61]](vW * -98);
        nwNWw.mm[VM[232]] = VmV.mm[VM[232]];
        nwNWw.mm[VM[249]] = VmV.mm[VM[249]] + Math[VM[61]](vW * 60);
        wnnWW.mm[VM[232]] = VmV.mm[VM[232]];
        wnnWW.mm[VM[249]] = VmV.mm[VM[249]] + Math[VM[61]](vW * 60);
        NMw.mm[VM[232]] = wvM.mm[VM[232]] + Math[VM[61]](vW * -126);
        NMw.mm[VM[249]] = wvM.mm[VM[249]] + Math[VM[61]](vW * -58);
        Mvm.mm[VM[232]] = NMw.mm[VM[232]];
        Mvm.mm[VM[249]] = NMw.mm[VM[249]] + Math[VM[61]](vW * -37);
        mmmnW.mm[VM[232]] = nWm.mm[VM[232]];
        mmmnW.mm[VM[249]] = nWm.mm[VM[249]] + Math[VM[61]](vW * 50);
        WMVMM.mm[VM[232]] = nWm.mm[VM[232]] + Math[VM[61]](vW * 21.5);
        WMVMM.mm[VM[249]] = nWm.mm[VM[249]] + Math[VM[61]](vW * 72);
        WmvWN.mm[VM[232]] = WMVMM.mm[VM[232]];
        WmvWN.mm[VM[249]] = WMVMM.mm[VM[249]] + Math[VM[61]](vW * 70);
        NnWmM.mm[VM[232]] = WmvWN.mm[VM[232]];
        NnWmM.mm[VM[249]] = WmvWN.mm[VM[249]] + Math[VM[61]](vW * 69);
        NMvNv.mm[VM[232]] = NnWmM.mm[VM[232]];
        NMvNv.mm[VM[249]] = NnWmM.mm[VM[249]] + Math[VM[61]](vW * 69);
        wVmNN[VM[232]] = Math[VM[61]](vW * 40) - Nvm;
        nMMMw[VM[125]] = wVmNN[VM[232]] + "px";
        wVmNN[VM[249]] = Math[VM[61]](vW * 417) - vWn;
        nMMMw[VM[63]] = wVmNN[VM[249]] + "px";
        NwM.mm[VM[232]] = Mvm.mm[VM[232]] + Math[VM[61]](vW * -120);
        NwM.mm[VM[249]] = Mvm.mm[VM[249]] + Math[VM[61]](vW * 41);
        mVMwn.mm[VM[232]] = NwM.mm[VM[232]] + Math[VM[61]](vW * -8.5);
        mVMwn.mm[VM[249]] = NwM.mm[VM[249]] + Math[VM[61]](vW * -53);
        mnnnN[VM[232]] = mVV - Math[VM[61]](vW * 325);
        MMWwV[VM[125]] = mnnnN[VM[232]] + "px";
        mnnnN[VM[249]] = NWwnM[VM[249]] + Math[VM[61]](vW * 130);
        MMWwV[VM[63]] = mnnnN[VM[249]] + "px";
        var mnwmm = Math[VM[241]](vW, 1);
        document[VM[57]]("trevda")[VM[219]][VM[63]] = Math[VM[61]](NWwnM[VM[249]] + vWn + 170) + "px";
        if (mnm.Wwm("ips") !== null || mnm.Wwm("ip") !== null) {
          NvMwv[VM[49]] = "none";
          VmV.mm[VM[249]] = -500;
          nwNWw.mm[VM[249]] = -500;
          wnnWW.mm[VM[249]] = -500;
          NMw.mm[VM[249]] = -500;
          Mvm.mm[VM[249]] = -500;
          if (mnm.Wwm("admin") !== null) {
            Vmvmm[VM[49]] = "none";
          }
        }
        var mm = NWwnM[VM[249]] + vWn + vW * 170;
        document[VM[57]]("trevda")[VM[219]][VM[125]] = "0";
        document[VM[57]]("trevda")[VM[219]][VM[77]] = "0";
        document[VM[57]]("trevda")[VM[219]].WWnWV = "auto";
        document[VM[57]]("trevda")[VM[219]][VM[63]] = Math[VM[61]](mm + (mnwmm * 250 - 250) / 2) + "px";
        document[VM[57]]("trevda")[VM[219]][VM[244]] = "scale(" + mnwmm + ")";
        var NnVWm = document[VM[57]]("nicknameInput")[VM[219]];
        var MN = Math[VM[61]](vW * 220);
        var ww = Math[VM[61]](vW * 35);
        ww = ww + "px";
        MN = MN + "px";
        NnvwV[VM[255]] = MN;
        NnvwV[VM[104]] = ww;
        NnVWm.borderWidth = Math[VM[61]](vW * 3) + "px";
        NnVWm[VM[255]] = MN;
        NnVWm[VM[104]] = ww;
        NnVWm[VM[88]] = Math[VM[61]](vW * 18) + "px";
        if (document[VM[57]]("passwordInput") !== null) {
          var WvNnm = document[VM[57]]("passwordInput")[VM[219]];
          var MN = Math[VM[61]](vW * 220);
          var ww = Math[VM[61]](vW * 35);
          var VvW = Math[VM[61]](mVV - MN / 2) + "px";
          ww = ww + "px";
          MN = MN + "px";
          WvNnm[VM[255]] = MN;
          WvNnm[VM[104]] = ww;
          WvNnm[VM[125]] = VvW;
          WvNnm.borderWidth = Math[VM[61]](vW * 3) + "px";
          WvNnm[VM[255]] = MN;
          WvNnm[VM[104]] = ww;
          WvNnm[VM[88]] = Math[VM[61]](vW * 18) + "px";
          WvNnm.marginTop = Math[VM[61]](vW * 4) + "px";
        }
        ;
        MN = Math[VM[61]](vW * 200);
        ww = Math[VM[61]](vW * 28);
        ww = ww + "px";
        MN = MN + "px";
        NvMwv[VM[255]] = MN;
        NvMwv[VM[104]] = ww;
        NvMwv.backgroundSize = Math[VM[61]](vW * 17) + "px";
        var VVnnn = document[VM[57]]("servers")[VM[219]];
        MN = Math[VM[61]](vW * 230) + "px";
        ww = Math[VM[61]](vW * 28) + "px";
        VVnnn[VM[255]] = MN;
        VVnnn[VM[104]] = ww;
        VVnnn[VM[88]] = Math[VM[61]](vW * 13) + "px";
        MN = Math[VM[61]](vW * 185);
        ww = Math[VM[61]](vW * 17);
        VvW = Math[VM[61]](MVM - MN) + "px";
        ww = ww + "px";
        MN = MN + "px";
        wVV = Math[VM[61]](Vnv - vW * 18) + vWn + "px";
        nnvmN[VM[255]] = MN;
        nnvmN[VM[104]] = ww;
        nnvmN[VM[125]] = VvW;
        nnvmN[VM[63]] = wVV;
        nnvmN[VM[88]] = Math[VM[61]](vW * 11) + "px";
        MN = Math[VM[61]](vW * 197);
        ww = Math[VM[61]](vW * 250);
        VvW = Math[VM[61]](MVM - vW * 205) + "px";
        ww = ww + "px";
        MN = MN + "px";
        WmwWV[VM[255]] = MN;
        WmwWV[VM[104]] = ww;
        WmwWV[VM[125]] = VvW;
        WmwWV[VM[88]] = Math[VM[61]](vW * 11) + "px";
        WmwWV.borderRadius = Math[VM[61]](vW * 5) + "px";
        WmwWV.paddingTop = Math[VM[61]](vW * 18) + "px";
        var nWmww = document[VM[57]]("changelogTitle")[VM[219]];
        MN = Math[VM[61]](vW * 197) + "px";
        ww = Math[VM[61]](vW * 23) + "px";
        nWmww[VM[255]] = MN;
        nWmww[VM[104]] = ww;
        nWmww[VM[88]] = Math[VM[61]](vW * 16) + "px";
        nWmww.paddingTop = Math[VM[61]](vW * 8) + "px";
        nWmww.paddingBottom = Math[VM[61]](vW * 0) + "px";
        nWmww.marginBottom = Math[VM[61]](vW * -2) + "px";
        nWmww.marginTop = Math[VM[61]](vW * -22) + "px";
        nWmww.borderRadius = Math[VM[61]](vW * 5) + "px " + Math[VM[61]](vW * 5) + "px " + Math[VM[61]](vW * 0) + "px " + Math[VM[61]](vW * 0) + "px";
        var mNWWN = document[VM[57]]("changelogImg")[VM[219]];
        MN = Math[VM[61]](vW * 175) + "px";
        ww = Math[VM[61]](vW * 80) + "px";
        mNWWN[VM[255]] = MN;
        mNWWN[VM[104]] = ww;
        mNWWN.Nvnvv = Math[VM[61]](vW * 10) + "px";
        var MVvMn = document[VM[57]]("changelogText")[VM[219]];
        MVvMn[VM[88]] = Math[VM[61]](vW * 10) + "px";
        MVvMn.padding = Math[VM[61]](vW * 15) + "px";
        MVvMn.paddingTop = Math[VM[61]](vW * 5) + "px";
        MN = Math[VM[61]](vW * 197);
        ww = Math[VM[61]](vW * 347);
        VvW = Math[VM[61]](MVM - vW * 205) + "px";
        NvWmv = Math[VM[61]](Vnv - vW * 125) + "px";
        ww = ww + "px";
        MN = MN + "px";
        nwwvM[VM[255]] = MN;
        nwwvM[VM[104]] = ww;
        nwwvM[VM[125]] = VvW;
        nwwvM[VM[35]] = NvWmv;
        nwwvM[VM[88]] = Math[VM[61]](vW * 13) + "px";
        nwwvM.marginTop = Math[VM[61]](vW * 0) + "px";
        nwwvM.paddingTop = Math[VM[61]](vW * 18) + "px";
        document[VM[57]]("featuredVideo")[VM[219]][VM[88]] = Math[VM[61]](vW * 13) + "px";
        document[VM[57]]("mainCommands")[VM[219]].marginTop = Math[VM[61]](vW * 55) + "px";
        document[VM[57]]("secondCommands")[VM[219]].marginTop = Math[VM[61]](vW * 55) + "px";
        document[VM[57]]("moveCommand")[VM[219]].paddingLeft = Math[VM[61]](vW * 20) + "px";
        document[VM[57]]("moveCommand")[VM[219]].paddingRight = Math[VM[61]](vW * 20) + "px";
        document[VM[57]]("hitCommands")[VM[219]].paddingLeft = Math[VM[61]](vW * 10) + "px";
        document[VM[57]]("hitCommands")[VM[219]].paddingRight = Math[VM[61]](vW * 10) + "px";
        document[VM[57]]("runCommands")[VM[219]].paddingLeft = Math[VM[61]](vW * 0) + "px";
        document[VM[57]]("runCommands")[VM[219]].paddingRight = Math[VM[61]](vW * 20) + "px";
        document[VM[57]]("interactCommands")[VM[219]].paddingLeft = Math[VM[61]](vW * 7) + "px";
        document[VM[57]]("interactCommands")[VM[219]].paddingRight = Math[VM[61]](vW * 0) + "px";
        document[VM[57]]("craftCommands")[VM[219]].paddingLeft = Math[VM[61]](vW * 5) + "px";
        document[VM[57]]("craftCommands")[VM[219]].paddingRight = Math[VM[61]](vW * 18) + "px";
        document[VM[57]]("mapCommands")[VM[219]].paddingLeft = Math[VM[61]](vW * 6) + "px";
        document[VM[57]]("mapCommands")[VM[219]].paddingRight = Math[VM[61]](vW * 12) + "px";
        var MNwVM = document[VM[57]]("howtoplayTitle")[VM[219]];
        MN = Math[VM[61]](vW * 197) + "px";
        ww = Math[VM[61]](vW * 23) + "px";
        MNwVM[VM[255]] = MN;
        MNwVM[VM[104]] = ww;
        MNwVM[VM[88]] = Math[VM[61]](vW * 16) + "px";
        MNwVM.paddingTop = Math[VM[61]](vW * 0) + "px";
        MNwVM.paddingBottom = Math[VM[61]](vW * 13) + "px";
        MNwVM.marginBottom = Math[VM[61]](vW * 6) + "px";
        MNwVM.marginTop = Math[VM[61]](vW * 0) + "px";
        MNwVM.borderRadius = Math[VM[61]](vW * 5) + "px " + Math[VM[61]](vW * 5) + "px " + Math[VM[61]](vW * 0) + "px " + Math[VM[61]](vW * 0) + "px";
        var nVwNm = document[VM[57]]("howtoplayText")[VM[219]];
        nVwNm[VM[88]] = Math[VM[61]](vW * 11) + "px";
        nVwNm.WWnWV = Math[VM[61]](vW * 6) + "px";
        nVwNm[VM[104]] = Math[VM[61]](vW * 52) + "px";
        var NvVVW = document[VM[57]]("howtoplayCommands")[VM[219]];
        MN = Math[VM[61]](vW * 197) + "px";
        ww = Math[VM[61]](vW * 23) + "px";
        NvVVW[VM[255]] = MN;
        NvVVW[VM[104]] = ww;
        NvVVW[VM[88]] = Math[VM[61]](vW * 16) + "px";
        NvVVW.paddingTop = Math[VM[61]](vW * 13) + "px";
        NvVVW.paddingBottom = Math[VM[61]](vW * 13) + "px";
        NvVVW.marginBottom = Math[VM[61]](vW * 6) + "px";
        NvVVW.marginTop = Math[VM[61]](vW * 11) + "px";
      }
      ;
      ;
      function Mw() {
        if (NmVMN() === 0) {
          return;
        }
        WV[VM[48]](0, 0, MVM, Vnv);
        Vw.VMnnv();
        if (mMv > 0) {
          MVv = MvM(1 - mMv / WmW);
          if (nvn === 1) {
            MVv = 1 - Math[VM[0]](MVv);
          }
          MVv = 1 - MVv;
        }
        WV[VM[149]] = MVv * 0.3;
        WV[VM[210]] = "#000000";
        WV[VM[84]](0, 0, MVM, Vnv);
        WV[VM[149]] = 1;
        if (vNm.vNn === Mv.WWW) {
          VmV.wvn(NM.WVv);
        } else if (vNm.vNn === Mv.NwvNm) {
          nwNWw.wvn(NM.WVv);
        } else if (vNm.vNn === Mv.vWmNw) {
          wnnWW.wvn(NM.WVv);
        }
        if (vNm.nmvwV === 0) {
          NMw.wvn(NM.WVv);
        } else if (vNm.nmvwV === 1) {
          Mvm.wvn(NM.WVv);
        }
        vVm.Mw();
        nnmvn.Mw();
        wvM.Mw();
        MvvnN.Mw();
        MmMWW.Mw();
        mVwWm.Mw();
        nWm.Mw();
        wVMmV.Mw();
        NnmwM.Mw();
        NmWvw.Mw();
        mWVWW.Mw();
        MmNnw.Mw();
        VmV.Mw();
        wnnWW.Mw();
        NMw.Mw();
        Mvm.Mw();
        mmmnW.Mw();
        WMVMM.Mw();
        WmvWN.Mw();
        NnWmM.Mw();
        NMvNv.Mw();
        NwM.Mw();
        mVMwn.Mw();
        if (wnWVm.m === null) {
          wnWVm.m = NM.mMm("0." + Wmwvv[0] + "." + Wmwvv[1], "'Viga', sans-serif", "#d6ddde", 24, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#2b3c3e", 8);
          wnWVm.m.n = 1;
        }
        MW.NN(wnWVm, vVm.mm[VM[232]] / vW + 484.5, vVm.mm[VM[249]] / vW + 124, 0, 0, 0, 1);
        VVvnN.mm[VM[232]] = mmmnW.mm[VM[232]] + vW * 27;
        VVvnN.mm[VM[249]] = mmmnW.mm[VM[249]] + vW * 329;
        VVvnN.Mw();
        wwwNM.mm[VM[232]] = mmmnW.mm[VM[232]] + vW * 34;
        wwwNM.mm[VM[249]] = mmmnW.mm[VM[249]] + vW * 399;
        wwwNM.Mw();
        Vw.MVWnM();
        nnN.wVNNv();
      }
      ;
      ;
      function NmVMN() {
        if (vvN === 1) {
          vwN();
          if (mMv < 0) {
            vvN = 0;
            nnmvn.wvn(NM.WVN);
            NnvwV[VM[49]] = "none";
            wvM.wvn(NM.WVN);
            nnvmN[VM[49]] = "none";
            NvMwv[VM[49]] = "none";
            WmwWV[VM[49]] = "none";
            nwwvM[VM[49]] = "none";
            nWm.wvn(NM.WVN);
            wVMmV.wvn(NM.WVN);
            NnmwM.wvn(NM.WVN);
            NmWvw.wvn(NM.WVN);
            mWVWW.wvn(NM.WVN);
            MmNnw.wvn(NM.WVN);
            VmV.wvn(NM.WVN);
            nwNWw.wvn(NM.WVN);
            wnnWW.wvn(NM.WVN);
            NMw.wvn(NM.WVN);
            Mvm.wvn(NM.WVN);
            WMVMM.wvn(NM.WVN);
            WmvWN.wvn(NM.WVN);
            NnWmM.wvn(NM.WVN);
            NMvNv.wvn(NM.WVN);
            nMMMw[VM[49]] = "none";
            NwM.wvn(NM.WVN);
            mVMwn.wvn(NM.WVN);
            MMWwV[VM[49]] = "none";
            wVVnn[VM[49]] = "none";
            MVMvv[VM[49]] = "none";
            VMV.nMn();
            return 0;
          }
          mMv -= nv;
        } else if (nvn === 1) {
          vwN();
          if (mMv < 0) {
            nvn = 0;
            if (Mv.nW.NNnMv !== 1) {
              MMWwV[VM[49]] = "inline-block";
            }
            document[VM[57]]("bod")[VM[219]][VM[251]] = "#46664d";
            MMvmM();
          }
          mMv -= nv;
        }
        return 1;
      }
      ;
      ;
      function Nmw(vN) {
        mvv.VNv(vN, mvv.nvmmV);
        var WN = 0;
        if (nnmvn.Nn() === 1) {
          WN = 1;
        }
        if (wvM.Nn() === 1) {
          WN = 1;
        }
        if (nWm.Nn() === 1) {
          WN = 1;
        }
        if (wVMmV.Nn() === 1) {
          WN = 1;
        }
        if (NnmwM.Nn() === 1) {
          WN = 1;
        }
        if (NmWvw.Nn() === 1) {
          WN = 1;
        }
        if (mWVWW.Nn() === 1) {
          WN = 1;
        }
        if (MmNnw.Nn() === 1) {
          WN = 1;
        }
        if (VmV.Nn() === 1) {
          WN = 1;
        }
        if (nwNWw.Nn() === 1) {
          WN = 1;
        }
        if (wnnWW.Nn() === 1) {
          WN = 1;
        }
        if (NMw.Nn() === 1) {
          WN = 1;
        }
        if (Mvm.Nn() === 1) {
          WN = 1;
        }
        if (WMVMM.Nn() === 1) {
          WN = 1;
        }
        if (WmvWN.Nn() === 1) {
          WN = 1;
        }
        if (NnWmM.Nn() === 1) {
          WN = 1;
        }
        if (NMvNv.Nn() === 1) {
          WN = 1;
        }
        if (NwM.Nn() === 1) {
          WN = 1;
        }
        if (mVMwn.Nn() === 1) {
          WN = 1;
        }
        VVvnN.Nn();
        wwwNM.Nn();
      }
      ;
      ;
      function nmw(vN) {
        mvv.VNv(vN, mvv.MmVVW);
        var WN = 0;
        if (nnmvn.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://webgames.io", "_blank");
        }
        if (wvM.Nn() === 1) {
          WN = 1;
          wWvnM();
          wN.Vww(wN.mn[VM[223]], 1, 0);
        }
        if (nWm.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://twitter.com/LapaMauve", "_blank");
        }
        if (wVMmV.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://www.facebook.com/LapaMauve/", "_blank");
        }
        if (NnmwM.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://www.youtube.com/channel/UCirbDxZKLP2e7UJqeUBXmFQ", "_blank");
        }
        if (NmWvw.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://tiktok.com/lapamauve", "_blank");
        }
        if (mWVWW.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://www.reddit.com/r/devastio/", "_blank");
        }
        if (MmNnw.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://discord.com/invite/njg9j9sYBC", "_blank");
        }
        if (VmV.Nn() === 1) {
          WN = 1;
          if (vNm.vNn !== 0) {
            if ((NVm[VM[102]] & nNN.VnvmV) === 0 && (NVm[VM[102]] & nNN.NvWwM) === 0) {
              vNm.vNn = 0;
              wN.Vww(wN.mn[VM[59]], 1, 0);
              Mvm[VM[167]]();
              NMw[VM[167]]();
              document[VM[57]]("serverList")[VM[66]] = vNm.wWWWw;
              document[VM[57]]("servers")[VM[45]] = vNm.WNWwN;
              vwN();
            }
          }
        }
        if (nwNWw.Nn() === 1) {
          WN = 1;
          if (0 && vNm.vNn !== 1 && vNm.nmvwV === 1) {
            if ((NVm[VM[102]] & nNN.VnvmV) === 0 && (NVm[VM[102]] & nNN.NvWwM) === 0) {
              vNm.vnWmw = 0;
              vNm.vNn = Mv.NwvNm;
              wN.Vww(wN.mn[VM[59]], 1, 0);
              Mvm.mWn();
              NMw.mWn();
              vNm.wWWWw = document[VM[57]]("serverList")[VM[66]];
              vNm.WNWwN = document[VM[57]]("servers")[VM[45]];
              document[VM[57]]("serverList")[VM[66]] = vNm.nNnNN;
              var mM = 0;
              var Mwmmw = 0;
              for (var Wv in vNm.regions) {
                if (Wv === NVm.vww[vNm.WNWwN][4]) {
                  vNm.vnWmw = Math[VM[61]](Math[VM[185]]() * vNm.regions[Wv][VM[126]]);
                  Mwmmw = mM;
                  break;
                }
                mM++;
              }
              ;
              document[VM[57]]("servers")[VM[45]] = Mwmmw;
              vwN();
            }
          }
        }
        if (wnnWW.Nn() === 1) {
          WN = 1;
          if (vNm.vNn !== 1 && vNm.nmvwV === 1) {
            if ((NVm[VM[102]] & nNN.VnvmV) === 0 && (NVm[VM[102]] & nNN.NvWwM) === 0) {
              vNm.vnWmw = 0;
              vNm.vNn = Mv.vWmNw;
              wN.Vww(wN.mn[VM[59]], 1, 0);
              Mvm.mWn();
              NMw.mWn();
              vNm.wWWWw = document[VM[57]]("serverList")[VM[66]];
              vNm.WNWwN = document[VM[57]]("servers")[VM[45]];
              document[VM[57]]("serverList")[VM[66]] = vNm.WwvMN;
              var Mwmmw = Math[VM[61]](Math[VM[185]]() * 1);
              document[VM[57]]("servers")[VM[45]] = Mwmmw;
              vwN();
            }
          }
        }
        if (NMw.Nn() === 1) {
          WN = 1;
          if (vNm.nmvwV !== 0 && vNm.vNn === 0) {
            if ((NVm[VM[102]] & nNN.VnvmV) === 0 && (NVm[VM[102]] & nNN.NvWwM) === 0) {
              vNm.vnWmw = 0;
              vNm.nmvwV = 0;
              wN.Vww(wN.mn[VM[59]], 1, 0);
              VmV.mWn();
              nwNWw.mWn();
              wnnWW.mWn();
              vNm.wWWWw = document[VM[57]]("serverList")[VM[66]];
              vNm.WNWwN = document[VM[57]]("servers")[VM[45]];
              document[VM[57]]("serverList")[VM[66]] = vNm.VmNWw;
              vNm.vnWmw = 0;
              document[VM[57]]("servers")[VM[45]] = 0;
              vwN();
            }
          }
        }
        if (Mvm.Nn() === 1) {
          WN = 1;
          if (vNm.nmvwV !== 1 && vNm.vNn === 0) {
            if ((NVm[VM[102]] & nNN.VnvmV) === 0 && (NVm[VM[102]] & nNN.NvWwM) === 0) {
              vNm.nmvwV = 1;
              vNm.vNn = 0;
              wN.Vww(wN.mn[VM[59]], 1, 0);
              VmV[VM[167]]();
              wnnWW[VM[167]]();
              document[VM[57]]("serverList")[VM[66]] = vNm.wWWWw;
              document[VM[57]]("servers")[VM[45]] = vNm.WNWwN;
              vwN();
            }
          }
        }
        if (WMVMM.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("http://limax.io", "_blank");
        }
        if (WmvWN.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("http://oib.io", "_blank");
        }
        if (NnWmM.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("http://starve.io", "_blank");
        }
        if (NMvNv.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://nend.io", "_blank");
        }
        if (NwM.Nn() === 1) {
          WN = 1;
          var vnnWw = Wm[VM[64]]("https://devast.io/private-server", "_blank");
        }
        if (mVMwn.Nn() === 1) {
          WN = 1;
          vNm.wWn(vWnWM);
          wN.Vww(wN.mn[VM[223]], 1, 0);
        }
        if (VVvnN.Nn() === 1 || wwwNM.Nn() === 1) {
          var vnnWw = Wm[VM[64]](NvmVN.mvVnv, "_blank");
        }
        ;
      }
      ;
      ;
      function mVm(vN) {
        mvv.VNv(vN, mvv.MvNnv);
        var WN = 0;
        if (nnmvn.Nn() === 1) {
          WN = 1;
        }
        if (wvM.Nn() === 1) {
          WN = 1;
        }
        if (nWm.Nn() === 1) {
          WN = 1;
        }
        if (wVMmV.Nn() === 1) {
          WN = 1;
        }
        if (NnmwM.Nn() === 1) {
          WN = 1;
        }
        if (NmWvw.Nn() === 1) {
          WN = 1;
        }
        if (mWVWW.Nn() === 1) {
          WN = 1;
        }
        if (MmNnw.Nn() === 1) {
          WN = 1;
        }
        if (VmV.Nn() === 1) {
          WN = 1;
        }
        if (nwNWw.Nn() === 1) {
          WN = 1;
        }
        if (wnnWW.Nn() === 1) {
          WN = 1;
        }
        if (NMw.Nn() === 1) {
          WN = 1;
        }
        if (Mvm.Nn() === 1) {
          WN = 1;
        }
        if (WMVMM.Nn() === 1) {
          WN = 1;
        }
        if (WmvWN.Nn() === 1) {
          WN = 1;
        }
        if (NnWmM.Nn() === 1) {
          WN = 1;
        }
        if (NMvNv.Nn() === 1) {
          WN = 1;
        }
        if (NwM.Nn() === 1) {
          WN = 1;
        }
        if (mVMwn.Nn() === 1) {
          WN = 1;
        }
        VVvnN.Nn();
        wwwNM.Nn();
      }
      ;
      ;
      function vwn(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          Nmw(VNM);
        }
      }
      ;
      ;
      function nmM(vN) {
        nmw(VNM);
      }
      ;
      ;
      function mNm(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          nmw(VNM);
        }
      }
      ;
      ;
      function VvM(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          mVm(VNM);
        }
      }
      ;
      ;
      function MMvmM() {
        if (Mwv === 0) {
          Wm[VM[121]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mousemove", mVm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      function nnmNm() {
        if (Mwv === 0) {
          Wm[VM[183]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mousemove", mVm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      return {
        wWn: wWn,
        nvM: nvM,
        nMn: nMn,
        update: vwN,
        Mw: Mw
      };
    }();
    vNm.nmNnv = 0; 
    Object.defineProperty(vNm, 'nmNnv', {
        value: 0,
        writable: false
    });
    var VNw = function () {
      function wnw(WwN) {
        console[VM[172]]("onError", WwN);
        if (Mv.vNn === 1) {
          wWn(wnNWw);
        } else {
          wWn(nWwnv);
        }
      }
      ;
      ;
      function MNn() {}
      ;
      ;
      function NnvMn() {
        return wMN;
      }
      ;
      ;
      function MWw() {
        return wMN & nVv;
      }
      ;
      ;
      var mWvNN = null;
      var vvvMv = 0;
      var wMN = 0;
      var WMm = 0;
      var NWv = 0;
      var nVv = 0;
      var wMmNM = 0;
      var wmWNV = 0;
      var NWvWw = 0;
      function MMwnv(nvMmm) {
        NnN();
        wMN = 1;
        if (nvMmm === 1) {
          nVv = 1;
        } else if (nvMmm === 2) {
          wMmNM = 1;
        }
      }
      ;
      ;
      function NnN() {
        wMN = 0;
        WNw.wvn(NM.WVN);
        WMm = 0;
        NWv = 0;
        nVv = 0;
        wMmNM = 0;
        wmWNV = 0;
        Mv.vnVnM();
      }
      ;
      ;
      var vVMvv = NM.vnn(63, 28, ["img/addteam-button-out.png", "img/addteam-button-in.png", "img/addteam-button-click.png"]);
      var mwMMw = NM.vnn(44, 33, ["img/leave-button-out.png", "img/leave-button-in.png", "img/leave-button-click.png"]);
      var mMwWn = NM.vnn(44, 33, ["img/lockteam-button-out.png", "img/lockteam-button-in.png", "img/lockteam-button-click.png"]);
      var WmWnW = NM.vnn(44, 33, ["img/unlockteam-button-out.png", "img/unlockteam-button-in.png", "img/unlockteam-button-click.png"]);
      var MNmwW = NM.vnn(44, 33, ["img/delete-button-out.png", "img/delete-button-in.png", "img/delete-button-click.png"]);
      var VNnWV = NM.vnn(44, 33, ["img/delete-button-out.png", "img/delete-button-in.png", "img/delete-button-click.png"]);
      var Mnvvw = NM.vnn(44, 33, ["img/join-button-out.png", "img/join-button-in.png", "img/join-button-click.png"]);
      var mWnmw = NM.vnn(71, 46, ["img/craft-button-out.png", "img/craft-button-in.png", "img/craft-button-click.png"]);
      var nwwVn = NM.vnn(71, 46, ["img/cancel-craft-button-out.png", "img/cancel-craft-button-in.png", "img/cancel-craft-button-click.png"]);
      var mwNwn = NM.vnn(71, 46, ["img/unlock-button-out.png", "img/unlock-button-in.png", "img/unlock-button-click.png"]);
      var mwW = NM.vnn(64, 63, ["img/bag-button-out.png", "img/bag-button-in.png", "img/bag-button-click.png"]);
      mwW[VM[64]] = 0;
      var Mmw = [];
      var Wvv = [];
      var mmvNw = 0;
      var WNw = NM.vnn(43, 43, ["img/close-box-out.png", "img/close-box-in.png", "img/close-box-click.png"]);
      var nvVmM = [MW.Mvw("img/high-particules-out.png"), MW.Mvw("img/high-particules-in.png"), MW.Mvw("img/high-particules-click.png")];
      var VmmMV = [MW.Mvw("img/join-button-out.png"), MW.Mvw("img/join-button-in.png"), MW.Mvw("img/join-button-click.png")];
      var NvnWn = [MW.Mvw("img/remove-button-out.png"), MW.Mvw("img/remove-button-in.png"), MW.Mvw("img/remove-button-click.png")];
      var nwnww = NM.vnn(54, 42, null, nvVmM);
      var vMVvw = [MW.Mvw("img/low-particules-out.png"), MW.Mvw("img/low-particules-in.png"), MW.Mvw("img/low-particules-click.png")];
      var NVMMm = NM.vnn(54, 42, null, vMVvw);
      var VmMvn = [MW.Mvw("img/no-particules-out.png"), MW.Mvw("img/no-particules-in.png"), MW.Mvw("img/no-particules-click.png")];
      var NnnwW = NM.vnn(54, 42, null, VmMvn);
      var MvMnM = [MW.Mvw("img/fuel-button-out.png"), MW.Mvw("img/fuel-button-in.png"), MW.Mvw("img/fuel-button-click.png")];
      var vVnnN = NM.vnn(46, 46, null, MvMnM);
      var MmVWV = [MW.Mvw("img/fuel1-button-out.png"), MW.Mvw("img/fuel1-button-in.png"), MW.Mvw("img/fuel1-button-click.png")];
      var mWVvW = NM.vnn(46, 46, null, MmVWV);
      var VWVvV = [MW.Mvw("img/energy-cells-button-out.png"), MW.Mvw("img/energy-cells-button-in.png"), MW.Mvw("img/energy-cells-button-click.png")];
      var WwwNv = NM.vnn(46, 46, null, VWVvV);
      var wNmWW = [MW.Mvw("img/high-resolution-out.png"), MW.Mvw("img/high-resolution-in.png"), MW.Mvw("img/high-resolution-click.png")];
      var MMMmV = NM.vnn(54, 42, null, wNmWW);
      var NWmNv = [MW.Mvw("img/medium-resolution-out.png"), MW.Mvw("img/medium-resolution-in.png"), MW.Mvw("img/medium-resolution-click.png")];
      var wNnwN = NM.vnn(54, 42, null, NWmNv);
      var mVWnv = [MW.Mvw("img/low-resolution-out.png"), MW.Mvw("img/low-resolution-in.png"), MW.Mvw("img/low-resolution-click.png")];
      var nwMvn = NM.vnn(54, 42, null, mVWnv);
      var NWwmM = [MW.Mvw("img/azerty-button-out.png"), MW.Mvw("img/azerty-button-in.png"), MW.Mvw("img/azerty-button-click.png")];
      var vwVMN = NM.vnn(81, 33, null, NWwmM);
      var Mvmvn = [MW.Mvw("img/qwerty-button-out.png"), MW.Mvw("img/qwerty-button-in.png"), MW.Mvw("img/qwerty-button-click.png")];
      var wMwvN = NM.vnn(87, 33, null, Mvmvn);
      var MnvvM = [MW.Mvw("img/sound-on-out.png"), MW.Mvw("img/sound-on-in.png"), MW.Mvw("img/sound-on-click.png")];
      var mVNMv = [MW.Mvw("img/sound-off-out.png"), MW.Mvw("img/sound-off-in.png"), MW.Mvw("img/sound-off-click.png")];
      var nnNMM = NM.vnn(51, 36, null, MnvvM);
      var wWWMW = NM.vnn(51, 36, null, mVNMv);
      var mvVvn = NM.vnn(51, 36, null, MnvvM);
      var WWNWw = NM.vnn(51, 36, null, mVNMv);
      var wmV = -1;
      var VWwMw = -1;
      var nwnvv = MW.Mvw("img/inv-empty.png");
      var vNvWV = [nwnvv, nwnvv, nwnvv];
      var vwv = [];
      var nwV = [];
      var nmW = [];
      var WVw = [];
      var mVnWN = [];
      var MWmNw = [];
      var VMVNW = [];
      var Nwn = [];
      var wMWmv = NM.vnn(58, 58, null, vNvWV);
      var NMn = [];
      var MMN = [];
      var Vvv = 0;
      var mwvVw = 0;
      var nnWVw = 0;
      var mNmNV = 0;
      var NnvNw = 0;
      var mNMNv = 0;
      var WNWwv = 0;
      var vNwVM = 0;
      function NnwnV() {
        if (mvv[VM[102]] === mvv.nvmmV && Mv.nW[VM[181]] === 0) {
          if (Mv.nW.nvN === 1) {
            Mv.nW[VM[181]] = -1;
            if (Mv.nW.vNNVn === 1) {
              NVm.VnM(JSON[VM[18]]([14, Mv.nW.NMvmW, Mv.nW.VnW, Mv.nW.Vmn]));
            }
          } else {
            Mv.nW[VM[181]] = 1;
            Mv.vVM = -1;
            NVm.NnmnN();
          }
        } else if (mvv[VM[102]] === mvv.MmVVW) {
          if (Mv.nW.nvN === 1) {
            mmvNw = 0;
            Mv.nW[VM[181]] = 0;
          } else if (Mv.nW[VM[181]] === 1) {
            mmvNw = 0;
            Mv.nW[VM[181]] = 0;
            NVm.VnNwN();
          } else if (mmvNw === 1) {
            Mv.nW[VM[181]] = 1;
            Mv.vVM = -1;
            NVm.NnmnN();
          }
        }
      }
      ;
      ;
      function mVnwN() {
        NVm[VM[109]]();
        if (nv > 5000) {
          NVm.VnM("[20]");
        }
        if (vvvMv === 0) {
          NVm.WMMNM();
          NVm.vvnwV();
        }
        if (mvv[VM[102]] === mvv.nvmmV) {
          NVm.NWmVN();
        } else {
          NVm.MwWWm();
        }
        NnwnV();
      }
      ;
      ;
      var mVMvw;
      var mnVww;
      var nMnnN;
      var WWwMW;
      var vwmvv;
      var mWW;
      var NvM;
      var VnNvW;
      var nNMmW;
      var nNv;
      var nVwvm;
      var VMn;
      var vnv;
      var Nnnmv;
      var NnW;
      var NnwNv;
      var WvnNn;
      var VWnmM;
      var wmwvW;
      function nvM() {
        mWvNN = document[VM[57]]("chatInput");
        var NvV = 68;
        var MwV = nWw[wWm].VWVVV + 8;
        for (Wv = 0; Wv < MwV; Wv++) {
          vwv[VM[154]](NM.vnn(NvV, NvV, null, vNvWV));
        }
        for (Wv = 0; Wv < 4; Wv++) {
          Nwn[VM[154]](NM.vnn(NvV, NvV, null, vNvWV));
        }
        NvV = 49;
        for (Wv = 0; Wv < 35; Wv++) {
          nwV[VM[154]](NM.vnn(NvV, NvV, null, vNvWV));
        }
        NvV = 40;
        for (Wv = 0; Wv < 5; Wv++) {
          nmW[VM[154]](NM.vnn(NvV, NvV, null, vNvWV));
        }
        for (Wv = 0; Wv < 4; Wv++) {
          WVw[VM[154]](NM.vnn(NvV, NvV, null, vNvWV));
        }
        for (Wv = 0; Wv < 3; Wv++) {
          mVnWN[VM[154]](NM.vnn(NvV, NvV, null, vNvWV));
        }
        for (Wv = 0; Wv < 9; Wv++) {
          VMVNW[VM[154]](NM.vnn(29, 27, null, NvnWn));
        }
        for (Wv = 0; Wv < 18; Wv++) {
          MWmNw[VM[154]](NM.vnn(44, 33, null, VmmMV));
        }
        VNw.WNw = NnN;
        VNw.NnvWv = MMwnv;
        VNw.vwv = vwv;
        VNw.nwV = nwV;
        VNw.nmW = nmW;
        VNw.wMWmv = wMWmv;
        VNw.WVw = WVw;
        VNw.mVnWN = mVnWN;
        VNw.Nwn = Nwn;
        VNw.VMVNW = VMVNW;
        VNw[VM[116]] = MWmNw;
        VNw.MWw = MWw;
        VNw.NnvMn = NnvMn;
        VNw.nwM = "";
        VNw.NnWvv = Mnvvw;
        VNw.nWnvV = VNnWV;
        VNw.NMn = NMn;
        VNw.MMN = MMN;
        VNw.VVwwN = 0;
        VNw.nWvWv = 0;
        VNw.wnvnV = 0;
        VNw.NwNmV = 0;
        VNw.mwMmN = 0;
        VNw.wVNWv = 0;
        Mmw[vn.VMv] = NM.vnn(42, 42, ["img/building-button-out.png", "img/building-button-in.png", "img/building-button-click.png"]);
        Mmw[vn.NmVMV] = NM.vnn(42, 42, ["img/skill-button-out.png", "img/skill-button-in.png", "img/skill-button-click.png"]);
        Mmw[vn.VmM] = NM.vnn(42, 42, ["img/clothe-button-out.png", "img/clothe-button-in.png", "img/clothe-button-click.png"]);
        Mmw[vn.wwwNW] = NM.vnn(42, 42, ["img/plant-button-out.png", "img/plant-button-in.png", "img/plant-button-click.png"]);
        Mmw[vn.WnMWm] = NM.vnn(42, 42, ["img/medecine-button-out.png", "img/medecine-button-in.png", "img/medecine-button-click.png"]);
        Mmw[vn.NvWVw] = NM.vnn(42, 42, ["img/resources-button-out.png", "img/resources-button-in.png", "img/resources-button-click.png"]);
        Mmw[vn.WWW] = NM.vnn(42, 42, ["img/survival-button-out.png", "img/survival-button-in.png", "img/survival-button-click.png"]);
        Mmw[vn.wVnMM] = NM.vnn(42, 42, ["img/tool-button-out.png", "img/tool-button-in.png", "img/tool-button-click.png"]);
        Mmw[vn.MnM] = NM.vnn(42, 42, ["img/weapon-button-out.png", "img/weapon-button-in.png", "img/weapon-button-click.png"]);
        Mmw[vn.nWV] = NM.vnn(42, 42, ["img/cable-button-out.png", "img/cable-button-in.png", "img/cable-button-click.png"]);
        Wvv[Mn.MWm] = NM.vnn(42, 42, ["img/own-button-out.png", "img/own-button-in.png", "img/own-button-click.png"]);
        Wvv[Mn.nwm] = NM.vnn(42, 42, ["img/fire-button-out.png", "img/fire-button-in.png", "img/fire-button-click.png"]);
        Wvv[Mn.vWv] = NM.vnn(42, 42, ["img/workbench1-button-out.png", "img/workbench1-button-in.png", "img/workbench1-button-click.png"]);
        Wvv[Mn.Wvw] = NM.vnn(42, 42, ["img/bbq-button-out.png", "img/bbq-button-in.png", "img/bbq-button-click.png"]);
        Wvv[Mn.VmW] = NM.vnn(42, 42, ["img/composter-button-out.png", "img/composter-button-in.png", "img/composter-button-click.png"]);
        Wvv[Mn.mmn] = NM.vnn(42, 42, ["img/weaving-machine-button-out.png", "img/weaving-machine-button-in.png", "img/weaving-machine-button-click.png"]);
        Wvv[Mn.wNW] = NM.vnn(42, 42, ["img/welding-machine-button-out.png", "img/welding-machine-button-in.png", "img/welding-machine-button-click.png"]);
        Wvv[Mn.WNm] = NM.vnn(42, 42, ["img/workbench2-button-out.png", "img/workbench2-button-in.png", "img/workbench2-button-click.png"]);
        Wvv[Mn.vMM] = NM.vnn(42, 42, ["img/smelter-button-out.png", "img/smelter-button-in.png", "img/smelter-button-click.png"]);
        Wvv[Mn.MVV] = NM.vnn(42, 42, ["img/workbench3-button-out.png", "img/workbench3-button-in.png", "img/workbench3-button-click.png"]);
        Wvv[Mn.MNw] = NM.vnn(42, 42, ["img/agitator-button-out.png", "img/agitator-button-in.png", "img/agitator-button-click.png"]);
        Wvv[Mn.vMW] = NM.vnn(42, 42, ["img/extractor-button-out.png", "img/extractor-button-in.png", "img/extractor-button-click.png"]);
        Wvv[Mn.nNW] = NM.vnn(42, 42, ["img/feeder-button-out.png", "img/feeder-button-in.png", "img/feeder-button-click.png"]);
        mVMvw = NM.MwW(255, 174, "img/profile-player2.png");
        mnVww = NM.MwW(269, 267, "img/settings-box.png");
        nMnnN = NM.MwW(162, 165, "img/chest-box4.png");
        WWwMW = NM.MwW(595, 405, "img/craftbox2.png");
        vwmvv = NM.MwW(412, 412, "img/borderBigMinimap2.png");
        mWW = NM.MwW(128, 128, "img/minimap.png");
        NvM = NM.MwW(233, 246, "img/leaderboard.png");
        VnNvW = NM.MwW(516, 275, "img/jointeam-box.png");
        nNMmW = NM.MwW(513, 150, "img/memberteam-box.png");
        nNv = NM.vnn(40, 40, ["img/full-screen-out.png", "img/full-screen-in.png", "img/full-screen-click.png"]);
        nVwvm = NM.vnn(64, 63, ["img/craftbox-button-out.png", "img/craftbox-button-in.png", "img/craftbox-button-click.png"]);
        VMn = NM.vnn(40, 40, ["img/settings-out.png", "img/settings-in.png", "img/settings-click.png"]);
        vnv = NM.vnn(40, 40, ["img/minimap-button-out.png", "img/minimap-button-in.png", "img/minimap-button-click.png"]);
        Nnnmv = NM.vnn(40, 40, ["img/team-button-out.png", "img/team-button-in.png", "img/team-button-click.png"]);
        NnW = NM.vnn(34, 33, ["img/close-leaderboard-out.png", "img/close-leaderboard-in.png", "img/close-leaderboard-click.png"]);
        NnwNv = NM.vnn(34, 33, ["img/open-leaderboard-out.png", "img/open-leaderboard-in.png", "img/open-leaderboard-click.png"]);
        WvnNn = document[VM[57]]("chat");
        VWnmM = WvnNn[VM[219]];
        wmwvW = {
          x: 0,
          y: 0
        };
      }
      ;
      ;
      var VMV;
      var VNM = new mvv.wvvmw();
      var nNM = new wwm.wvNvn();
      var MVn = 2000;
      var vvN = 0;
      var vnVmN = wMM.vNv.vvW;
      var NvN = 1000;
      var nvn = 0;
      var mMvVW = wMM.vNv.VWN;
      var WmW = 0;
      var mMv = 0;
      var MvM = undefined;
      function nMn() {
        NVm.wnw = wnw;
        NVm.MNn = MNn;
        if (vmn[VM[174]]("showLeaderboard") === "0") {
          NnW.mWn();
          NnwNv[VM[167]]();
        } else {
          NnwNv.mWn();
          NnW[VM[167]]();
        }
        document[VM[57]]("bod")[VM[219]][VM[251]] = "#46664D";
        mmvNw = 0;
        vNm.vvvVn++;
        VNw.nwM = "";
        VNw.MWmnv = 0;
        nnN.nmWVv();
        if (Mv.vNn === Mv.NwvNm) {
          Nnnmv.mWn();
          nVwvm[VM[167]]();
        } else if (Mv.nW.NNn > 0) {
          console[VM[172]]("HERE");
          Nnnmv.mWn();
          nVwvm.mWn();
        } else {
          Nnnmv[VM[167]]();
          nVwvm[VM[167]]();
        }
        MW.NMmNm(VNw);
        mMv = NvN;
        WmW = NvN;
        MvM = mMvVW;
        nvn = 1;
        vwN();
      }
      ;
      ;
      function wWn(wwM) {
        vvvMv = 0;
        NnN();
        nnN.vwWVw();
        VMV = wwM;
        nnmNm();
        mMv = MVn;
        WmW = MVn;
        MvM = vnVmN;
        vvN = 1;
      }
      ;
      ;
      function vwN() {
        var Nvm = 0;
        var vWn = 0;
        if (mMv > 0) {
          vWn = Vnv;
          var mwn = MvM(1 - mMv / WmW);
          if (mwn === 1) {
            mMv = 0;
          }
          if (nvn === 1) {
            mwn = 1 - Math[VM[0]](mwn);
          }
          Nvm *= mwn;
          vWn *= mwn;
        }
        mVMvw.mm[VM[232]] = Math[VM[61]](vW * 5) + Nvm;
        mVMvw.mm[VM[249]] = Vnv - Math[VM[61]](vW * 174) + Math[VM[61]](vW * -5) + vWn;
        mnVww.mm[VM[232]] = mVV - Math[VM[61]](vW * 134) + Nvm;
        mnVww.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 133)) + vWn;
        nMnnN.mm[VM[232]] = mVV - Math[VM[61]](vW * 81) + Nvm;
        nMnnN.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 82)) + vWn;
        WWwMW.mm[VM[232]] = mVV - Math[VM[61]](vW * 297) + Nvm;
        WWwMW.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 202)) + vWn;
        vwmvv.mm[VM[232]] = mVV - Math[VM[61]](vW * 206) + Nvm;
        vwmvv.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 206)) + vWn;
        mWW.mm[VM[232]] = Math[VM[61]](vW * 5) - Nvm;
        mWW.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        NvM.mm[VM[232]] = MVM - Math[VM[61]](vW * 233) + Math[VM[61]](vW * -6) - Nvm;
        NvM.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        VnNvW.mm[VM[232]] = mVV - Math[VM[61]](vW * 258) - Nvm;
        VnNvW.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 137)) - vWn;
        nNMmW.mm[VM[232]] = mVV - Math[VM[61]](vW * 256) - Nvm;
        nNMmW.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 75)) - vWn;
        nNv.mm[VM[232]] = mWW.mm[VM[232]] + Math[VM[61]](vW * 126);
        nNv.mm[VM[249]] = mWW.mm[VM[249]];
        nVwvm.mm[VM[232]] = nNv.mm[VM[232]] + Math[VM[61]](vW * 50);
        nVwvm.mm[VM[249]] = nNv.mm[VM[249]];
        VMn.mm[VM[232]] = nNv.mm[VM[232]];
        VMn.mm[VM[249]] = nNv.mm[VM[249]] + Math[VM[61]](vW * 44.5);
        vnv.mm[VM[232]] = VMn.mm[VM[232]];
        vnv.mm[VM[249]] = VMn.mm[VM[249]] + Math[VM[61]](vW * 44.5);
        Nnnmv.mm[VM[232]] = mWW.mm[VM[232]];
        Nnnmv.mm[VM[249]] = mWW.mm[VM[249]] + Math[VM[61]](vW * 127);
        NnW.mm[VM[232]] = MVM - Math[VM[61]](vW * 34) + Math[VM[61]](vW * -7) - Nvm;
        NnW.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        NnwNv.mm[VM[232]] = NnW.mm[VM[232]];
        NnwNv.mm[VM[249]] = NnW.mm[VM[249]];
        wmwvW[VM[232]] = mVV - Math[VM[61]](vW * 150) + Nvm;
        VWnmM[VM[125]] = wmwvW[VM[232]] + "px";
        wmwvW[VM[249]] = Math[VM[144]](0, nnW - 12) + Math[VM[61]](vW * 150) + vWn;
        VWnmM[VM[63]] = wmwvW[VM[249]] + "px";
        var mNNNM = document[VM[57]]("chatInput")[VM[219]];
        var MN = Math[VM[61]](vW * 250);
        var ww = Math[VM[61]](vW * 20);
        var VvW = Math[VM[61]](mVV - MN / 2) + "px";
        var wVV = Math[VM[61]](nnW - ww / 2 + vW * 85 + vWn) + "px";
        ww = ww + "px";
        MN = MN + "px";
        VWnmM[VM[255]] = MN;
        VWnmM[VM[104]] = ww;
        VWnmM[VM[125]] = VvW;
        VWnmM[VM[63]] = wVV;
        mNNNM[VM[255]] = MN;
        mNNNM[VM[104]] = ww;
        mNNNM[VM[88]] = Math[VM[61]](vW * 14) + "px";
      }
      ;
      ;
      function Mw() {
        if (NmVMN() === 0) {
          return;
        }
        mVnwN();
        WV[VM[48]](0, 0, MVM, Vnv);
        Mv.wMvvN();
        Mv.VMMNN();
        Vw.VMnnv();
        Vw.vVM();
        Vw.wnN(mVMvw.mm[VM[232]], mVMvw.mm[VM[249]]);
        Vw.vwM(mWW.mm[VM[232]], mWW.mm[VM[249]]);
        Vw.vwv(NMn, MMN, wmV, mwW);
        mVMvw.Mw();
        mWW.Mw();
        nNv.Mw();
        nVwvm.Mw();
        VMn.Mw();
        vnv.Mw();
        Nnnmv.Mw();
        Vw.wVvMW(mVMvw.mm[VM[232]], mVMvw.mm[VM[249]]);
        if (Mv.vNn !== Mv.NwvNm) {
          if (NnW.mm[VM[231]] === 0) {
            NvM.Mw();
            Vw.NvM(NvM.mm[VM[232]], NvM.mm[VM[249]]);
            NnW.Mw();
          } else {
            NnwNv.Mw();
          }
        }
        if (wMN === 1) {
          if (WMm === 1) {
            Vw.MNNVn(vwmvv, WNw);
          } else if (NWv === 1) {
            Vw.mWnWW(mnVww, MMMmV, wNnwN, nwMvn, vwVMN, wMwvN, nnNMM, wWWMW, mvVvn, WWNWw, WNw, nwnww, NVMMm, NnnwW);
          } else if (nVv === 1) {
            Vw.nwV(WWwMW, WNw, Mmw, mWnmw, nwwVn, mwNwn, Wvv, wMWmv, NMn, MMN, vVnnN, mWVvW, WwwNv, VWwMw);
          } else if (wMmNM === 1) {
            Vw.Nwn(nMnnN, WNw, NMn, MMN);
          } else if (wmWNV === 1) {
            Vw.nvW(WNw, VnNvW, nNMmW, mwMMw, vVMvv, mMwWn, WmWnW, MNmwW);
          }
        } else if (Mwv === 1) {
          if (wwm.vnNmn() + wwm.nWNmN() + wwm.VWvwv() + wwm.VVmNV() >= 1) {
            WV[VM[149]] = 0.3;
            var nN = nWN - wwwmw * 1.5;
            var wn = mwMWM + wwwmw / 4;
            MW.MVvvv(WV, nN, wn, 60);
            MW.NNMMw(WV, "#000000");
            MW.MVvvv(WV, nN + Math[VM[178]](mwvVw) * nnWVw * vW, wn + Math[VM[142]](mwvVw) * nnWVw * vW, 30);
            MW.NNMMw(WV, "#FFFFFF");
            WV[VM[149]] = 1;
          }
          if (NnvNw === 1) {
            WV[VM[149]] = 0.3;
            var nN = nWN + wwwmw * 1.5;
            var wn = mwMWM + wwwmw / 4;
            MW.MVvvv(WV, nN, wn, 60);
            MW.NNMMw(WV, "#000000");
            MW.MVvvv(WV, nN + Math[VM[178]](mvv[VM[246]]) * 25 * vW, wn + Math[VM[142]](mvv[VM[246]]) * 25 * vW, 30);
            MW.NNMMw(WV, "#FFFFFF");
            WV[VM[149]] = 1;
          }
        }
        nnN.wVNNv();
      }
      ;
      ;
      function NmVMN() {
        if (vvN === 1) {
          vwN();
          if (mMv < 0) {
            vvN = 0;
            nNv.wvn(NM.WVN);
            nVwvm.wvn(NM.WVN);
            VMn.wvn(NM.WVN);
            vnv.wvn(NM.WVN);
            Nnnmv.wvn(NM.WVN);
            NnW.wvn(NM.WVN);
            NnwNv.wvn(NM.WVN);
            VWnmM[VM[49]] = "none";
            VMV.nMn();
            return 0;
          }
          mMv -= nv;
        } else if (nvn === 1) {
          vwN();
          if (mMv < 0) {
            nvn = 0;
            Mv.nW.wnwMm = Date[VM[105]]();
            MMvmM();
          }
          mMv -= nv;
        }
        return 1;
      }
      ;
      ;
      function Nmw(vN) {
        mvv.VNv(vN, mvv.nvmmV);
        var WN = 0;
        if (nNv.Nn() === 1) {
          WN = 1;
        }
        if (nVwvm.Nn() === 1) {
          WN = 1;
        }
        if (VMn.Nn() === 1) {
          WN = 1;
        }
        if (vnv.Nn() === 1) {
          WN = 1;
        }
        if (Nnnmv.Nn() === 1) {
          WN = 1;
        }
        if (NnW.Nn() === 1) {
          WN = 1;
        }
        if (NnwNv.Nn() === 1) {
          WN = 1;
        }
        if (Mv.nW.nWv !== 0) {
          if (Mnvvw.Nn() === 1 || VNnWV.Nn() === 1) {
            WN = 1;
          }
        }
        if (wMN === 1) {
          WNw.Nn();
          if (NWv === 1) {
            vwVMN.Nn();
            wMwvN.Nn();
            MMMmV.Nn();
            wNnwN.Nn();
            nwMvn.Nn();
            nnNMM.Nn();
            wWWMW.Nn();
            mvVvn.Nn();
            WWNWw.Nn();
            NVMMm.Nn();
            nwnww.Nn();
            NnnwW.Nn();
          } else if (nVv === 1) {
            if (Mv.nW.MMV === -1) {
              if (Mv.nW.vwwmm === 0 || Mv.nW.WVm === 1) {
                mWnmw.Nn();
              } else {
                nwwVn.Nn();
              }
              if ((Mv.nW.MnV === Mn.nwm || Mv.nW.MnV === Mn.Wvw || Mv.nW.MnV === Mn.VmW) && Mv.nW.Vv.NVW !== 255) {
                vVnnN.Nn();
              } else if ((Mv.nW.MnV === Mn.vMM || Mv.nW.MnV === Mn.vMW || Mv.nW.MnV === Mn.MNw) && Mv.nW.Vv.NVW !== 255) {
                mWVvW.Nn();
              } else if (Mv.nW.MnV === Mn.nNW && Mv.nW.Vv.NVW !== 255) {
                WwwNv.Nn();
              }
            } else {
              mwNwn.Nn();
            }
            for (var Wv = 0; Wv < Mmw[VM[126]]; Wv++) {
              Mmw[Wv].Nn();
            }
            for (Wv = 0; Wv < Wvv[VM[126]]; Wv++) {
              if (Mv.nW.mVmvW === Wv || Wv === 0) {
                Wvv[Wv].Nn();
              }
            }
            var MwV = Mv.nW.mnMWn;
            for (var Wv = 0; Wv < MwV; Wv++) {
              nwV[Wv].Nn();
            }
            MwV = Mv.nW.mwmvn;
            for (Wv = 0; Wv < MwV; Wv++) {
              nmW[Wv].Nn();
            }
            if (Mv.nW.WVm === 1) {
              for (Wv = 0; Wv < Mv.nW.Vv.MwV; Wv++) {
                WVw[Wv].Nn();
              }
            }
            MwV = Mv.nW.wMWVm;
            for (Wv = 0; Wv < MwV; Wv++) {
              mVnWN[Wv].Nn();
            }
            wMWmv.Nn();
          }
        }
        var mv = Mv.nW.vwv;
        var MwV = mv[VM[126]];
        if (MwV > 10 && mwW.Nn() === 1) {
          WN = 1;
        }
        for (var Wv = 0; Wv < MwV; Wv++) {
          if (Wv > 9 && mwW[VM[64]] === 0) {
            break;
          }
          if (vwv[Wv].Nn() === 1) {
            WN = 1;
            if (mv[Wv][0] !== 0) {
              var vMV = Mv.nW.vMV;
              if (vMV.nMw === 0) {
                vMV.nMw = 1;
                vMV[VM[232]] = mvv[VM[232]];
                vMV[VM[249]] = mvv[VM[249]];
                vMV[VM[5]] = Wv;
              }
            }
          } else if (wMmNM === 1) {
            var nVWnn = Mv.nW.Nwn;
            for (var MMn = 0; MMn < 4; MMn++) {
              if (nVWnn[MMn][0] !== 0) {
                Nwn[MMn].Nn();
              }
            }
          } else if (wmWNV === 1) {
            if (Mv.nW.nvW === -1) {
              vVMvv.Nn();
              var mM = 0;
              for (var Wv = 0; Wv < MWmNw[VM[126]]; Wv++) {
                if (Mv.MWW[Wv].wmmnM !== 0) {
                  MWmNw[mM].Nn();
                  mM++;
                }
              }
            } else if (Mv.nW.vwwmn === 1) {
              mMwWn.Nn();
              WmWnW.Nn();
              MNmwW.Nn();
              var mM = 0;
              var nvW = Mv.MWW[Mv.nW.nvW];
              for (var Wv = 0; Wv < Mv.wwW[VM[126]]; Wv++) {
                if (Wv === Mv.nW[VM[5]]) {
                  mM++;
                  continue;
                }
                var nW = Mv.wwW[Wv];
                if (nW.nvW === nvW[VM[5]] && nW.VVM === nvW.MWV) {
                  VMVNW[mM].Nn();
                  mM++;
                }
              }
            } else {
              mwMMw.Nn();
            }
          }
        }
        if (WN === 0 && wMN === 0) {
          mmvNw = 1;
          if (Mv.nW[VM[181]] === -1) {
            Mv.nW[VM[181]] = 0;
          }
        } else if (Mv.nW[VM[181]] === 0) {
          Mv.nW[VM[181]] = -1;
        }
      }
      ;
      ;
      function nmw(vN) {
        mvv.VNv(vN, mvv.MmVVW);
        var WN = 0;
        if (nNv.Nn() === 1) {
          WN = 1;
          if (NWvWw === 0) {
            NWvWw = 1;
            MW.WmMvv();
            if (Mv.Mwm === 0) {
              MVw[VM[219]][VM[251]] = "#3D5942";
            } else {
              MVw[VM[219]][VM[251]] = "#0B2129";
            }
            wN.Vww(wN.mn[VM[59]], 1, 0);
          } else {
            NWvWw = 0;
            MW.mvMMN();
            wN.Vww(wN.mn[VM[59]], 1, 0);
          }
        }
        if (nVwvm.Nn() === 1) {
          WN = 1;
          if (Mv.nW.NNn === 0) {
            if (nVv === 0) {
              NnN();
              wMN = 1;
              nVv = 1;
              Mv.mwV(Mn.MWm);
              wN.Vww(wN.mn[VM[64]], 1, 0);
              return;
            } else {
              NnN();
              wN.Vww(wN.mn[VM[64]], 1, 0);
              return;
            }
          }
        }
        if (VMn.Nn() === 1) {
          WN = 1;
          if (NWv === 0) {
            NnN();
            wMN = 1;
            NWv = 1;
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          } else {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
        }
        if (vnv.Nn() === 1) {
          WN = 1;
          if (WMm === 0) {
            NnN();
            wMN = 1;
            WMm = 1;
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          } else {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
        }
        if (Nnnmv.Nn() === 1) {
          WN = 1;
          if (wmWNV === 0) {
            NnN();
            wMN = 1;
            wmWNV = 1;
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          } else {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
        }
        if (NnW.Nn() === 1) {
          WN = 1;
          NnW.mWn();
          NnwNv[VM[167]]();
          vmn[VM[62]]("showLeaderboard", "0");
          wN.Vww(wN.mn[VM[59]], 1, 0);
          return;
        }
        if (NnwNv.Nn() === 1) {
          WN = 1;
          NnwNv.mWn();
          NnW[VM[167]]();
          vmn[VM[62]]("showLeaderboard", "1");
          wN.Vww(wN.mn[VM[59]], 1, 0);
          return;
        }
        var vMV = Mv.nW.vMV;
        if (Mv.nW.nWv !== 0) {
          if (Mnvvw.Nn() === 1) {
            NVm.VnM(JSON[VM[18]]([31, Mv.nW.nWv]));
            wN.Vww(wN.mn[VM[59]], 1, 0);
            Mv.vVNNN();
            return;
          }
          if (VNnWV.Nn() === 1) {
            wN.Vww(wN.mn[VM[59]], 1, 0);
            Mv.vVNNN();
            return;
          }
        }
        if (wMN === 1) {
          if (WNw.Nn() === 1) {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
          if (NWv === 1) {
            wMwvN.wvn(NM.WVN);
            vwVMN.wvn(NM.WVN);
            MMMmV.wvn(NM.WVN);
            wNnwN.wvn(NM.WVN);
            nwMvn.wvn(NM.WVN);
            nnNMM.wvn(NM.WVN);
            wWWMW.wvn(NM.WVN);
            mvVvn.wvn(NM.WVN);
            WWNWw.wvn(NM.WVN);
            nwnww.wvn(NM.WVN);
            NVMMm.wvn(NM.WVN);
            NnnwW.wvn(NM.WVN);
            if (vwVMN.Nn() === 1) {
              wwm.vmMnm();
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (wMwvN.Nn() === 1) {
              wwm.WnMNv();
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (MMMmV.Nn() === 1) {
              MW.mnVNV(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (wNnwN.Nn() === 1) {
              MW.mnVNV(2);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (nwMvn.Nn() === 1) {
              MW.mnVNV(3);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (nnNMM.Nn() === 1) {
              wN.vMNWM(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (wWWMW.Nn() === 1) {
              wN.vMNWM(0);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (mvVvn.Nn() === 1) {
              wN.WNmWM(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (WWNWw.Nn() === 1) {
              wN.WNmWM(0);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (NVMMm.Nn() === 1) {
              Vw.VnNVW(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (nwnww.Nn() === 1) {
              Vw.VnNVW(2);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (NnnwW.Nn() === 1) {
              Vw.VnNVW(0);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            }
            var MWmMM = mnVww.mm;
            if (mvv.mmV < MWmMM[VM[232]] || mvv.mmV > MWmMM[VM[232]] + vW * 234 || mvv.vMm < MWmMM[VM[249]] || mvv.vMm > MWmMM[VM[249]] + vW * 232) {
              NnN();
              wN.Vww(wN.mn[VM[64]], 1, 0);
              return;
            }
          } else if (WMm === 1) {
            var vWwnW = vwmvv.mm;
            if (mvv.mmV < vWwnW[VM[232]] || mvv.mmV > vWwnW[VM[232]] + vW * 412 || mvv.vMm < vWwnW[VM[249]] || mvv.vMm > vWwnW[VM[249]] + vW * 412) {
              NnN();
              wN.Vww(wN.mn[VM[64]], 1, 0);
              return;
            }
          } else if (nVv === 1) {
            if (Mv.nW.MMV === -1) {
              if (Mv.nW.vwwmm === 0 || Mv.nW.WVm === 1) {
                if (Mv.nW.WMV[Mv.nW.nVNnV] === 1 && mWnmw.Nn() === 1) {
                  if (Mv.nW.WVm === 1) {
                    if (Mv.nW.Vv.NVW !== 0 && Mv.nW.Vv.MwV < 4) {
                      NVm.VnM(JSON[VM[18]]([18, Mv.nW.VWMVN]));
                      wN.Vww(wN.mn.nwV, 0.8, 0);
                    }
                  } else {
                    NVm.VnM(JSON[VM[18]]([22, Mv.nW.VWMVN]));
                    wN.Vww(wN.mn.nwV, 0.8, 0);
                  }
                  mWnmw.wvn(NM.WVN);
                }
              } else if (nwwVn.Nn() === 1) {
                NVm.VnM(JSON[VM[18]]([23]));
                Mv.nW.vwwmm = 0;
                nwwVn.wvn(NM.WVN);
                wN.Vww(wN.mn[VM[59]], 1, 0);
              }
            } else if (mwNwn.Nn() === 1) {
              if (Mv.nW.WMV[Mv.nW.nVNnV] === 1) {
                NVm.VnM(JSON[VM[18]]([21, Mv.nW.VWMVN]));
                wN.Vww(wN.mn.VVvnV, 1, 0);
              }
            }
            if (Mmw[vn.NmVMV].Nn() === 1) {
              Mv.Wvm(vn.NmVMV);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.VMv].Nn() === 1) {
              Mv.Wvm(vn.VMv);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.VmM].Nn() === 1) {
              Mv.Wvm(vn.VmM);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.wwwNW].Nn() === 1) {
              Mv.Wvm(vn.wwwNW);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.WnMWm].Nn() === 1) {
              Mv.Wvm(vn.WnMWm);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.NvWVw].Nn() === 1) {
              Mv.Wvm(vn.NvWVw);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.nWV].Nn() === 1) {
              Mv.Wvm(vn.nWV);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.WWW].Nn() === 1) {
              Mv.Wvm(vn.WWW);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.wVnMM].Nn() === 1) {
              Mv.Wvm(vn.wVnMM);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Mmw[vn.MnM].Nn() === 1) {
              Mv.Wvm(vn.MnM);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.MWm].Nn() === 1) {
              Mv.mwV(Mn.MWm);
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.nwm].Nn() === 1 || Wvv[Mn.Wvw].Nn() === 1 || Wvv[Mn.VmW].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.vWv].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.wNW].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.mmn].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.WNm].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.MVV].Nn() === 1 || Wvv[Mn.nNW].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else if (Wvv[Mn.vMM].Nn() === 1 || Wvv[Mn.vMW].Nn() === 1 || Wvv[Mn.MNw].Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
            } else {
              var MwV = Mv.nW.mnMWn;
              for (var Wv = 0; Wv < MwV; Wv++) {
                if (nwV[Wv].Nn() === 1) {
                  Mv.nW.nVNnV = Wv;
                  Mv.mnVvm(Mv.nW.Wvv[Wv]);
                  wN.Vww(wN.mn[VM[59]], 1, 0);
                  return;
                }
              }
              MwV = Mv.nW.mwmvn;
              for (Wv = 0; Wv < MwV; Wv++) {
                if (nmW[Wv].Nn() === 1) {
                  return;
                }
              }
              if (Mv.nW.WVm === 1) {
                for (Wv = 0; Wv < Mv.nW.Vv.MwV; Wv++) {
                  if (WVw[Wv].Nn() === 1) {
                    NVm.VnM(JSON[VM[18]]([19, Wv]));
                    wN.Vww(wN.mn[VM[59]], 1, 0);
                    return;
                  }
                }
                if (Mv.nW.MnV === Mn.nwm || Mv.nW.MnV === Mn.Wvw || Mv.nW.MnV === Mn.VmW) {
                  if (Mv.nW.Vv.NVW !== 255 && vVnnN.Nn() === 1) {
                    NVm.VnM(JSON[VM[18]]([24]));
                    wN.Vww(wN.mn[VM[59]], 1, 0);
                    return;
                  }
                } else if (Mv.nW.MnV === Mn.vMM || Mv.nW.MnV === Mn.vMW || Mv.nW.MnV === Mn.MNw) {
                  if (Mv.nW.Vv.NVW !== 255 && mWVvW.Nn() === 1) {
                    NVm.VnM(JSON[VM[18]]([24]));
                    wN.Vww(wN.mn[VM[59]], 1, 0);
                    return;
                  }
                } else if (Mv.nW.MnV === Mn.MVV || Mv.nW.MnV === Mn.nNW) {
                  if (Mv.nW.Vv.NVW !== 255 && WwwNv.Nn() === 1) {
                    NVm.VnM(JSON[VM[18]]([24]));
                    wN.Vww(wN.mn[VM[59]], 1, 0);
                    return;
                  }
                }
              }
              var MWWnM = WWwMW.mm;
              if (vMV.nMw !== 1 && !vN[VM[22]] && (mvv.mmV < MWWnM[VM[232]] || mvv.mmV > MWWnM[VM[232]] + vW * 595 || mvv.vMm < MWWnM[VM[249]] || mvv.vMm > MWWnM[VM[249]] + vW * 325)) {
                NnN();
                wN.Vww(wN.mn[VM[64]], 1, 0);
                return;
              }
            }
          } else if (wMmNM === 1) {
            var nVWnn = Mv.nW.Nwn;
            for (var MMn = 0; MMn < 4; MMn++) {
              if (nVWnn[MMn][0] !== 0 && Nwn[MMn].Nn() === 1) {
                NVm.VnM(JSON[VM[18]]([27, MMn]));
                wN.Vww(wN.mn.vMV, 1, 0);
                return;
              }
            }
          } else if (wmWNV === 1) {
            if (Mv.nW.nvW === -1) {
              if (vVMvv.Nn() === 1 && Mv.nW.MWmnv === 1 && Date[VM[105]]() - Mv.nW.NwvWV > 30500) {
                NVm.VnM(JSON[VM[18]]([28, VNw.nwM]));
                wN.Vww(wN.mn[VM[59]], 1, 0);
                Mv.nW.NwvWV = Date[VM[105]]();
              }
              if (Date[VM[105]]() - Mv.nW.MMmwv > 10500) {
                var mM = 0;
                for (var Wv = 0; Wv < MWmNw[VM[126]]; Wv++) {
                  if (Mv.MWW[Wv].wmmnM !== 0) {
                    if (MWmNw[mM].Nn() === 1) {
                      NVm.VnM(JSON[VM[18]]([30, Wv]));
                      wN.Vww(wN.mn[VM[59]], 1, 0);
                      Mv.nW.MMmwv = Date[VM[105]]();
                    }
                    mM++;
                  }
                }
              }
            } else if (Mv.nW.vwwmn === 1) {
              if (mMwWn.Nn() === 1 && Mv.nW.NmNmW === 0) {
                NVm.VnM(JSON[VM[18]]([33]));
                Mv.nW.NmNmW = 1;
                wN.Vww(wN.mn[VM[59]], 1, 0);
                return;
              }
              if (WmWnW.Nn() === 1 && Mv.nW.NmNmW === 1) {
                NVm.VnM(JSON[VM[18]]([34]));
                Mv.nW.NmNmW = 0;
                wN.Vww(wN.mn[VM[59]], 1, 0);
                return;
              }
              if (MNmwW.Nn() === 1) {
                NVm.VnM(JSON[VM[18]]([29]));
                wN.Vww(wN.mn[VM[59]], 1, 0);
                return;
              }
              var mM = 0;
              var nvW = Mv.MWW[Mv.nW.nvW];
              for (var Wv = 0; Wv < Mv.wwW[VM[126]]; Wv++) {
                if (Wv === Mv.nW[VM[5]]) {
                  mM++;
                  continue;
                }
                var nW = Mv.wwW[Wv];
                if (nW.nvW === nvW[VM[5]] && nW.VVM === nvW.MWV) {
                  if (VMVNW[mM].Nn() === 1) {
                    NVm.VnM(JSON[VM[18]]([32, nW[VM[5]]]));
                    wN.Vww(wN.mn[VM[59]], 1, 0);
                    return;
                  }
                  mM++;
                }
              }
            } else if (mwMMw.Nn() === 1) {
              NVm.VnM(JSON[VM[18]]([35, Mv.nW[VM[5]]]));
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            }
          }
        }
        ;
        var mv = Mv.nW.vwv;
        var MwV = mv[VM[126]];
        var nWvnV = 0;
        if (MwV > 10 && mwW.Nn() === 1) {
          mwW[VM[64]] = (mwW[VM[64]] + 1) % 2;
          if (mwW[VM[64]] === 1) {
            wN.Vww(wN.mn.wWvwm, 0.08, 0);
          } else {
            wN.Vww(wN.mn.nVNvw, 0.08, 0);
          }
        }
        for (var Wv = 0; Wv < MwV; Wv++) {
          if (Wv > 9 && mwW[VM[64]] === 0) {
            break;
          }
          if (vwv[Wv].Nn() === 1) {
            nWvnV = 1;
            var mV = mv[Wv][0];
            var WM = mv[Wv][1];
            var VwW = mv[Wv][2];
            var MVvnW = mv[Wv][3];
            var vv = wWw[mV];
            if (vMV.nMw === 1) {
              if (vMV[VM[5]] !== Wv) {
                if (mv[Wv][0] === mv[vMV[VM[5]]][0]) {
                  if (vv[VM[100]] > mv[Wv][1] && vv[VM[100]] > mv[vMV[VM[5]]][1]) {
                    NVm.VnM(JSON[VM[18]]([10, mv[vMV[VM[5]]][0], mv[vMV[VM[5]]][1], mv[vMV[VM[5]]][2], mv[Wv][1], mv[Wv][2]]));
                    Mv.nW.vMV.nMw = 0;
                    wN.Vww(wN.mn.vMV, 1, 0);
                    return;
                  }
                }
                mv[Wv][0] = mv[vMV[VM[5]]][0];
                mv[Wv][1] = mv[vMV[VM[5]]][1];
                mv[Wv][2] = mv[vMV[VM[5]]][2];
                mv[Wv][3] = mv[vMV[VM[5]]][3];
                mv[vMV[VM[5]]][0] = mV;
                mv[vMV[VM[5]]][1] = WM;
                mv[vMV[VM[5]]][2] = VwW;
                mv[vMV[VM[5]]][3] = MVvnW;
                if (mV !== 0) {
                  VNw.vwv[vMV[VM[5]]].mvM(wWw[mV].nm[VM[58]], wWw[mV].nm.m);
                }
                VNw.vwv[Wv].mvM(wWw[mv[Wv][0]].nm[VM[58]], wWw[mv[Wv][0]].nm.m);
                Mv.nW.vMV.nMw = 0;
                wN.Vww(wN.mn.vMV, 1, 0);
                return;
              }
              Mv.nW.vMV.nMw = 0;
            }
            if (mV !== 0) {
              if (wMmNM === 1 && vN[VM[212]] !== 3) {
                NVm.VnM(JSON[VM[18]]([26, mV, WM, VwW, MVvnW]));
                wN.Vww(wN.mn.vMV, 1, 0);
              } else if (vN[VM[212]] === 3) {
                NVm.VnM(JSON[VM[18]]([9, mV, WM, VwW, MVvnW]));
                wN.Vww(wN.mn.mvnwm, 1, 0);
              } else if (vN[VM[22]]) {
                wN.Vww(wN.mn.vMV, 0.6, 0);
                NVm.VnM(JSON[VM[18]]([11, mV, WM, VwW]));
              } else {
                NVm.VnM(JSON[VM[18]]([8, mV, WM, VwW, MVvnW]));
              }
            }
          }
        }
        if (wMmNM === 1 && nWvnV === 0) {
          var WVnnv = nMnnN.mm;
          if (mvv.mmV < WVnnv[VM[232]] || mvv.mmV > WVnnv[VM[232]] + vW * 161 || mvv.vMm < WVnnv[VM[249]] || mvv.vMm > WVnnv[VM[249]] + vW * 165) {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
          }
        }
        if (vMV.nMw === 1) {
          var Wv = vMV[VM[5]];
          NVm.VnM(JSON[VM[18]]([9, mv[Wv][0], mv[Wv][1], mv[Wv][2], mv[Wv][3]]));
          wN.Vww(wN.mn.mvnwm, 1, 0);
        }
        vMV.nMw = 0;
      }
      ;
      ;
      function mVm(vN) {
        mvv.VNv(vN, mvv.MvNnv);
        var WN = 0;
        if (nNv.Nn() === 1) {
          WN = 1;
        }
        if (nVwvm.Nn() === 1) {
          WN = 1;
        }
        if (VMn.Nn() === 1) {
          WN = 1;
        }
        if (vnv.Nn() === 1) {
          WN = 1;
        }
        if (Nnnmv.Nn() === 1) {
          WN = 1;
        }
        if (NnW.Nn() === 1) {
          WN = 1;
        }
        if (NnwNv.Nn() === 1) {
          WN = 1;
        }
        if (Mv.nW.nWv !== 0) {
          Mnvvw.Nn();
          VNnWV.Nn();
        }
        if (wMN === 1) {
          WNw.Nn();
          if (NWv === 1) {
            vwVMN.Nn();
            wMwvN.Nn();
            MMMmV.Nn();
            wNnwN.Nn();
            nwMvn.Nn();
            nnNMM.Nn();
            wWWMW.Nn();
            mvVvn.Nn();
            WWNWw.Nn();
            NVMMm.Nn();
            nwnww.Nn();
            NnnwW.Nn();
          } else if (nVv === 1) {
            if (Mv.nW.MMV === -1) {
              if (Mv.nW.vwwmm === 0 || Mv.nW.WVm === 1) {
                mWnmw.Nn();
              } else {
                nwwVn.Nn();
              }
            } else {
              mwNwn.Nn();
            }
            for (var Wv = 0; Wv < Mmw[VM[126]]; Wv++) {
              Mmw[Wv].Nn();
            }
            for (Wv = 0; Wv < Wvv[VM[126]]; Wv++) {
              if (Mv.nW.mVmvW === Wv || Wv === 0) {
                Wvv[Wv].Nn();
              }
            }
            var MwV = Mv.nW.mnMWn;
            for (var Wv = 0; Wv < MwV; Wv++) {
              nwV[Wv].Nn();
            }
            VWwMw = -1;
            MwV = Mv.nW.mwmvn;
            for (Wv = 0; Wv < MwV; Wv++) {
              if (nmW[Wv].Nn() === 1) {
                VWwMw = Wv;
              }
            }
            if (Mv.nW.WVm === 1) {
              for (Wv = 0; Wv < Mv.nW.Vv.MwV; Wv++) {
                WVw[Wv].Nn();
              }
              if ((Mv.nW.MnV === Mn.nwm || Mv.nW.MnV === Mn.Wvw || Mv.nW.MnV === Mn.VmW) && Mv.nW.Vv.NVW !== 255) {
                vVnnN.Nn();
              } else if ((Mv.nW.MnV === Mn.vMM || Mv.nW.MnV === Mn.vMW || Mv.nW.MnV === Mn.MNw || Mv.nW.MnV === Mn.nNW) && Mv.nW.Vv.NVW !== 255) {
                mWVvW.Nn();
              } else if (Mv.nW.MnV === Mn.nNW && Mv.nW.Vv.NVW !== 255) {
                WwwNv.Nn();
              }
            }
            MwV = Mv.nW.wMWVm;
            for (Wv = 0; Wv < MwV; Wv++) {
              mVnWN[Wv].Nn();
            }
            wMWmv.Nn();
          } else if (wMmNM === 1) {
            var nVWnn = Mv.nW.Nwn;
            for (var MMn = 0; MMn < 4; MMn++) {
              if (nVWnn[MMn][0] !== 0) {
                Nwn[MMn].Nn();
              }
            }
          } else if (wmWNV === 1) {
            if (Mv.nW.nvW === -1) {
              vVMvv.Nn();
              var mM = 0;
              for (var Wv = 0; Wv < MWmNw[VM[126]]; Wv++) {
                if (Mv.MWW[Wv].wmmnM !== 0) {
                  MWmNw[mM].Nn();
                  mM++;
                }
              }
            } else if (Mv.nW.vwwmn === 1) {
              mMwWn.Nn();
              WmWnW.Nn();
              MNmwW.Nn();
              var mM = 0;
              var nvW = Mv.MWW[Mv.nW.nvW];
              for (var Wv = 0; Wv < Mv.wwW[VM[126]]; Wv++) {
                if (Wv === Mv.nW[VM[5]]) {
                  mM++;
                  continue;
                }
                var nW = Mv.wwW[Wv];
                if (nW.nvW === nvW[VM[5]] && nW.VVM === nvW.MWV) {
                  VMVNW[mM].Nn();
                  mM++;
                }
              }
            } else {
              mwMMw.Nn();
            }
          }
        }
        var mv = Mv.nW.vwv;
        var MwV = mv[VM[126]];
        wmV = -1;
        if (MwV > 10) {
          mwW.Nn();
        }
        for (var Wv = 0; Wv < MwV; Wv++) {
          if (Wv > 9 && mwW[VM[64]] === 0) {
            break;
          }
          if (mv[Wv][0] !== 0) {
            if (vwv[Wv].Nn() === 1) {
              wmV = Wv;
            }
          }
        }
      }
      ;
      ;
      function Wnm(vN) {
        wwm.nnvWm(vN);
        if (wmWNV === 1 && Mv.nW.nvW === -1) {
          if (vN[VM[238]] === 8 && VNw.nwM[VM[126]] > 0) {
            VNw.nwM = VNw.nwM[VM[215]](0, VNw.nwM[VM[126]] - 1);
            vN[VM[40]]();
            return;
          } else if (vN[VM[238]] >= 65 && vN[VM[238]] <= 90 || vN[VM[238]] >= 48 && vN[VM[238]] <= 57) {
            if (VNw.nwM[VM[126]] < 5) {
              VNw.nwM += String[VM[200]](vN[VM[238]]);
            }
          }
        } else if (vvvMv === 1 && vN[VM[238]] === 27) {
          vvvMv = 0;
          VWnmM[VM[49]] = "none";
        } else if (vN[VM[238]] === 13) {
          if (vvvMv === 1) {
            if (mWvNN[VM[96]][VM[126]] > 0) {
              if (Mv.nW.NNnMv === 1 && mWvNN[VM[96]][0] === "!") {
                if (mWvNN[VM[96]] === "!pos") {
                  Mv.wwW[Mv.nW[VM[5]]][VM[39]][VM[154]](Math[VM[61]](Mv.nW[VM[232]] / 100) + ":" + Math[VM[61]](Mv.nW[VM[249]] / 100));
                } else {
                  var VvmwV = mWvNN[VM[96]][VM[166]]("!");
                  for (var Wv = 1; Wv < VvmwV[VM[126]]; Wv++) {
                    var nnNwN = "!" + VvmwV[Wv];
                    if (nnNwN[VM[44]]("public") === -1) {
                      nnNwN = nnNwN[VM[166]](" ")[VM[116]]("");
                    }
                    NVm.nNvNn(nnNwN);
                    if (Wv <= 20) {
                      Mv.wwW[Mv.nW[VM[5]]][VM[39]][VM[154]](nnNwN);
                    }
                  }
                }
              } else {
                var mVw = NVm.nNvNn(mWvNN[VM[96]]);
                if (mVw !== 0) {
                  Mv.wwW[Mv.nW[VM[5]]][VM[39]][VM[154]]("I am muted during " + Math[VM[61]](mVw / 1000) + " seconds");
                } else {
                  Mv.wwW[Mv.nW[VM[5]]][VM[39]][VM[154]](mWvNN[VM[96]]);
                }
              }
            }
            vvvMv = 0;
            mWvNN[VM[96]] = "";
            VWnmM[VM[49]] = "none";
          } else {
            vvvMv = 1;
            VWnmM[VM[49]] = "inline-block";
            mWvNN[VM[87]]();
          }
        } else if (vvvMv === 0) {
          if (vN[VM[238]] === 77) {
            if (WMm === 0) {
              NnN();
              wMN = 1;
              WMm = 1;
              wN.Vww(wN.mn[VM[64]], 1, 0);
            } else {
              NnN();
              wN.Vww(wN.mn[VM[64]], 1, 0);
            }
          } else if (vN[VM[238]] === 69 || vN[VM[238]] === 32) {
            switch (Mv.nW.vVM) {
              case 0:
                NVm.VnM(JSON[VM[18]]([12, Mv.nW.vnmvm]));
                break;
              case 2:
                NVm.VnM(JSON[VM[18]]([Mv.nW.MMw, Mv.nW.NnvWW, Mv.nW.wnnvW]));
                break;
            }
          } else if (vN[VM[238]] === 70) {
            if (Mv.nW.WmwVW === 1) {
              NVm.VnM(JSON[VM[18]]([12, Mv.nW.vnmvm]));
            }
          } else if (vN[VM[238]] === 82) {
            if (Mv.nW.nvN === 1) {
              Mv.nW.NMvmW = (Mv.nW.NMvmW + 1) % 4;
            } else {
              NVm.VnM(JSON[VM[18]]([13]));
            }
          } else if (vN[VM[238]] >= 49 && vN[VM[238]] <= 57) {
            if (Mv.nW.vMV.nMw !== 1) {
              var Wv = vN[VM[238]] - 49;
              var mv = Mv.nW.vwv;
              if (Wv < mv[VM[126]]) {
                var mV = mv[Wv][0];
                var WM = mv[Wv][1];
                var VwW = mv[Wv][2];
                var MVvnW = mv[Wv][3];
                if (vN[VM[122]]) {
                  NVm.VnM(JSON[VM[18]]([9, mV, WM, VwW, MVvnW]));
                  wN.Vww(wN.mn.mvnwm, 1, 0);
                } else if (vN[VM[22]]) {
                  wN.Vww(wN.mn.vMV, 0.6, 0);
                  NVm.VnM(JSON[VM[18]]([11, mV, WM, VwW]));
                } else {
                  NVm.VnM(JSON[VM[18]]([8, mV, WM, VwW, MVvnW]));
                }
              }
            }
          } else if (vN[VM[238]] === 67 && Mv.nW.NNn === 0) {
            if (nVv === 0) {
              NnN();
              wMN = 1;
              nVv = 1;
              Mv.mwV(Mn.MWm);
              wN.Vww(wN.mn[VM[64]], 1, 0);
            } else {
              wN.Vww(wN.mn[VM[64]], 1, 0);
              NnN();
            }
          } else if (vN[VM[238]] === 27 && wMN === 1) {
            wN.Vww(wN.mn[VM[64]], 1, 0);
            NnN();
          }
        }
      }
      ;
      ;
      function mWv(vN) {
        wwm.VvNVW(vN);
        if (vN[VM[238]] === 37 || vN[VM[238]] === 38 || vN[VM[238]] === 39 || vN[VM[238]] === 40) {
          vN[VM[40]]();
          return false;
        }
      }
      ;
      ;
      function vwn(vN) {
        var mNV = 0;
        for (var NWn = 0; NWn < vN[VM[114]][VM[126]]; NWn++) {
          mvv.NWW(VNM, vN, vN[VM[114]][NWn]);
          if (mwW[VM[64]] !== 0) {
            var MWnMv = mvv[VM[102]];
            mvv.VNv(VNM, mvv.nvmmV);
            mvv[VM[102]] = MWnMv;
            var mv = Mv.nW.vwv;
            var NMVnW = 0;
            for (var Wv = 10; Wv < mv[VM[126]]; Wv++) {
              if (mv[Wv][0] !== 0) {
                if (vwv[Wv].Nn() === 1) {
                  NMVnW = 1;
                  break;
                }
              }
            }
            if (NMVnW === 1) {
              Nmw(VNM);
              continue;
            }
          }
          if (Mv.nW.vMV.nMw === 0 && wMN === 0) {
            var mmV = Math[VM[61]](VNM[VM[89]] * MW[VM[29]].wNN);
            var vMm = Math[VM[61]](VNM[VM[180]] * MW[VM[29]].mvnVW);
            switch (Mv.nW.vVM) {
              case 2:
                if (Mv.nW.WmwVW === 1 && mmV > VNw.mwMmN && vMm > VNw.wVNWv && mmV < VNw.mwMmN + VNw.wnvnV && vMm < VNw.wVNWv + VNw.NwNmV) {
                  vNwVM = 1;
                  nNM[VM[238]] = 70;
                  nNM[VM[198]] = 70;
                  Wnm(nNM);
                  continue;
                }
              case 0:
                if (mmV > VNw.VVwwN && vMm > VNw.nWvWv && mmV < VNw.VVwwN + VNw.wnvnV && vMm < VNw.nWvWv + VNw.NwNmV) {
                  vNwVM = 1;
                  nNM[VM[238]] = 69;
                  nNM[VM[198]] = 69;
                  Wnm(nNM);
                  continue;
                }
                break;
            }
            if (vMm < Vnv - vW * 70) {
              var MWv = MmMwM * 1.5;
              var nmm = MmMwM / 4;
              if (mmV < mVV) {
                var NWm = vW * 30;
                mwvVw = vVV[VM[246]](mVV - MWv, nnW + nmm, mmV, vMm);
                nnWVw = Math[VM[241]](vVV.nMW(mmV, vMm, mVV - MWv, nnW + nmm), 25);
                if (mmV < mVV - MWv - NWm) {
                  Vvv |= 1;
                  nNM[VM[198]] = 37;
                  nNM[VM[238]] = 37;
                  mWv(nNM);
                } else if (mmV > mVV - MWv + NWm) {
                  Vvv |= 2;
                  nNM[VM[198]] = 39;
                  nNM[VM[238]] = 39;
                  mWv(nNM);
                }
                if (vMm < nnW + nmm - NWm) {
                  Vvv |= 4;
                  nNM[VM[198]] = 38;
                  nNM[VM[238]] = 38;
                  mWv(nNM);
                } else if (vMm > nnW + nmm + NWm) {
                  Vvv |= 8;
                  nNM[VM[198]] = 40;
                  nNM[VM[238]] = 40;
                  mWv(nNM);
                }
              } else if (mmV < MVM - vW * 40 || vMm > vW * 40) {
                mNV = 1;
                VNM[VM[89]] -= MWv / MW[VM[29]].wNN;
                VNM[VM[180]] -= nmm / MW[VM[29]].wNN;
                if (Mv.nW.nvN === 1) {
                  var MmvWV = Date[VM[105]]();
                  if (MmvWV - mNmNV < 1000) {
                    NnvNw = 1;
                    mNMNv = VNM[VM[89]];
                    WNWwv = VNM[VM[180]];
                    Nmw(VNM);
                  }
                  mNmNV = MmvWV;
                } else {
                  NnvNw = 1;
                  mNMNv = VNM[VM[89]];
                  WNWwv = VNM[VM[180]];
                  Nmw(VNM);
                }
              }
              continue;
            }
          }
          if (mNV === 0 && Vvv === 0) {
            Nmw(VNM);
            mNV = 1;
          }
        }
      }
      ;
      ;
      function nmM(vN) {
        var mmV = Math[VM[61]](vN[VM[97]][0][VM[89]] * MW[VM[29]].wNN);
        var vMm = Math[VM[61]](vN[VM[97]][0][VM[180]] * MW[VM[29]].mvnVW);
        if (vNwVM === 1) {
          vNwVM = 0;
        } else if (wMN === 1) {
          nmw(VNM);
        } else if (NnvNw === 1 && mmV >= mVV) {
          NnvNw = 0;
          VNM[VM[89]] = mNMNv;
          VNM[VM[180]] = WNWwv;
          nmw(VNM);
          return;
        } else if (Mv.nW.vMV.nMw === 0 && mmV < mVV && vMm < Vnv - vW * 70) {
          if (mmV < vW * 240 && vMm < vW * 160) {
            nmw(VNM);
          }
        } else {
          nmw(VNM);
        }
        if (Vvv !== 0) {
          if (Vvv & 1) {
            nNM[VM[198]] = 37;
            Wnm(nNM);
          }
          if (Vvv & 2) {
            nNM[VM[198]] = 39;
            Wnm(nNM);
          }
          if (Vvv & 4) {
            nNM[VM[198]] = 38;
            Wnm(nNM);
          }
          if (Vvv & 8) {
            nNM[VM[198]] = 40;
            Wnm(nNM);
          }
          Vvv = 0;
        }
      }
      ;
      ;
      function mNm(vN) {}
      ;
      ;
      function VvM(vN) {
        var mNV = 0;
        var mmmvm = 0;
        for (var NWn = 0; NWn < vN[VM[114]][VM[126]]; NWn++) {
          mvv.NWW(VNM, vN, vN[VM[114]][NWn]);
          if (mwW[VM[64]] !== 0) {
            var mv = Mv.nW.vwv;
            var NMVnW = 0;
            for (var Wv = 10; Wv < mv[VM[126]]; Wv++) {
              if (mv[Wv][0] !== 0) {
                if (vwv[Wv].Nn() === 1) {
                  NMVnW = 1;
                  break;
                }
              }
            }
            if (NMVnW === 1) {
              mVm(VNM);
              continue;
            }
          }
          if (Mv.nW.vMV.nMw === 0 && wMN === 0) {
            var mmV = Math[VM[61]](VNM[VM[89]] * MW[VM[29]].wNN);
            var vMm = Math[VM[61]](VNM[VM[180]] * MW[VM[29]].mvnVW);
            if (vMm < Vnv - vW * 70) {
              var MWv = MmMwM * 1.5;
              var nmm = MmMwM / 4;
              if (mmV < mVV) {
                mmmvm = 1;
                var wmN = 0;
                var NWm = vW * 30;
                mwvVw = vVV[VM[246]](mVV - MWv, nnW + nmm, mmV, vMm);
                nnWVw = Math[VM[241]](vVV.nMW(mmV, vMm, mVV - MWv, nnW + nmm), 25);
                if (mmV < mVV - MWv - NWm) {
                  wmN |= 1;
                } else if (mmV > mVV - MWv + NWm) {
                  wmN |= 2;
                }
                if (vMm < nnW + nmm + -NWm) {
                  wmN |= 4;
                } else if (vMm > nnW + nmm + NWm) {
                  wmN |= 8;
                }
                if ((wmN & 1) === 1 && (Vvv & 1) !== 1) {
                  nNM[VM[198]] = 37;
                  mWv(nNM);
                } else if ((wmN & 1) !== 1 && (Vvv & 1) === 1) {
                  nNM[VM[198]] = 37;
                  Wnm(nNM);
                }
                if ((wmN & 2) === 2 && (Vvv & 2) !== 2) {
                  nNM[VM[198]] = 39;
                  mWv(nNM);
                } else if ((wmN & 2) !== 2 && (Vvv & 2) === 2) {
                  nNM[VM[198]] = 39;
                  Wnm(nNM);
                }
                if ((wmN & 4) === 4 && (Vvv & 4) !== 4) {
                  nNM[VM[198]] = 38;
                  mWv(nNM);
                } else if ((wmN & 4) !== 4 && (Vvv & 4) === 4) {
                  nNM[VM[198]] = 38;
                  Wnm(nNM);
                }
                if ((wmN & 8) === 8 && (Vvv & 8) !== 8) {
                  nNM[VM[198]] = 40;
                  mWv(nNM);
                } else if ((wmN & 8) !== 8 && (Vvv & 8) === 8) {
                  nNM[VM[198]] = 40;
                  Wnm(nNM);
                }
                Vvv = wmN;
                continue;
              } else if (mmV < MVM - vW * 40 || vMm > vW * 40) {
                mNV = 1;
                VNM[VM[89]] -= MWv / MW[VM[29]].wNN;
                VNM[VM[180]] -= nmm / MW[VM[29]].wNN;
                mNMNv = VNM[VM[89]];
                WNWwv = VNM[VM[180]];
                mVm(VNM);
              }
            }
          }
          if (mNV === 0 && Vvv === 0) {
            mVm(VNM);
            mNV = 1;
          }
        }
        if (mmmvm === 0 && Vvv !== 0) {
          if (Vvv & 1) {
            nNM[VM[198]] = 37;
            Wnm(nNM);
          }
          if (Vvv & 2) {
            nNM[VM[198]] = 39;
            Wnm(nNM);
          }
          if (Vvv & 4) {
            nNM[VM[198]] = 38;
            Wnm(nNM);
          }
          if (Vvv & 8) {
            nNM[VM[198]] = 40;
            Wnm(nNM);
          }
          Vvv = 0;
        }
      }
      ;
      ;
      function MMvmM() {
        if (Mwv === 0) {
          Wm[VM[121]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mousemove", mVm, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("keyup", Wnm, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("keydown", mWv, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      function nnmNm() {
        if (Mwv === 0) {
          Wm[VM[183]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mousemove", mVm, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("keyup", Wnm, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("keydown", mWv, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      return {
        wWn: wWn,
        nvM: nvM,
        nMn: nMn,
        update: vwN,
        Mw: Mw
      };
    }();
    var nWwnv = function () {
      function wnw(WwN) {}
      ;
      ;
      function vwWVw() {
        wWn(VNw);
      }
      ;
      ;
      function MNn() {
        vwWVw();
      }
      ;
      ;
      var MVv = 0;
      var mwWnv = {
        src: "img/adblocker-msg.png",
        m: {
          n: 0
        }
      };
      var MnVvW = 0;
      var WmMNM = -1;
      var mMMVn = null;
      var VVMNn = {
        m: null
      };
      var MmWVM = null;
      var mvwmn = {
        m: null
      };
      var NMMnw = -1;
      var wmwnV = {
        m: null
      };
      var vnW = null;
      var mvwvv = -1;
      var NvMNm = null;
      var VwNVV = {
        m: null
      };
      function nWMVn() {
        var nN = MMm.mm[VM[232]];
        var wn = MMm.mm[VM[249]];
        var mnV = nN / vW;
        var NwV = wn / vW;
        if (vnW === null || NMMnw !== Mv.nW.vV) {
          NMMnw = Mv.nW.vV;
          vnW = NM.mMm(NMMnw + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          wmwnV.m = vnW;
          wmwnV.m.n = 1;
        }
        MW.NN(wmwnV, mnV + 280, NwV + 117, 0, 0, 0, 1);
        if (mMMVn === null || WmMNM !== Mv.nW[VM[112]]) {
          WmMNM = Mv.nW[VM[112]];
          mMMVn = NM.mMm(WmMNM + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          MmWVM = NM.mMm(Math[VM[61]](WmMNM / 2), "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          VVMNn.m = mMMVn;
          VVMNn.m.n = 1;
          mvwmn.m = MmWVM;
          mvwmn.m.n = 1;
        }
        MW.NN(VVMNn, mnV + 108, NwV + 117, 0, 0, 0, 1);
        MW.NN(mvwmn, mnV + 288, NwV + 147, 0, 0, 0, 1);
        if (NvMNm === null || mvwvv !== Mv.nW.nMWNV) {
          mvwvv = Mv.nW.nMWNV;
          NvMNm = NM.mMm(mvwvv + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          VwNVV.m = NvMNm;
          VwNVV.m.n = 1;
        }
        MW.NN(VwNVV, mnV + 453, NwV + 117, 0, 0, 0, 1);
        var vwv = VNw.vwv;
        var mv = Mv.nW.vwv;
        var MwV = mv[VM[126]];
        var NWm = vW * 50;
        var vNV = wn + vW * 182;
        var Vnm = nN + vW * 80;
        var VvnWm = vW;
        vW = vW - vW * 0.3;
        for (var Wv = 0; Wv < MwV; Wv++) {
          var Nv = vwv[Wv];
          if (mv[Wv][0] !== 0) {
            Vw.Wvwnv(Nv, mv[Wv], Vnm, vNV, VNw.NMn, VNw.MMN);
          }
          Vnm += NWm;
        }
        vW = VvnWm;
        if (vNm.nmNnv === 1) {
          var NV = wMM.vNv.wvN(MnVvW > 500 ? (1000 - MnVvW) / 500 : MnVvW / 500);
          WV[VM[149]] = 0.7;
          MW.NN(mwWnv, mnV + 288, NwV + 193, 0, 0, 0, 1 + NV * 0.04);
          WV[VM[149]] = 1;
          MnVvW = (MnVvW + nv) % 1000;
        }
      }
      ;
      ;
      var WWv = 0;
      var MMm;
      var WNW;
      var mwN;
      function nvM() {
        MMm = NM.MwW(541, 324, "img/scoreboardnew.png");
        WNW = NM.vnn(123, 35, ["img/play-again-button-out.png", "img/play-again-button-in.png", "img/play-again-button-click.png"]);
        mwN = NM.vnn(198, 35, ["img/back-main-page-button-out.png", "img/back-main-page-button-in.png", "img/back-main-page-button-click.png"]);
      }
      ;
      ;
      var VMV;
      var VNM = new mvv.wvvmw();
      var nNM = new wwm.wvNvn();
      var MVn = 500;
      var vvN = 0;
      function vnVmN(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.vvW, 0.05);
      }
      var NvN = 500;
      var nvn = 0;
      function mMvVW(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.VWN, 0.05);
      }
      var WmW = 0;
      var mMv = 0;
      var MvM = undefined;
      function nMn() {
        NVm.wnw = wnw;
        NVm.MNn = MNn;
        Mv.nW.nvN = 0;
        Mv.nW[VM[5]] = 0;
        Vw.VmMNm(0);
        Vw.nMvvv();
        for (var Wv = 0; Wv < Mv.nW.vwv[VM[126]]; Wv++) {
          for (var mM = 0; mM < 4; mM++) {
            Mv.nW.vwv[Wv][mM] = 0;
          }
        }
        var mVvvV = mMV[Math[VM[241]](mMV[VM[126]] - 1, Mv.nW[VM[112]])];
        for (var Wv = 0; Wv < mVvvV[VM[126]]; Wv++) {
          var mV = mVvvV[Wv];
          if (mV[VM[5]] !== 0) {
            VNw.vwv[Wv].mvM(wWw[mV[VM[5]]].nm[VM[58]], wWw[mV[VM[5]]].nm.m);
          }
          var mv = Mv.nW.vwv[Wv];
          mv[1] = mV.WM;
          mv[2] = 0;
          mv[3] = mV.WW;
          mv[0] = mV[VM[5]];
        }
        WWv = 5000;
        if (mnm.Wwm("admin") === null) {
          try {
            Wm.Widget.adsRefresh();
          } catch (VWn) {}
          ;
        }
        MW.NMmNm(nWwnv);
        mMv = NvN;
        WmW = NvN;
        MvM = mMvVW;
        nvn = 1;
        vwN();
      }
      ;
      ;
      function wWn(wwM) {
        vNm.MMWwV[VM[49]] = "none";
        VMV = wwM;
        nnmNm();
        mMv = MVn;
        WmW = MVn;
        MvM = vnVmN;
        vvN = 1;
      }
      ;
      ;
      function vwN() {
        var Nvm = 0;
        var vWn = 0;
        if (mMv > 0) {
          vWn = Vnv;
          var mwn = MvM(1 - mMv / WmW);
          if (mwn === 1) {
            mMv = 0;
          }
          if (nvn === 1) {
            mwn = 1 - Math[VM[0]](mwn);
          }
          Nvm *= mwn;
          vWn *= mwn;
        }
        MMm.mm[VM[232]] = mVV - Math[VM[61]](vW * 270) - Nvm;
        MMm.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 162) + Math[VM[61]](vW * -135)) - vWn;
        WNW.mm[VM[232]] = mVV - Math[VM[61]](vW * 61) + Math[VM[61]](vW * -100) - Nvm;
        WNW.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 17) + Math[VM[61]](vW * -35)) - vWn;
        mwN.mm[VM[232]] = mVV - Math[VM[61]](vW * 99) + Math[VM[61]](vW * 100) - Nvm;
        mwN.mm[VM[249]] = WNW.mm[VM[249]];
        var mnwmm = Math[VM[241]](vW, 1);
        document[VM[57]]("trevda")[VM[219]][VM[63]] = Math[VM[61]](nnW - 125 + mnwmm * 170) + "px";
        document[VM[57]]("trevda")[VM[219]][VM[244]] = "scale(" + mnwmm + ")";
        document[VM[57]]("trevda")[VM[219]][VM[125]] = "0";
        document[VM[57]]("trevda")[VM[219]][VM[77]] = "0";
        document[VM[57]]("trevda")[VM[219]].WWnWV = "auto";
      }
      ;
      ;
      function Mw() {
        if (NmVMN() === 0) {
          return;
        }
        WV[VM[48]](0, 0, MVM, Vnv);
        Vw.VMnnv();
        if (mMv > 0) {
          MVv = MvM(1 - mMv / WmW);
          if (nvn === 1) {
            MVv = 1 - Math[VM[0]](MVv);
          }
          MVv = 1 - MVv;
        }
        WV[VM[149]] = MVv * 0.3;
        WV[VM[210]] = "#000000";
        WV[VM[84]](0, 0, MVM, Vnv);
        WV[VM[149]] = 1;
        MMm.Mw();
        mwN.Mw();
        nWMVn();
        Vw.MVWnM();
        nnN.wVNNv();
        if (WWv > 0) {
          WWv = Math[VM[144]](0, WWv - nv);
          MW.NN(NvvnW[Math[VM[61]](WWv / 1000)], WNW.mm[VM[232]] / vW + 61.5, WNW.mm[VM[249]] / vW + 17.75, 0, 0, 0, 1);
        } else {
          WNW.Mw();
        }
      }
      ;
      ;
      function NmVMN() {
        if (vvN === 1) {
          vwN();
          if (mMv < 0) {
            vvN = 0;
            WNW.wvn(NM.WVN);
            mwN.wvn(NM.WVN);
            VMV.nMn();
            return 0;
          }
          mMv -= nv;
        } else if (nvn === 1) {
          vwN();
          if (mMv < 0) {
            nvn = 0;
            if (Mv.nW.NNnMv !== 1) {
              vNm.MMWwV[VM[49]] = "inline-block";
            }
            document[VM[57]]("bod")[VM[219]][VM[251]] = "#46664d";
            MMvmM();
          }
          mMv -= nv;
        }
        return 1;
      }
      ;
      ;
      function Nmw(vN) {
        mvv.VNv(vN, mvv.nvmmV);
        var WN = 0;
        if (WNW.Nn() === 1) {
          WN = 1;
        }
        if (mwN.Nn() === 1) {
          WN = 1;
        }
      }
      ;
      ;
      function nmw(vN) {
        mvv.VNv(vN, mvv.MmVVW);
        var WN = 0;
        if (WNW.Nn() === 1) {
          WN = 1;
          if (WWv <= 0) {
            vNm.wWvnM();
            wN.Vww(wN.mn[VM[223]], 1, 0);
          }
          return;
        }
        if (mwN.Nn() === 1) {
          WN = 1;
          if ((NVm[VM[102]] & NVm.nNN.VnvmV) === 0 && (NVm[VM[102]] & NVm.nNN.NvWwM) === 0) {
            wWn(vNm);
            wN.Vww(wN.mn[VM[59]], 1, 0);
            return;
          }
        }
      }
      ;
      ;
      function mVm(vN) {
        mvv.VNv(vN, mvv.MvNnv);
        var WN = 0;
        if (WNW.Nn() === 1) {
          WN = 1;
        }
        if (mwN.Nn() === 1) {
          WN = 1;
        }
      }
      ;
      ;
      function vwn(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          Nmw(VNM);
        }
      }
      ;
      ;
      function nmM(vN) {
        nmw(VNM);
      }
      ;
      ;
      function mNm(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          nmw(VNM);
        }
      }
      ;
      ;
      function VvM(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          mVm(VNM);
        }
      }
      ;
      ;
      function MMvmM() {
        if (Mwv === 0) {
          Wm[VM[121]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mousemove", mVm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      function nnmNm() {
        if (Mwv === 0) {
          Wm[VM[183]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mousemove", mVm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      return {
        wWn: wWn,
        nvM: nvM,
        nMn: nMn,
        update: vwN,
        Mw: Mw
      };
    }();
    var wnNWw = function () {
      function wnw(WwN) {}
      ;
      ;
      function vwWVw() {
        wWn(VNw);
      }
      ;
      ;
      function MNn() {
        vwWVw();
      }
      ;
      ;
      var MVv = 0;
      var mVWwW = -1;
      var nVMwN = null;
      var MNNmN = {
        m: null
      };
      var mmnMv = -1;
      var vnnVM = {
        m: null
      };
      var wNnWv = null;
      var mvwvv = -1;
      var NvMNm = null;
      var VwNVV = {
        m: null
      };
      function nWMVn() {
        var nN = MMm.mm[VM[232]];
        var wn = MMm.mm[VM[249]];
        var mnV = nN / vW;
        var NwV = wn / vW;
        if (wNnWv === null || mmnMv !== Mv.MNm) {
          mmnMv = Mv.MNm;
          wNnWv = NM.mMm("#" + Math[VM[144]](mmnMv, 1), "'Viga', sans-serif", "#FFFFFF", 60, 140, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          vnnVM.m = wNnWv;
          vnnVM.m.n = 1;
        }
        MW.NN(vnnVM, mnV + 207, NwV + 93, 0, 0, 0, 1);
        if (nVMwN === null || mVWwW !== Mv.nW.wnwMm) {
          mVWwW = Mv.nW.wnwMm;
          var wvVnv = Math[VM[61]]((Date[VM[105]]() - Mv.nW.wnwMm) / 1000);
          var NVmwV = Math[VM[61]](wvVnv / 60);
          var mVmWm = wvVnv % 60;
          nVMwN = NM.mMm((NVmwV < 10 ? "0" : "") + NVmwV + ":" + (mVmWm < 10 ? "0" : "") + mVmWm, "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          MNNmN.m = nVMwN;
          MNNmN.m.n = 1;
        }
        MW.NN(MNNmN, mnV + 110, NwV + 100, 0, 0, 0, 1);
        if (NvMNm === null || mvwvv !== Mv.nW.nMWNV) {
          mvwvv = Mv.nW.nMWNV;
          NvMNm = NM.mMm(mvwvv + "", "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          VwNVV.m = NvMNm;
          VwNVV.m.n = 1;
        }
        MW.NN(VwNVV, mnV + 309, NwV + 100, 0, 0, 0, 1);
      }
      ;
      ;
      var WWv = 0;
      var MMm;
      var WNW;
      var mwN;
      function nvM() {
        MMm = NM.MwW(414, 207, "img/scoreboard-br.png");
        WNW = NM.vnn(123, 35, ["img/play-again-button-out.png", "img/play-again-button-in.png", "img/play-again-button-click.png"]);
        mwN = NM.vnn(198, 35, ["img/back-main-page-button-out.png", "img/back-main-page-button-in.png", "img/back-main-page-button-click.png"]);
      }
      ;
      ;
      var VMV;
      var VNM = new mvv.wvvmw();
      var nNM = new wwm.wvNvn();
      var MVn = 500;
      var vvN = 0;
      function vnVmN(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.vvW, 0.05);
      }
      var NvN = 500;
      var nvn = 0;
      function mMvVW(NWM) {
        return wMM.vNv.VWvvw(NWM, wMM.vNv.VWN, 0.05);
      }
      var WmW = 0;
      var mMv = 0;
      var MvM = undefined;
      function nMn() {
        NVm.wnw = wnw;
        NVm.MNn = MNn;
        Mv.nW.nvN = 0;
        Mv.nW[VM[5]] = 0;
        Vw.VmMNm(0);
        Vw.nMvvv();
        WWv = 5000;
        try {
          Wm.Widget.adsRefresh();
        } catch (VWn) {}
        ;
        MW.NMmNm(wnNWw);
        mMv = NvN;
        WmW = NvN;
        MvM = mMvVW;
        nvn = 1;
        vwN();
      }
      ;
      ;
      function wWn(wwM) {
        vNm.MMWwV[VM[49]] = "none";
        VMV = wwM;
        nnmNm();
        mMv = MVn;
        WmW = MVn;
        MvM = vnVmN;
        vvN = 1;
      }
      ;
      ;
      function vwN() {
        var Nvm = 0;
        var vWn = 0;
        if (mMv > 0) {
          vWn = Vnv;
          var mwn = MvM(1 - mMv / WmW);
          if (mwn === 1) {
            mMv = 0;
          }
          if (nvn === 1) {
            mwn = 1 - Math[VM[0]](mwn);
          }
          Nvm *= mwn;
          vWn *= mwn;
        }
        MMm.mm[VM[232]] = mVV - Math[VM[61]](vW * 207) - Nvm;
        MMm.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 103) + Math[VM[61]](vW * -135)) - vWn;
        WNW.mm[VM[232]] = mVV - Math[VM[61]](vW * 61) + Math[VM[61]](vW * -100) - Nvm;
        WNW.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 17) + Math[VM[61]](vW * -70)) - vWn;
        mwN.mm[VM[232]] = mVV - Math[VM[61]](vW * 99) + Math[VM[61]](vW * 70) - Nvm;
        mwN.mm[VM[249]] = WNW.mm[VM[249]];
        var mnwmm = vW;
        document[VM[57]]("trevda")[VM[219]][VM[63]] = Math[VM[61]](nnW - 125 + mnwmm * 130) + "px";
        document[VM[57]]("trevda")[VM[219]][VM[244]] = "scale(" + mnwmm + ")";
      }
      ;
      ;
      function Mw() {
        if (NmVMN() === 0) {
          return;
        }
        WV[VM[48]](0, 0, MVM, Vnv);
        Vw.VMnnv();
        if (mMv > 0) {
          MVv = MvM(1 - mMv / WmW);
          if (nvn === 1) {
            MVv = 1 - Math[VM[0]](MVv);
          }
          MVv = 1 - MVv;
        }
        WV[VM[149]] = MVv * 0.3;
        WV[VM[210]] = "#000000";
        WV[VM[84]](0, 0, MVM, Vnv);
        WV[VM[149]] = 1;
        MMm.Mw();
        mwN.Mw();
        nWMVn();
        Vw.MVWnM();
        nnN.wVNNv();
        if (WWv > 0) {
          WWv = Math[VM[144]](0, WWv - nv);
          MW.NN(NvvnW[Math[VM[61]](WWv / 1000)], WNW.mm[VM[232]] / vW + 61.5, WNW.mm[VM[249]] / vW + 17.75, 0, 0, 0, 1);
        } else {
          WNW.Mw();
        }
      }
      ;
      ;
      function NmVMN() {
        if (vvN === 1) {
          vwN();
          if (mMv < 0) {
            vvN = 0;
            WNW.wvn(NM.WVN);
            mwN.wvn(NM.WVN);
            VMV.nMn();
            return 0;
          }
          mMv -= nv;
        } else if (nvn === 1) {
          vwN();
          if (mMv < 0) {
            nvn = 0;
            vNm.MMWwV[VM[49]] = "inline-block";
            document[VM[57]]("bod")[VM[219]][VM[251]] = "#46664d";
            MMvmM();
          }
          mMv -= nv;
        }
        return 1;
      }
      ;
      ;
      function Nmw(vN) {
        mvv.VNv(vN, mvv.nvmmV);
        var WN = 0;
        if (WNW.Nn() === 1) {
          WN = 1;
        }
        if (mwN.Nn() === 1) {
          WN = 1;
        }
      }
      ;
      ;
      function nmw(vN) {
        mvv.VNv(vN, mvv.MmVVW);
        var WN = 0;
        if (WNW.Nn() === 1) {
          WN = 1;
          if (WWv <= 0) {
            vNm.wWvnM();
            wN.Vww(wN.mn[VM[223]], 1, 0);
          }
          return;
        }
        if (mwN.Nn() === 1) {
          WN = 1;
          if ((NVm[VM[102]] & NVm.nNN.VnvmV) === 0 && (NVm[VM[102]] & NVm.nNN.NvWwM) === 0) {
            wWn(vNm);
            wN.Vww(wN.mn[VM[59]], 1, 0);
            return;
          }
        }
      }
      ;
      ;
      function mVm(vN) {
        mvv.VNv(vN, mvv.MvNnv);
        var WN = 0;
        if (WNW.Nn() === 1) {
          WN = 1;
        }
        if (mwN.Nn() === 1) {
          WN = 1;
        }
      }
      ;
      ;
      function vwn(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          Nmw(VNM);
        }
      }
      ;
      ;
      function nmM(vN) {
        nmw(VNM);
      }
      ;
      ;
      function mNm(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          nmw(VNM);
        }
      }
      ;
      ;
      function VvM(vN) {
        if (vN[VM[114]][VM[126]] > 0) {
          mvv.NWW(VNM, vN, vN[VM[114]][0]);
          mVm(VNM);
        }
      }
      ;
      ;
      function MMvmM() {
        if (Mwv === 0) {
          Wm[VM[121]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mousemove", mVm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      function nnmNm() {
        if (Mwv === 0) {
          Wm[VM[183]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mousemove", mVm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      return {
        wWn: wWn,
        nvM: nvM,
        nMn: nMn,
        update: vwN,
        Mw: Mw
      };
    }();
    var vWnWM = function () {
      var wMN = 0;
      var WMm = 0;
      var NWv = 0;
      var NWvWw = 0;
      var nwnvv = MW.Mvw("img/inv-empty.png");
      var vNvWV = [nwnvv, nwnvv, nwnvv];
      var vWN = [];
      var mnv = 0;
      function NwWNM() {
        vmW[VM[167]]();
        Nvvww[VM[167]]();
        Mv.nW[VM[5]] = 1;
        Mv.mMVnn = 2;
        Mv.vNn = 0;
        Mv.nW.mNv = 0;
        Mv.nW.WnW[Wv] = 0;
        Mv.nW.nvN = 1;
        Mv.nW.nWv = 0;
        Mv.nW.vNNVM = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1]];
        Mv.wnN.wNn[VM[96]] = Mv.wnN.wNn.WWV;
        Mv.wnN.wNn.nMM = -1;
        Mv.VwWnV([0, document[VM[57]]("nicknameInput")[VM[96]]]);
        Mv.Mwvmm(0, 0);
        Vw[VM[158]](undefined, 0, 0.07);
        Vw[VM[236]] = 0;
        nNV.VvMmw();
        Mv.nW.NMvmW = 0;
        Mv.nW.Nnw = 0;
        MnN = 0;
        WWMMn(1, wWm, 550, 550, 5376, 0);
      }
      ;
      ;
      function MMwnv(nvMmm) {
        NnN();
        wMN = 1;
        if (nvMmm === 1) {
          nVv = 1;
        } else if (nvMmm === 2) {
          wMmNM = 1;
        }
      }
      ;
      ;
      function NnN() {
        wMN = 0;
        WNw.wvn(NM.WVN);
        WMm = 0;
        NWv = 0;
        nVv = 0;
        wMmNM = 0;
        wmWNV = 0;
        Mv.vnVnM();
      }
      ;
      ;
      var mmvNw = 0;
      var WNw = NM.vnn(43, 43, ["img/close-box-out.png", "img/close-box-in.png", "img/close-box-click.png"]);
      var nvVmM = [MW.Mvw("img/high-particules-out.png"), MW.Mvw("img/high-particules-in.png"), MW.Mvw("img/high-particules-click.png")];
      var nwnww = NM.vnn(54, 42, null, nvVmM);
      var vMVvw = [MW.Mvw("img/low-particules-out.png"), MW.Mvw("img/low-particules-in.png"), MW.Mvw("img/low-particules-click.png")];
      var NVMMm = NM.vnn(54, 42, null, vMVvw);
      var VmMvn = [MW.Mvw("img/no-particules-out.png"), MW.Mvw("img/no-particules-in.png"), MW.Mvw("img/no-particules-click.png")];
      var NnnwW = NM.vnn(54, 42, null, VmMvn);
      var wNmWW = [MW.Mvw("img/high-resolution-out.png"), MW.Mvw("img/high-resolution-in.png"), MW.Mvw("img/high-resolution-click.png")];
      var MMMmV = NM.vnn(54, 42, null, wNmWW);
      var NWmNv = [MW.Mvw("img/medium-resolution-out.png"), MW.Mvw("img/medium-resolution-in.png"), MW.Mvw("img/medium-resolution-click.png")];
      var wNnwN = NM.vnn(54, 42, null, NWmNv);
      var mVWnv = [MW.Mvw("img/low-resolution-out.png"), MW.Mvw("img/low-resolution-in.png"), MW.Mvw("img/low-resolution-click.png")];
      var nwMvn = NM.vnn(54, 42, null, mVWnv);
      var NWwmM = [MW.Mvw("img/azerty-button-out.png"), MW.Mvw("img/azerty-button-in.png"), MW.Mvw("img/azerty-button-click.png")];
      var vwVMN = NM.vnn(81, 33, null, NWwmM);
      var Mvmvn = [MW.Mvw("img/qwerty-button-out.png"), MW.Mvw("img/qwerty-button-in.png"), MW.Mvw("img/qwerty-button-click.png")];
      var wMwvN = NM.vnn(87, 33, null, Mvmvn);
      var MnvvM = [MW.Mvw("img/sound-on-out.png"), MW.Mvw("img/sound-on-in.png"), MW.Mvw("img/sound-on-click.png")];
      var mVNMv = [MW.Mvw("img/sound-off-out.png"), MW.Mvw("img/sound-off-in.png"), MW.Mvw("img/sound-off-click.png")];
      var nnNMM = NM.vnn(51, 36, null, MnvvM);
      var wWWMW = NM.vnn(51, 36, null, mVNMv);
      var mvVvn = NM.vnn(51, 36, null, MnvvM);
      var WWNWw = NM.vnn(51, 36, null, mVNMv);
      var Vvv = 0;
      var mwvVw = 0;
      var nnWVw = 0;
      var mNmNV = 0;
      var NnvNw = 0;
      var mNMNv = 0;
      var WNWwv = 0;
      var vNwVM = 0;
      var MnN = 0;
      function WWMMn(nMV, vv, nN, wn, MNM, WwN) {
        var vw = nNV[VM[206]](nMV, MnN, MnN, vv);
        mvvMm(vw, nMV, MnN, MnN, vv, nN, wn, nN, wn, MNM, 0, WwN);
        MnN++;
      }
      ;
      ;
      function MNmmW(WnvnM) {
        NwWNM();
        WnvnM = WnvnM[VM[166]]("!b=");
        WnvnM[VM[12]]();
        for (var Wv = 0; Wv < WnvnM[VM[126]]; Wv++) {
          var Vv = WnvnM[Wv][VM[166]](":");
          if (Vv[VM[126]] > 4) {
            wNNwV(Vv[0], Vv[1], Vv[3], Vv[2], Vv[4]);
          } else {
            wNNwV(Vv[0], 0, Vv[2], Vv[1], Vv[3]);
          }
        }
      }
      ;
      ;
      function wNNwV(VVwVm, nvm, Wv, mM, Wn) {
        VVwVm = Number(VVwVm) >>> 0;
        nvm = Number(nvm) >>> 0;
        Wv = Number(Wv) >>> 0;
        mM = Number(mM) >>> 0;
        Wn = Number(Wn) >>> 0;
        if (Wn > 3 || Wv >= wmW[VM[104]] || mM >= wmW[VM[104]]) {
          return;
        }
        var Vv = wWw[VVwVm];
        if (Vv === undefined || Vv.nvm === undefined || Vv.nvm > 0 && Vv.Vv[VM[126]] <= nvm) {
          return;
        }
        var Wn = Vv.vWV === 1 ? 0 : Wn;
        var nN = Vv.mWN[Wn] + 50 + mM * 100;
        var wn = Vv.wVW[Wn] + 50 + Wv * 100;
        var vv = 0;
        switch (Vv.nvm === 0 ? Vv.VvN : Vv.nvm[nvm].VvN) {
          case 0:
            vv = VwvMV;
            break;
          case 1:
            vv = nvNvV;
            break;
          case 2:
            vv = MmNvm;
            break;
          default:
            vv = VVNmM;
            break;
        }
        nVNVn(1, vv, nN, wn, Wn, 1 + (Vv.nvm === 0 ? 0 : nvm << 5), Vv[VM[5]]);
      }
      ;
      ;
      function nVNVn(nMV, vv, nN, wn, Wn, WwN, nvm) {
        var vw = nNV[VM[206]](nMV, MnN, MnN, vv);
        mvvMm(vw, nMV, MnN, MnN, vv, nN, wn, nN, wn, (nvm << 7) + (Wn << 5), 0, WwN);
        var vwN = nWw[vv][VM[109]];
        if (vwN !== undefined) {
          vwN(vw, nN, wn);
        }
        MnN++;
      }
      ;
      ;
      function VMwWn(vv) {
        var wVM = "";
        var wMm = nNV.wVN[vv];
        var WMv = nNV[VM[216]][vv];
        var NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          var Mm = wMm[WMv.Wmn[Wv]];
          var mV = wWw[Mm.MNM >> 7];
          wVM += "!b=" + mV[VM[5]] + ":";
          if (mV.nvm !== 0) {
            wVM += Mm.nvm + ":";
          }
          wVM += Mm.mM + ":" + Mm.Wv + ":" + (Mm.MNM >> 5 & 3);
        }
        return wVM;
      }
      ;
      ;
      function wVVMv(vv, nN, wn) {
        var wMm = nNV.wVN[vv];
        var WMv = nNV[VM[216]][vv];
        var NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          var Vv = wMm[WMv.Wmn[Wv]];
          if (Vv[VM[232]] >= nN && Vv[VM[232]] <= nN + 100 && Vv[VM[249]] >= wn && Vv[VM[249]] <= wn + 100) {
            nNV[VM[16]](Vv.nMV, Vv[VM[5]], Vv.MWV, vv, Vv.MNM);
            return;
          }
        }
      }
      ;
      ;
      function VvNNw() {
        if (mvv[VM[102]] === mvv.nvmmV && Mv.nW[VM[181]] === 0) {
          if (Mv.nW.nvN === 1) {
            Mv.nW[VM[181]] = -1;
            if (Mv.nW.vNNVn === 1) {
              if (Mv.nW.Vmn !== -1 && Mv.nW.VnW !== -1 && Mv.nW.Vmn !== wmW[VM[255]] && Mv.nW.VnW !== wmW[VM[104]]) {
                wNNwV(Mv.nW.Nnw, Mv.nW.mVVnW, Mv.nW.VnW, Mv.nW.Vmn, Mv.nW.NMvmW);
              }
            } else {
              var nN = Mv.nW.Vmn * 100;
              var wn = Mv.nW.VnW * 100;
              wVVMv(VwvMV, nN, wn);
              wVVMv(nvNvV, nN, wn);
              wVVMv(MmNvm, nN, wn);
              wVVMv(VVNmM, nN, wn);
            }
          }
        } else if (mvv[VM[102]] === mvv.MmVVW) {
          if (Mv.nW.nvN === 1) {
            mmvNw = 0;
            Mv.nW[VM[181]] = 0;
          }
        }
      }
      ;
      ;
      var NvmvM = Math[VM[224]](2) / 2;
      function NNvMV() {
        var VN = 0;
        if (wwm.vnNmn() === 1) {
          VN |= 1;
        }
        if (wwm.nWNmN() === 1) {
          VN |= 2;
        }
        if (wwm.VVmNV() === 1) {
          VN |= 4;
        }
        if (wwm.VWvwv() === 1) {
          VN |= 8;
        }
        if (VN > 0) {
          var nMV = Mv.wwW[1].NnvVn;
          if (nMV === -1) {
            return;
          }
          var nW = nNV.wVN[wWm][nMV];
          nvvNw = (VN & 3 && VN & 12 ? NvmvM : 1) * (wwm.NMMwW() === 0 ? nv * 1.5 : nv * 11);
          if (VN & 1) {
            nW[VM[150]] = nW[VM[232]] - nvvNw;
          } else if (VN & 2) {
            nW[VM[150]] = nW[VM[232]] + nvvNw;
          }
          if (VN & 8) {
            nW[VM[169]] = nW[VM[249]] - nvvNw;
          } else if (VN & 4) {
            nW[VM[169]] = nW[VM[249]] + nvvNw;
          }
          nW[VM[150]] = Math[VM[144]](0, Math[VM[241]](nW[VM[150]], wmW[VM[255]] * 100));
          nW[VM[169]] = Math[VM[144]](0, Math[VM[241]](nW[VM[169]], wmW[VM[104]] * 100));
          nW.NWN = nW[VM[150]];
          nW.vVw = nW[VM[169]];
        }
      }
      ;
      ;
      function NNWvM() {
        var nN = mwVnv.mm[VM[232]] - vW * 5;
        var wn = mwVnv.mm[VM[249]] + vW * 74;
        var NWm = vW * 45;
        for (var Wv = 0; Wv < mnv; Wv++) {
          var Nv = vWN[Wv];
          Nv.mm[VM[232]] = nN + Wv % 8 * NWm;
          Nv.mm[VM[249]] = wn + Math[VM[61]](Wv / 8) * NWm;
          Nv.Mw();
        }
      }
      ;
      ;
      function VwNnv() {
        if (NNm <= 0) {
          NNm = 3000;
        } else if (NNm <= 500) {
          NNm = 3000 - NNm;
        } else if (NNm <= 2500) {
          NNm = 2500;
        }
        var wVM = "";
        wVM += VMwWn(VwvMV);
        wVM += VMwWn(nvNvV);
        wVM += VMwWn(MmNvm);
        wVM += VMwWn(VVNmM);
        var NNM = document[VM[230]]("textarea");
        NNM.value = wVM;
        document.body.appendChild(NNM);
        NNM.select();
        document.execCommand("copy");
        document.body.removeChild(NNM);
      }
      ;
      ;
      function MvvNn() {
        if (NNm > 0) {
          NNm -= nv;
          if (NNm > 2500) {
            WV[VM[149]] = wMM.vNv.wvN((3000 - NNm) / 500);
          } else if (NNm < 500) {
            WV[VM[149]] = wMM.vNv.wvN(NNm / 500);
          }
          WV[VM[134]](WvVVw, VNvmW.mm[VM[232]] - vW * 85, VNvmW.mm[VM[249]] - vW * 40, WvVVw.mvN * vW, WvVVw.wmm * vW);
          WV[VM[149]] = 1;
        }
        if (NVVMn[Mv.nW.mvm] === undefined) {
          NVVMn[Mv.nW.mvm] = [];
        }
        if (NVVMn[Mv.nW.mvm][Mv.nW.vNw] === undefined) {
          NVVMn[Mv.nW.mvm][Mv.nW.vNw] = NM.mMm("(" + Mv.nW.mvm + "," + Mv.nW.vNw + ")", "'Viga', sans-serif", "#FFFFFF", 52, 455, "#000000", 22, 22, undefined, undefined, 0.4, undefined, "#000000", 15.6);
        }
        var m = NVVMn[Mv.nW.mvm][Mv.nW.vNw];
        WV[VM[134]](m, vW * 5, vmW.mm[VM[249]] - vW * 42, m.mvN * vW, m.wmm * vW);
      }
      ;
      var WvVVw = null;
      var NNm = 0;
      var NVVMn = [];
      var mNMNN = 0;
      var mnVww;
      var vwmvv;
      var mWW;
      var nNv;
      var VMn;
      var vnv;
      var mmNnv;
      var mMWVM;
      var NnwMn;
      var wWWnw;
      var mwVnv;
      var vmW;
      var Nvvww;
      var MNWvW;
      var mmWVn;
      var VNvmW;
      var VvNWV;
      function nvM() {
        WvVVw = NM.mMm("Copied to clipboard", "'Viga', sans-serif", "#FFFFFF", 40, 350, "#000000", 18, 18, undefined, undefined, 0.6);
        for (Wv = 0; Wv < 64; Wv++) {
          vWN[VM[154]](NM.vnn(40, 40, null, vNvWV));
        }
        mnVww = NM.MwW(269, 267, "img/settings-box.png");
        vwmvv = NM.MwW(412, 412, "img/borderBigMinimap2.png");
        mWW = NM.MwW(128, 128, "img/minimap.png");
        nNv = NM.vnn(40, 40, ["img/full-screen-out.png", "img/full-screen-in.png", "img/full-screen-click.png"]);
        VMn = NM.vnn(40, 40, ["img/settings-out.png", "img/settings-in.png", "img/settings-click.png"]);
        vnv = NM.vnn(40, 40, ["img/minimap-button-out.png", "img/minimap-button-in.png", "img/minimap-button-click.png"]);
        mmNnv = NM.vnn(67, 67, ["img/logic-button-out.png", "img/logic-button-in.png", "img/logic-button-click.png"]);
        mMWVM = NM.vnn(67, 67, ["img/map-explosive-button-out.png", "img/map-explosive-button-in.png", "img/map-explosive-button-click.png"]);
        NnwMn = NM.vnn(67, 67, ["img/map-road-button-out.png", "img/map-road-button-in.png", "img/map-road-button-click.png"]);
        wWWnw = NM.vnn(67, 67, ["img/map-furniture-button-out.png", "img/map-furniture-button-in.png", "img/map-furniture-button-click.png"]);
        mwVnv = NM.vnn(67, 67, ["img/map-building-button-out.png", "img/map-building-button-in.png", "img/map-building-button-click.png"]);
        vmW = NM.vnn(46.5, 46.5, ["img/zoom-button-out.png", "img/zoom-button-in.png", "img/zoom-button-click.png"]);
        Nvvww = NM.vnn(46.5, 46.5, ["img/unzoom-button-out.png", "img/unzoom-button-in.png", "img/unzoom-button-click.png"]);
        MNWvW = NM.vnn(40, 40, ["img/map-delete-button-out.png", "img/map-delete-button-in.png", "img/map-delete-button-click.png"]);
        mmWVn = NM.vnn(46.5, 46.5, ["img/import-button-out.png", "img/import-button-in.png", "img/import-button-click.png"]);
        VNvmW = NM.vnn(46.5, 46.5, ["img/copy-paste-button-out.png", "img/copy-paste-button-in.png", "img/copy-paste-button-click.png"]);
        VvNWV = NM.vnn(60, 60, ["img/home-button-out.png", "img/home-button-in.png", "img/home-button-click.png"]);
      }
      ;
      ;
      var VMV;
      var VNM = new mvv.wvvmw();
      var nNM = new wwm.wvNvn();
      var MVn = 1000;
      var vvN = 0;
      var vnVmN = wMM.vNv.vvW;
      var NvN = 1000;
      var nvn = 0;
      var mMvVW = wMM.vNv.VWN;
      var WmW = 0;
      var mMv = 0;
      var MvM = undefined;
      function nMn() {
        document[VM[57]]("bod")[VM[219]][VM[251]] = "#46664D";
        mmvNw = 0;
        nnN.nmWVv();
        if (mNMNN === 0) {
          mNMNN = 1;
          var mWVwv = wWw[vM.mmmwm].nvm;
          for (var Wv = 0; Wv < mWVwv[VM[126]]; Wv++) {
            var mV = mWVwv[Wv];
            mV.nm = {
              src: [mV.Vv[VM[58]], "img/useless.png", "img/useless.png"],
              m: [{
                n: 0
              }, {
                n: 0
              }, {
                n: 0
              }]
            };
          }
          var mWVwv = wWw[vM.VnMNM].nvm;
          for (var Wv = 0; Wv < mWVwv[VM[126]]; Wv++) {
            var mV = mWVwv[Wv];
            mV.nm = {
              src: [mV.Vv[VM[58]], "img/useless.png", "img/useless.png"],
              m: [{
                n: 0
              }, {
                n: 0
              }, {
                n: 0
              }]
            };
          }
        }
        NwWNM();
        MW.NMmNm(vWnWM);
        mMv = NvN;
        WmW = NvN;
        MvM = mMvVW;
        nvn = 1;
        vwN();
      }
      ;
      ;
      function wWn(wwM) {
        NnN();
        nnN.vwWVw();
        VMV = wwM;
        nnmNm();
        mMv = MVn;
        WmW = MVn;
        MvM = vnVmN;
        vvN = 1;
      }
      ;
      ;
      function vwN() {
        var Nvm = 0;
        var vWn = 0;
        if (mMv > 0) {
          vWn = Vnv;
          var mwn = MvM(1 - mMv / WmW);
          if (mwn === 1) {
            mMv = 0;
          }
          if (nvn === 1) {
            mwn = 1 - Math[VM[0]](mwn);
          }
          Nvm *= mwn;
          vWn *= mwn;
        }
        mnVww.mm[VM[232]] = mVV - Math[VM[61]](vW * 134) + Nvm;
        mnVww.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 133)) + vWn;
        vwmvv.mm[VM[232]] = mVV - Math[VM[61]](vW * 206) + Nvm;
        vwmvv.mm[VM[249]] = Math[VM[144]](0, nnW - Math[VM[61]](vW * 206)) + vWn;
        mWW.mm[VM[232]] = Math[VM[61]](vW * 5) - Nvm;
        mWW.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        nNv.mm[VM[232]] = mWW.mm[VM[232]] + Math[VM[61]](vW * 126);
        nNv.mm[VM[249]] = mWW.mm[VM[249]];
        VMn.mm[VM[232]] = nNv.mm[VM[232]];
        VMn.mm[VM[249]] = nNv.mm[VM[249]] + Math[VM[61]](vW * 44.5);
        vnv.mm[VM[232]] = VMn.mm[VM[232]];
        vnv.mm[VM[249]] = VMn.mm[VM[249]] + Math[VM[61]](vW * 44.5);
        mmNnv.mm[VM[232]] = MVM - Math[VM[61]](vW * 67) + Math[VM[61]](vW * -5) - Nvm;
        mmNnv.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        mMWVM.mm[VM[232]] = mmNnv.mm[VM[232]] + Math[VM[61]](vW * -70);
        mMWVM.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        NnwMn.mm[VM[232]] = mMWVM.mm[VM[232]] + Math[VM[61]](vW * -70);
        NnwMn.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        wWWnw.mm[VM[232]] = NnwMn.mm[VM[232]] + Math[VM[61]](vW * -70);
        wWWnw.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        mwVnv.mm[VM[232]] = wWWnw.mm[VM[232]] + Math[VM[61]](vW * -70);
        mwVnv.mm[VM[249]] = Math[VM[61]](vW * 5) - vWn;
        vmW.mm[VM[232]] = Math[VM[61]](vW * 5);
        vmW.mm[VM[249]] = Vnv - Math[VM[61]](vW * 46.5) + Math[VM[61]](vW * -5);
        Nvvww.mm[VM[232]] = vmW.mm[VM[232]] + Math[VM[61]](vW * 50);
        Nvvww.mm[VM[249]] = Vnv - Math[VM[61]](vW * 46.5) + Math[VM[61]](vW * -5);
        MNWvW.mm[VM[232]] = mWW.mm[VM[232]] + Math[VM[61]](vW * 89);
        MNWvW.mm[VM[249]] = mWW.mm[VM[249]] + Math[VM[61]](vW * 126);
        mmWVn.mm[VM[232]] = MVM - Math[VM[61]](vW * 46.5) + Math[VM[61]](vW * -5);
        mmWVn.mm[VM[249]] = Vnv - Math[VM[61]](vW * 46.5) + Math[VM[61]](vW * -5);
        VNvmW.mm[VM[232]] = mmWVn.mm[VM[232]] + Math[VM[61]](vW * -50);
        VNvmW.mm[VM[249]] = Vnv - Math[VM[61]](vW * 46.5) + Math[VM[61]](vW * -5);
        VvNWV.mm[VM[232]] = mWW.mm[VM[232]];
        VvNWV.mm[VM[249]] = mWW.mm[VM[249]] + Math[VM[61]](vW * 126);
      }
      ;
      ;
      function Mw() {
        if (NmVMN() === 0) {
          return;
        }
        VvNNw();
        NNvMV();
        WV[VM[48]](0, 0, MVM, Vnv);
        Mv.wMvvN();
        Vw.VMnnv();
        Vw.vwM(mWW.mm[VM[232]], mWW.mm[VM[249]]);
        mWW.Mw();
        nNv.Mw();
        VMn.Mw();
        vnv.Mw();
        mmNnv.Mw();
        mMWVM.Mw();
        NnwMn.Mw();
        wWWnw.Mw();
        mwVnv.Mw();
        vmW.Mw();
        Nvvww.Mw();
        MNWvW.Mw();
        mmWVn.Mw();
        VNvmW.Mw();
        VvNWV.Mw();
        MvvNn();
        NNWvM();
        if (wMN === 1) {
          if (WMm === 1) {
            Vw.MNNVn(vwmvv, WNw);
          } else if (NWv === 1) {
            Vw.mWnWW(mnVww, MMMmV, wNnwN, nwMvn, vwVMN, wMwvN, nnNMM, wWWMW, mvVvn, WWNWw, WNw, nwnww, NVMMm, NnnwW);
          }
        } else if (Mwv === 1) {
          if (wwm.vnNmn() + wwm.nWNmN() + wwm.VWvwv() + wwm.VVmNV() >= 1) {
            WV[VM[149]] = 0.3;
            var nN = nWN - wwwmw * 1.5;
            var wn = mwMWM + wwwmw / 4;
            MW.MVvvv(WV, nN, wn, 60);
            MW.NNMMw(WV, "#000000");
            MW.MVvvv(WV, nN + Math[VM[178]](mwvVw) * nnWVw * vW, wn + Math[VM[142]](mwvVw) * nnWVw * vW, 30);
            MW.NNMMw(WV, "#FFFFFF");
            WV[VM[149]] = 1;
          }
          if (NnvNw === 1) {
            WV[VM[149]] = 0.3;
            var nN = nWN + wwwmw * 1.5;
            var wn = mwMWM + wwwmw / 4;
            MW.MVvvv(WV, nN, wn, 60);
            MW.NNMMw(WV, "#000000");
            MW.MVvvv(WV, nN + Math[VM[178]](mvv[VM[246]]) * 25 * vW, wn + Math[VM[142]](mvv[VM[246]]) * 25 * vW, 30);
            MW.NNMMw(WV, "#FFFFFF");
            WV[VM[149]] = 1;
          }
        }
        nnN.wVNNv();
      }
      ;
      ;
      function NmVMN() {
        if (vvN === 1) {
          vwN();
          if (mMv < 0) {
            vvN = 0;
            nNv.wvn(NM.WVN);
            VMn.wvn(NM.WVN);
            vnv.wvn(NM.WVN);
            mmNnv.wvn(NM.WVN);
            mMWVM.wvn(NM.WVN);
            NnwMn.wvn(NM.WVN);
            wWWnw.wvn(NM.WVN);
            mwVnv.wvn(NM.WVN);
            vmW.wvn(NM.WVN);
            Nvvww.wvn(NM.WVN);
            MNWvW.wvn(NM.WVN);
            mmWVn.wvn(NM.WVN);
            VNvmW.wvn(NM.WVN);
            VvNWV.wvn(NM.WVN);
            VMV.nMn();
            return 0;
          }
          mMv -= nv;
        } else if (nvn === 1) {
          vwN();
          if (mMv < 0) {
            nvn = 0;
            MMvmM();
          }
          mMv -= nv;
        }
        return 1;
      }
      ;
      ;
      function Nmw(vN) {
        mvv.VNv(vN, mvv.nvmmV);
        var WN = 0;
        if (nNv.Nn() === 1) {
          WN = 1;
        }
        if (VMn.Nn() === 1) {
          WN = 1;
        }
        if (vnv.Nn() === 1) {
          WN = 1;
        }
        if (mmNnv.Nn() === 1) {
          WN = 1;
        }
        if (mMWVM.Nn() === 1) {
          WN = 1;
        }
        if (NnwMn.Nn() === 1) {
          WN = 1;
        }
        if (wWWnw.Nn() === 1) {
          WN = 1;
        }
        if (mwVnv.Nn() === 1) {
          WN = 1;
        }
        if (vmW.Nn() === 1) {
          WN = 1;
        }
        if (Nvvww.Nn() === 1) {
          WN = 1;
        }
        if (MNWvW.Nn() === 1) {
          WN = 1;
        }
        if (mmWVn.Nn() === 1) {
          WN = 1;
        }
        if (VNvmW.Nn() === 1) {
          WN = 1;
        }
        if (VvNWV.Nn() === 1) {
          WN = 1;
        }
        if (wMN === 1) {
          WNw.Nn();
          if (NWv === 1) {
            vwVMN.Nn();
            wMwvN.Nn();
            MMMmV.Nn();
            wNnwN.Nn();
            nwMvn.Nn();
            nnNMM.Nn();
            wWWMW.Nn();
            mvVvn.Nn();
            WWNWw.Nn();
            NVMMm.Nn();
            nwnww.Nn();
            NnnwW.Nn();
          }
        } else {
          for (var Wv = 0; Wv < mnv; Wv++) {
            if (vWN[Wv].Nn() === 1) {
              WN = 1;
            }
          }
        }
        if (WN === 0 && wMN === 0) {
          mmvNw = 1;
          if (Mv.nW[VM[181]] === -1) {
            Mv.nW[VM[181]] = 0;
          }
        } else if (Mv.nW[VM[181]] === 0) {
          Mv.nW[VM[181]] = -1;
        }
      }
      ;
      ;
      function nmw(vN) {
        mvv.VNv(vN, mvv.MmVVW);
        var WN = 0;
        if (nNv.Nn() === 1) {
          WN = 1;
          if (NWvWw === 0) {
            NWvWw = 1;
            MW.WmMvv();
            if (Mv.Mwm === 0) {
              MVw[VM[219]][VM[251]] = "#3D5942";
            } else {
              MVw[VM[219]][VM[251]] = "#0B2129";
            }
            wN.Vww(wN.mn[VM[59]], 1, 0);
          } else {
            NWvWw = 0;
            MW.mvMMN();
            wN.Vww(wN.mn[VM[59]], 1, 0);
          }
        }
        if (VMn.Nn() === 1) {
          WN = 1;
          if (NWv === 0) {
            NnN();
            wMN = 1;
            NWv = 1;
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          } else {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
        }
        if (vnv.Nn() === 1) {
          WN = 1;
          if (WMm === 0) {
            NnN();
            wMN = 1;
            WMm = 1;
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          } else {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
        }
        if (mmNnv.Nn() === 1) {
          WN = 1;
          mnv = 0;
          for (var Wv = 1; Wv < wWw[VM[126]]; Wv++) {
            var mV = wWw[Wv];
            if (mV[VM[17]] === WmN.nWV) {
              vWN[mnv].mvM(mV.nm[VM[58]], mV.nm.m);
              vWN[mnv].VwW = mV[VM[5]];
              mnv++;
            }
          }
          wN.Vww(wN.mn[VM[59]], 1, 0);
        }
        if (mMWVM.Nn() === 1) {
          WN = 1;
          mnv = 0;
          for (var Wv = 1; Wv < wWw[VM[126]]; Wv++) {
            var mV = wWw[Wv];
            if (mV[VM[5]] === vM.MwmNN || mV[VM[5]] === vM.vNwvM || mV[VM[5]] === vM.wVvNv || mV[VM[5]] === vM.nMVMv) {
              vWN[mnv].mvM(mV.nm[VM[58]], mV.nm.m);
              vWN[mnv].VwW = mV[VM[5]];
              mnv++;
            }
          }
          wN.Vww(wN.mn[VM[59]], 1, 0);
        }
        if (NnwMn.Nn() === 1) {
          WN = 1;
          mnv = 0;
          var mWVwv = wWw[vM.mmmwm].nvm;
          for (var Wv = 0; Wv < mWVwv[VM[126]]; Wv++) {
            var mV = mWVwv[Wv];
            vWN[mnv].mvM(mV.nm[VM[58]], mV.nm.m);
            vWN[mnv].VwW = vM.mmmwm;
            vWN[mnv].nmNNW = Wv;
            mnv++;
          }
          wN.Vww(wN.mn[VM[59]], 1, 0);
        }
        if (wWWnw.Nn() === 1) {
          WN = 1;
          mnv = 0;
          var mWVwv = wWw[vM.VnMNM].nvm;
          for (var Wv = 0; Wv < mWVwv[VM[126]]; Wv++) {
            var mV = mWVwv[Wv];
            vWN[mnv].mvM(mV.nm[VM[58]], mV.nm.m);
            vWN[mnv].VwW = vM.VnMNM;
            vWN[mnv].nmNNW = Wv;
            mnv++;
          }
          wN.Vww(wN.mn[VM[59]], 1, 0);
        }
        if (mwVnv.Nn() === 1) {
          WN = 1;
          mnv = 0;
          for (var Wv = 1; Wv < wWw[VM[126]]; Wv++) {
            var mV = wWw[Wv];
            if (mV.vWV === 1 || mV.MwM === 1 || mV.wnm === 1 || mV.Nwn === 1 || mV.VvVnN === 1) {
              vWN[mnv].mvM(mV.nm[VM[58]], mV.nm.m);
              vWN[mnv].VwW = mV[VM[5]];
              mnv++;
            }
          }
          wN.Vww(wN.mn[VM[59]], 1, 0);
        }
        if (vmW.Nn() === 1) {
          WN = 1;
          if (Vw[VM[236]] < 1.5) {
            Vw[VM[236]] += 0.1;
            wN.Vww(wN.mn[VM[59]], 1, 0);
            Nvvww[VM[167]]();
            if (Vw[VM[236]] >= 1.5) {
              vmW.mWn();
            }
          }
        }
        if (Nvvww.Nn() === 1) {
          WN = 1;
          if (Vw[VM[236]] > -0.95) {
            if (Vw[VM[236]] < 0) {
              Vw[VM[236]] -= 0.05;
            } else {
              Vw[VM[236]] -= 0.1;
            }
            wN.Vww(wN.mn[VM[59]], 1, 0);
            vmW[VM[167]]();
            if (Vw[VM[236]] <= -0.95) {
              Nvvww.mWn();
            }
          }
        }
        if (MNWvW.Nn() === 1) {
          WN = 1;
          NwWNM();
          wN.Vww(wN.mn[VM[59]], 1, 0);
        }
        if (mmWVn.Nn() === 1) {
          WN = 1;
          wN.Vww(wN.mn[VM[64]], 1, 0);
          var WnvnM = Wm.prompt("Please enter your code here", "");
          wN.Vww(wN.mn[VM[64]], 1, 0);
          if (WnvnM != null && WnvnM != "") {
            MNmmW(WnvnM);
          }
        }
        if (VNvmW.Nn() === 1) {
          WN = 1;
          wN.Vww(wN.mn[VM[59]], 1, 0);
          VwNnv();
        }
        if (VvNWV.Nn() === 1) {
          WN = 1;
          vWnWM.wWn(vNm);
          wN.Vww(wN.mn[VM[223]], 1, 0);
        }
        if (wMN === 1) {
          if (WNw.Nn() === 1) {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
            return;
          }
          if (NWv === 1) {
            wMwvN.wvn(NM.WVN);
            vwVMN.wvn(NM.WVN);
            MMMmV.wvn(NM.WVN);
            wNnwN.wvn(NM.WVN);
            nwMvn.wvn(NM.WVN);
            nnNMM.wvn(NM.WVN);
            wWWMW.wvn(NM.WVN);
            mvVvn.wvn(NM.WVN);
            WWNWw.wvn(NM.WVN);
            nwnww.wvn(NM.WVN);
            NVMMm.wvn(NM.WVN);
            NnnwW.wvn(NM.WVN);
            if (vwVMN.Nn() === 1) {
              wwm.vmMnm();
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (wMwvN.Nn() === 1) {
              wwm.WnMNv();
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (MMMmV.Nn() === 1) {
              MW.mnVNV(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (wNnwN.Nn() === 1) {
              MW.mnVNV(2);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (nwMvn.Nn() === 1) {
              MW.mnVNV(3);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (nnNMM.Nn() === 1) {
              wN.vMNWM(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (wWWMW.Nn() === 1) {
              wN.vMNWM(0);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (mvVvn.Nn() === 1) {
              wN.WNmWM(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (WWNWw.Nn() === 1) {
              wN.WNmWM(0);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (NVMMm.Nn() === 1) {
              Vw.VnNVW(1);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (nwnww.Nn() === 1) {
              Vw.VnNVW(2);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            } else if (NnnwW.Nn() === 1) {
              Vw.VnNVW(0);
              wN.Vww(wN.mn[VM[59]], 1, 0);
              return;
            }
            var MWmMM = mnVww.mm;
            if (mvv.mmV < MWmMM[VM[232]] || mvv.mmV > MWmMM[VM[232]] + vW * 234 || mvv.vMm < MWmMM[VM[249]] || mvv.vMm > MWmMM[VM[249]] + vW * 232) {
              NnN();
              wN.Vww(wN.mn[VM[64]], 1, 0);
              return;
            }
          } else if (WMm === 1) {
            var vWwnW = vwmvv.mm;
            if (mvv.mmV < vWwnW[VM[232]] || mvv.mmV > vWwnW[VM[232]] + vW * 412 || mvv.vMm < vWwnW[VM[249]] || mvv.vMm > vWwnW[VM[249]] + vW * 412) {
              NnN();
              wN.Vww(wN.mn[VM[64]], 1, 0);
              return;
            }
          }
        } else {
          for (var Wv = 0; Wv < mnv; Wv++) {
            if (vWN[Wv].Nn() === 1) {
              wN.Vww(wN.mn[VM[59]], 1, 0);
              Mv.nW.Nnw = vWN[Wv].VwW;
              Mv.nW.mVVnW = vWN[Wv].nmNNW;
              if (Mv.nW.Nnw === vM.mmmwm) {
                Mv.nW.NMvmW = 0;
              }
            }
          }
        }
      }
      ;
      ;
      function mVm(vN) {
        mvv.VNv(vN, mvv.MvNnv);
        var WN = 0;
        if (nNv.Nn() === 1) {
          WN = 1;
        }
        if (VMn.Nn() === 1) {
          WN = 1;
        }
        if (vnv.Nn() === 1) {
          WN = 1;
        }
        if (mmNnv.Nn() === 1) {
          WN = 1;
        }
        if (mMWVM.Nn() === 1) {
          WN = 1;
        }
        if (NnwMn.Nn() === 1) {
          WN = 1;
        }
        if (wWWnw.Nn() === 1) {
          WN = 1;
        }
        if (mwVnv.Nn() === 1) {
          WN = 1;
        }
        if (vmW.Nn() === 1) {
          WN = 1;
        }
        if (Nvvww.Nn() === 1) {
          WN = 1;
        }
        if (MNWvW.Nn() === 1) {
          WN = 1;
        }
        if (mmWVn.Nn() === 1) {
          WN = 1;
        }
        if (VNvmW.Nn() === 1) {
          WN = 1;
        }
        if (VvNWV.Nn() === 1) {
          WN = 1;
        }
        if (wMN === 1) {
          WNw.Nn();
          if (NWv === 1) {
            vwVMN.Nn();
            wMwvN.Nn();
            MMMmV.Nn();
            wNnwN.Nn();
            nwMvn.Nn();
            nnNMM.Nn();
            wWWMW.Nn();
            mvVvn.Nn();
            WWNWw.Nn();
            NVMMm.Nn();
            nwnww.Nn();
            NnnwW.Nn();
          }
        } else {
          for (var Wv = 0; Wv < mnv; Wv++) {
            vWN[Wv].Nn();
          }
        }
      }
      ;
      ;
      function Wnm(vN) {
        wwm.nnvWm(vN);
        if (vN[VM[238]] === 77) {
          if (WMm === 0) {
            NnN();
            wMN = 1;
            WMm = 1;
            wN.Vww(wN.mn[VM[64]], 1, 0);
          } else {
            NnN();
            wN.Vww(wN.mn[VM[64]], 1, 0);
          }
        } else if (vN[VM[238]] === 27 && wMN === 1) {
          wN.Vww(wN.mn[VM[64]], 1, 0);
          NnN();
        } else if (vN[VM[238]] === 82) {
          if (Mv.nW.nvN === 1 && Mv.nW.Nnw !== vM.mmmwm) {
            Mv.nW.NMvmW = (Mv.nW.NMvmW + 1) % 4;
          }
        }
      }
      ;
      ;
      function mWv(vN) {
        wwm.VvNVW(vN);
        if (vN[VM[238]] === 37 || vN[VM[238]] === 38 || vN[VM[238]] === 39 || vN[VM[238]] === 40) {
          vN[VM[40]]();
          return false;
        }
      }
      ;
      ;
      function vwn(vN) {
        var mNV = 0;
        for (var NWn = 0; NWn < vN[VM[114]][VM[126]]; NWn++) {
          mvv.NWW(VNM, vN, vN[VM[114]][NWn]);
          if (wMN === 0) {
            var mmV = Math[VM[61]](VNM[VM[89]] * MW[VM[29]].wNN);
            var vMm = Math[VM[61]](VNM[VM[180]] * MW[VM[29]].mvnVW);
            if (vMm < Vnv - vW * 70) {
              var MWv = MmMwM * 1.5;
              var nmm = MmMwM / 4;
              if (mmV < mVV) {
                var NWm = vW * 30;
                mwvVw = vVV[VM[246]](mVV - MWv, nnW + nmm, mmV, vMm);
                nnWVw = Math[VM[241]](vVV.nMW(mmV, vMm, mVV - MWv, nnW + nmm), 25);
                if (mmV < mVV - MWv - NWm) {
                  Vvv |= 1;
                  nNM[VM[198]] = 37;
                  nNM[VM[238]] = 37;
                  mWv(nNM);
                } else if (mmV > mVV - MWv + NWm) {
                  Vvv |= 2;
                  nNM[VM[198]] = 39;
                  nNM[VM[238]] = 39;
                  mWv(nNM);
                }
                if (vMm < nnW + nmm - NWm) {
                  Vvv |= 4;
                  nNM[VM[198]] = 38;
                  nNM[VM[238]] = 38;
                  mWv(nNM);
                } else if (vMm > nnW + nmm + NWm) {
                  Vvv |= 8;
                  nNM[VM[198]] = 40;
                  nNM[VM[238]] = 40;
                  mWv(nNM);
                }
              } else if (mmV < MVM - vW * 40 || vMm > vW * 40) {
                mNV = 1;
                VNM[VM[89]] -= MWv / MW[VM[29]].wNN;
                VNM[VM[180]] -= nmm / MW[VM[29]].wNN;
                if (Mv.nW.nvN === 1) {
                  var MmvWV = Date[VM[105]]();
                  if (MmvWV - mNmNV < 1000) {
                    NnvNw = 1;
                    mNMNv = VNM[VM[89]];
                    WNWwv = VNM[VM[180]];
                    Nmw(VNM);
                  }
                  mNmNV = MmvWV;
                } else {
                  NnvNw = 1;
                  mNMNv = VNM[VM[89]];
                  WNWwv = VNM[VM[180]];
                  Nmw(VNM);
                }
              }
              continue;
            }
          }
          if (mNV === 0 && Vvv === 0) {
            Nmw(VNM);
            mNV = 1;
          }
        }
      }
      ;
      ;
      function nmM(vN) {}
      ;
      ;
      function mNm(vN) {
        var mmV = Math[VM[61]](vN[VM[97]][0][VM[89]] * MW[VM[29]].wNN);
        var vMm = Math[VM[61]](vN[VM[97]][0][VM[180]] * MW[VM[29]].mvnVW);
        if (vNwVM === 1) {
          vNwVM = 0;
        } else if (wMN === 1) {
          nmw(VNM);
        } else if (NnvNw === 1 && mmV >= mVV) {
          NnvNw = 0;
          VNM[VM[89]] = mNMNv;
          VNM[VM[180]] = WNWwv;
          nmw(VNM);
          return;
        } else if (Mv.nW.vMV.nMw === 0 && mmV < mVV && vMm < Vnv - vW * 70) {
          if (mmV < vW * 240 && vMm < vW * 160) {
            nmw(VNM);
          }
        } else {
          nmw(VNM);
        }
        if (Vvv !== 0) {
          if (Vvv & 1) {
            nNM[VM[198]] = 37;
            Wnm(nNM);
          }
          if (Vvv & 2) {
            nNM[VM[198]] = 39;
            Wnm(nNM);
          }
          if (Vvv & 4) {
            nNM[VM[198]] = 38;
            Wnm(nNM);
          }
          if (Vvv & 8) {
            nNM[VM[198]] = 40;
            Wnm(nNM);
          }
          Vvv = 0;
        }
      }
      ;
      ;
      function VvM(vN) {
        var mNV = 0;
        var mmmvm = 0;
        for (var NWn = 0; NWn < vN[VM[114]][VM[126]]; NWn++) {
          mvv.NWW(VNM, vN, vN[VM[114]][NWn]);
          if (Mv.nW.vMV.nMw === 0 && wMN === 0) {
            var mmV = Math[VM[61]](VNM[VM[89]] * MW[VM[29]].wNN);
            var vMm = Math[VM[61]](VNM[VM[180]] * MW[VM[29]].mvnVW);
            if (vMm < Vnv - vW * 70) {
              var MWv = MmMwM * 1.5;
              var nmm = MmMwM / 4;
              if (mmV < mVV) {
                mmmvm = 1;
                var wmN = 0;
                var NWm = vW * 30;
                mwvVw = vVV[VM[246]](mVV - MWv, nnW + nmm, mmV, vMm);
                nnWVw = Math[VM[241]](vVV.nMW(mmV, vMm, mVV - MWv, nnW + nmm), 25);
                if (mmV < mVV - MWv - NWm) {
                  wmN |= 1;
                } else if (mmV > mVV - MWv + NWm) {
                  wmN |= 2;
                }
                if (vMm < nnW + nmm + -NWm) {
                  wmN |= 4;
                } else if (vMm > nnW + nmm + NWm) {
                  wmN |= 8;
                }
                if ((wmN & 1) === 1 && (Vvv & 1) !== 1) {
                  nNM[VM[198]] = 37;
                  mWv(nNM);
                } else if ((wmN & 1) !== 1 && (Vvv & 1) === 1) {
                  nNM[VM[198]] = 37;
                  Wnm(nNM);
                }
                if ((wmN & 2) === 2 && (Vvv & 2) !== 2) {
                  nNM[VM[198]] = 39;
                  mWv(nNM);
                } else if ((wmN & 2) !== 2 && (Vvv & 2) === 2) {
                  nNM[VM[198]] = 39;
                  Wnm(nNM);
                }
                if ((wmN & 4) === 4 && (Vvv & 4) !== 4) {
                  nNM[VM[198]] = 38;
                  mWv(nNM);
                } else if ((wmN & 4) !== 4 && (Vvv & 4) === 4) {
                  nNM[VM[198]] = 38;
                  Wnm(nNM);
                }
                if ((wmN & 8) === 8 && (Vvv & 8) !== 8) {
                  nNM[VM[198]] = 40;
                  mWv(nNM);
                } else if ((wmN & 8) !== 8 && (Vvv & 8) === 8) {
                  nNM[VM[198]] = 40;
                  Wnm(nNM);
                }
                Vvv = wmN;
                continue;
              } else if (mmV < MVM - vW * 40 || vMm > vW * 40) {
                mNV = 1;
                VNM[VM[89]] -= MWv / MW[VM[29]].wNN;
                VNM[VM[180]] -= nmm / MW[VM[29]].wNN;
                mNMNv = VNM[VM[89]];
                WNWwv = VNM[VM[180]];
                mVm(VNM);
              }
            }
          }
          if (mNV === 0 && Vvv === 0) {
            mVm(VNM);
            mNV = 1;
          }
        }
        if (mmmvm === 0 && Vvv !== 0) {
          if (Vvv & 1) {
            nNM[VM[198]] = 37;
            Wnm(nNM);
          }
          if (Vvv & 2) {
            nNM[VM[198]] = 39;
            Wnm(nNM);
          }
          if (Vvv & 4) {
            nNM[VM[198]] = 38;
            Wnm(nNM);
          }
          if (Vvv & 8) {
            nNM[VM[198]] = 40;
            Wnm(nNM);
          }
          Vvv = 0;
        }
      }
      ;
      ;
      function MMvmM() {
        if (Mwv === 0) {
          Wm[VM[121]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("mousemove", mVm, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("keyup", Wnm, false);
        }
        if (Mwv === 0) {
          Wm[VM[121]]("keydown", mWv, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[121]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      function nnmNm() {
        if (Mwv === 0) {
          Wm[VM[183]]("mousedown", Nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mouseup", nmw, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("mousemove", mVm, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("keyup", Wnm, false);
        }
        if (Mwv === 0) {
          Wm[VM[183]]("keydown", mWv, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchstart", vwn, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchend", nmM, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchcancel", mNm, false);
        }
        if (Mwv === 1) {
          Wm[VM[183]]("touchmove", VvM, false);
        }
      }
      ;
      ;
      return {
        wWn: wWn,
        nvM: nvM,
        nMn: nMn,
        update: vwN,
        Mw: Mw
      };
    }();
    var WwM = 1;
    var WMM = {
      vWNVM: WwM++,
      WmMnn: WwM++,
      WnwvN: WwM++,
      mMMMV: WwM++,
      vnMWm: WwM++,
      vvvwM: WwM++,
      VVnVw: WwM++,
      MvwWw: WwM++,
      vMmnN: WwM++,
      WnVnM: WwM++,
      wWvvW: WwM++,
      VnmWn: WwM++,
      NVMwn: WwM++,
      nWmNN: WwM++,
      vvmVw: WwM++
    };
    var VnMmm = [{}, {
      id: WMM.vWNVM,
      src: "img/road-T0B0L0R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 0,
        y: 0,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
      alt: [WMM.vWNVM]
    }, {
      id: WMM.WmMnn,
      src: "img/road-T0B0L1R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 28,
        y: 0,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
      alt: [WMM.NvnMw, WMM.nmvWn]
    }, {
      id: WMM.WnwvN,
      src: "img/road-T0B0L1R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 56,
        y: 0,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
      alt: [WMM.mVMVM, WMM.Nmvnn, WMM.NmVmM, WMM.mvnNW, WMM.NwNMV, WMM.nNnmV, WMM.nMmwm, WMM.wNwMN]
    }, {
      id: WMM.mMMMV,
      src: "img/road-T0B1L0R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 84,
        y: 0,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
      alt: [WMM.MmVwV, WMM.vMNwM]
    }, {
      id: WMM.vnMWm,
      src: "img/road-T0B1L0R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 56,
        y: 28,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.vvvwM,
      src: "img/road-T0B1L1R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 0,
        y: 56,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.VVnVw,
      src: "img/road-T0B1L1R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 112,
        y: 0,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.MvwWw,
      src: "img/road-T1B0L0R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 28,
        y: 28,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.vMmnN,
      src: "img/road-T1B0L0R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 56,
        y: 56,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.WnVnM,
      src: "img/road-T1B0L1R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 84,
        y: 56,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.wWvvW,
      src: "img/road-T1B0L1R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 84,
        y: 28,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.VnmWn,
      src: "img/road-T1B1L0R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 112,
        y: 56,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.NVMwn,
      src: "img/road-T1B1L0R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 112,
        y: 28,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.nWmNN,
      src: "img/road-T1B1L1R0.png",
      m: {
        n: 0
      },
      vwM: {
        x: 0,
        y: 28,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    }, {
      id: WMM.vvmVw,
      src: "img/road-T1B1L1R1.png",
      m: {
        n: 0
      },
      vwM: {
        x: 28,
        y: 56,
        nVV: 28,
        w: 28
      },
      mwM: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],
      alt: [WMM.NmwwM, WMM.nwnmN]
    }];
    try {
      if (mww !== undefined) {
        mww.WMM = WMM;
        mww.VnMmm = VnMmm;
      }
    } catch (VWn) {}
    var Vw = function () {
      var wVw = 100;
      var Vvn = wVw / 2;
      var VnWwv = 1;
      var VmwVv = 13;
      var vnvvv = 9;
      var mNNvn = 100;
      var mwMMW = 0.025;
      var mmmNv = 0.12;
      var WvVvN = 0.01;
      var nWwnN = 0.008;
      var vvv = 0;
      var wmNVv = 0;
      var MVwwv = 0;
      var Vvw = 0;
      var VmnVM = 3;
      var mnwnw = 0;
      var VWNmn = 0;
      var VNnwm = 0;
      var wNwNW = 0;
      var vMVvv = 450;
      var wWV = 410;
      var vWmVm = wWV;
      var NvVMw = 412 / 8;
      var nVNmw = 0;
      var MVWVm = "img/borderBigMinimap2.png";
      var nmwvm = "img/arrow-minimap.png";
      var WMmmm = "img/arrow-minimap2.png";
      var MwVnw = "img/house-icon.png";
      var vWVww = "img/city-icon.png";
      var WmnNn = "img/inv-empty.png";
      var NwmvN = "img/loot.png";
      var VWVVN = "img/loot-mobile.png";
      var WvNMM = "img/loot2.png";
      var vMMWv = "img/timer.png";
      var wnnww = "img/craft-grid.png";
      var VvvMn = "img/timer-arrow.png";
      var WwvWM = "img/timer-lights.png";
      var MmMWn = "img/hint-rotate.png";
      var vNmNM = "img/day-unusable.png";
      var vMmnM = "img/day-unusable.png";
      var wVNNW = "img/day-clock.png";
      var mMwVm = "img/night-clock.png";
      var wwnVm = "img/clock-hand.png";
      var NnnWn = "img/clock-hand-radiation.png";
      var VNvMN = "img/day-clock-hand.png";
      var nwWmv = "img/craft-gauge.png";
      var nmwnv = "img/stroke-bonus.png";
      var mwvnW = "img/wrong-tool.png";
      var mMwMN = "img/hand-tool.png";
      var WmnWn = "img/arrow-craft.png";
      var WvnWN = "img/unlock-skills.png";
      var VNnMv = "img/server-full.png";
      var wNVWm = "img/server-old.png";
      var mvVnW = "img/client-old.png";
      var wnnNM = "img/server-wrong.png";
      var vWvmW = "img/invitation-box.png";
      var MVVww = "img/time-box.png";
      var MvWMN = "img/rank-box.png";
      var vWnmn = "img/toxic-alert.png";
      var mwwVW = "img/radiation-alert.png";
      var NVwnN = 500;
      var vmnvW = 256;
      var nvmvN = vmnvW * 2;
      var nwVVW = 500;
      var VwM = Math[VM[61]](vmnvW / 2);
      var mMvnv = Math[VM[61]](VwM / 2);
      var VvmMN = "img/alert";
      var mwVnn = 699;
      var Mnvmw = 738;
      var vVnWm = "#70BD56";
      var nNvNw = "#e58833";
      var nnMWN = "#55B7BC";
      var VWVVv = "#d7c83a";
      var MnVMW = "#FFFFFF";
      var WWvNN = 3000;
      var vmvmw = 500;
      var nNnvM = 2500;
      var WwNwv = Math[VM[99]] * 2;
      var WwWwn = Math[VM[99]] / 180 * 165;
      var vNM = Math[VM[99]] / 2;
      var NvMmv = Math[VM[99]] / Mv.nVmnM;
      var wMw = 1;
      var mMN = 2;
      var WwW = 4;
      var nVN = 8;
      var WWw = 16;
      var Www = 32;
      var mnw = 64;
      var Mmn = 128;
      var wWmww = 0;
      var vvV = 1;
      var VwN = 2;
      var nnw = 4;
      var MwN = 8;
      var VnNVV = 0;
      var nWmNw = 1;
      var mvNvV = 2;
      var nWwWV = 3;
      var wWW = [[], [], [], []];
      wWW[VnNVV][wWmww] = 0;
      wWW[VnNVV][vvV] = 3;
      wWW[VnNVV][VwN] = 6;
      wWW[VnNVV][nnw | MwN] = 9;
      wWW[VnNVV][nnw] = 4;
      wWW[VnNVV][MwN] = 5;
      wWW[VnNVV][vvV | nnw] = 27;
      wWW[VnNVV][vvV | MwN] = 20;
      wWW[VnNVV][VwN | nnw] = 7;
      wWW[VnNVV][VwN | MwN] = 28;
      wWW[VnNVV][vvV | nnw | MwN] = 24;
      wWW[VnNVV][VwN | nnw | MwN] = 29;
      wWW[mvNvV][wWmww] = 0;
      wWW[mvNvV][vvV] = 3;
      wWW[mvNvV][VwN] = 6;
      wWW[mvNvV][nnw | MwN] = 9;
      wWW[mvNvV][nnw] = 4;
      wWW[mvNvV][MwN] = 5;
      wWW[mvNvV][vvV | nnw] = 27;
      wWW[mvNvV][vvV | MwN] = 20;
      wWW[mvNvV][VwN | nnw] = 7;
      wWW[mvNvV][VwN | MwN] = 28;
      wWW[mvNvV][vvV | nnw | MwN] = 24;
      wWW[mvNvV][VwN | nnw | MwN] = 29;
      wWW[nWmNw][wWmww] = 11;
      wWW[nWmNw][vvV] = 12;
      wWW[nWmNw][VwN] = 17;
      wWW[nWmNw][nnw | MwN] = 10;
      wWW[nWmNw][nnw] = 19;
      wWW[nWmNw][MwN] = 18;
      wWW[nWmNw][vvV | nnw] = 34;
      wWW[nWmNw][vvV | MwN] = 22;
      wWW[nWmNw][VwN | nnw] = 23;
      wWW[nWmNw][VwN | MwN] = 33;
      wWW[nWmNw][vvV | nnw | MwN] = 35;
      wWW[nWmNw][VwN | nnw | MwN] = 32;
      wWW[nWwWV][wWmww] = 11;
      wWW[nWwWV][vvV] = 15;
      wWW[nWwWV][VwN] = 14;
      wWW[nWwWV][nnw | MwN] = 10;
      wWW[nWwWV][nnw] = 19;
      wWW[nWwWV][MwN] = 18;
      wWW[nWwWV][vvV | nnw] = 37;
      wWW[nWwWV][vvV | MwN] = 16;
      wWW[nWwWV][VwN | nnw] = 23;
      wWW[nWwWV][VwN | MwN] = 38;
      wWW[nWwWV][vvV | nnw | MwN] = 36;
      wWW[nWwWV][VwN | nnw | MwN] = 39;
      var nVn = [];
      nVn[0] = 0;
      nVn[wMw] = 3;
      nVn[mMN] = 4;
      nVn[WwW] = 2;
      nVn[nVN] = 1;
      nVn[wMw | WwW] = 17;
      nVn[wMw | mMN] = 5;
      nVn[wMw | nVN] = 18;
      nVn[mMN | WwW] = 16;
      nVn[mMN | nVN] = 19;
      nVn[WwW | nVN] = 6;
      nVn[wMw | WwW | nVN] = 10;
      nVn[wMw | WwW | mMN] = 9;
      nVn[nVN | WwW | mMN] = 11;
      nVn[wMw | nVN | mMN] = 8;
      nVn[wMw | WwW | mMN | nVN] = 7;
      nVn[nVN | mMN | WWw] = 12;
      nVn[nVN | wMw | Www] = 13;
      nVn[WwW | wMw | Mmn] = 14;
      nVn[WwW | mMN | mnw] = 15;
      nVn[WwW | nVN | mMN | WWw] = 20;
      nVn[WwW | nVN | mMN | wMw | WWw] = 21;
      nVn[wMw | nVN | mMN | WWw] = 22;
      nVn[WwW | nVN | mMN | wMw | mnw] = 23;
      nVn[wMw | WwW | mMN | mnw] = 24;
      nVn[WwW | nVN | mMN | mnw] = 25;
      nVn[WwW | nVN | wMw | Mmn] = 26;
      nVn[WwW | nVN | mMN | wMw | Mmn] = 27;
      nVn[WwW | mMN | wMw | Mmn] = 28;
      nVn[nVN | mMN | wMw | Www] = 29;
      nVn[WwW | nVN | mMN | wMw | Www] = 30;
      nVn[WwW | nVN | wMw | Www] = 31;
      nVn[WwW | nVN | mMN | wMw | Www | WWw | Mmn | mnw] = 32;
      nVn[WwW | nVN | mMN | wMw | Www | Mmn] = 33;
      nVn[WwW | nVN | mMN | wMw | Www | WWw] = 34;
      nVn[WwW | nVN | mMN | wMw | Www | mnw] = 35;
      nVn[WwW | nVN | mMN | wMw | WWw | Mmn] = 36;
      nVn[WwW | nVN | mMN | wMw | mnw | WWw] = 37;
      nVn[WwW | nVN | mMN | wMw | mnw | Mmn] = 38;
      nVn[WwW | nVN | mMN | mnw | WWw] = 39;
      nVn[WwW | nVN | wMw | Mmn | Www] = 40;
      nVn[mMN | nVN | wMw | WWw | Www] = 41;
      nVn[mMN | WwW | wMw | mnw | Mmn] = 42;
      nVn[WwW | nVN | mMN | wMw | Www | Mmn | mnw] = 43;
      nVn[WwW | nVN | mMN | wMw | WWw | Mmn | mnw] = 44;
      nVn[WwW | nVN | mMN | wMw | Www | WWw | mnw] = 45;
      nVn[WwW | nVN | mMN | wMw | Www | WWw | Mmn] = 46;
      var WVwWN = 0;
      var WWvVM = 1;
      var mnVmN = 2;
      var vvWNm = 600;
      var Wv;
      var mM;
      var WVV = 0;
      var NVM = 0;
      var vVn = 0;
      var Wnn = 0;
      var NvVVV = 0;
      var wnnnm = 0;
      var VwMnn = 0;
      var wNVMM = 0;
      var VNMnw = WvVvN;
      var nmmwN = 0;
      var mnMwn = 0;
      var VNmMN = [];
      for (Wv = 0; Wv < 20; Wv++) {
        VNmMN[Wv] = {
          n: 0
        };
      }
      var MnWMv = mnVmN;
      var mNVMM = [];
      var wNM = [];
      var nNnWv = VmwVv;
      var WVWVv = vnvvv;
      var VNvwv = VmwVv * wVw;
      var nWwNM = vnvvv * wVw;
      var nVVMm = [];
      var mNVwm = {
        n: 0
      };
      var vWvnN = {
        n: 0
      };
      var vmv = {
        VN: 0,
        MNV: 0,
        src: WmnWn,
        m: {
          n: 0
        }
      };
      var VVW = {
        VN: 0,
        MNV: 0,
        src: WvnWN,
        m: {
          n: 0
        }
      };
      var wVmvn = {
        src: MVVww,
        m: {
          n: 0
        }
      };
      var WvnnW = {
        src: MvWMN,
        m: {
          n: 0
        }
      };
      var NVMnV = {
        src: vWnmn,
        m: {
          n: 0
        }
      };
      var mMMWM = 0;
      var nNwNn = {
        src: mwwVW,
        m: {
          n: 0
        }
      };
      var vMWWW = 0;
      var vWmmn = {
        src: "img/e-furniture.png",
        m: {
          n: 0
        }
      };
      var nWvnv = MW.Mvw("img/toxic-area2.png");
      var mVVnv = MW.Mvw("img/toxic-area3.png");
      var NWvvn = [];
      var MNm = [];
      var NvVMV = {
        n: 0
      };
      var VmWmW = {
        n: 0
      };
      var nmVVN = {
        n: 0
      };
      var Vwwwm = {
        n: 0
      };
      var MMnvv = [0, 0, 0, 0];
      var MVvwN = mmmNv;
      var WmVNM = [];
      var MVnMV = 0;
      var NWMNN = {
        n: 0
      };
      var vmvWw = {
        n: 0
      };
      var NmwNm = {
        n: 0
      };
      var mvWWM = nwVVW;
      var NwvnW = {
        n: 0
      };
      var wWVnN = {
        n: 0
      };
      var mMvvM = {
        src: nmwnv,
        m: {
          n: 0
        }
      };
      var WNVnn = 0;
      var MmnvM = {
        src: mwvnW,
        m: {
          n: 0
        }
      };
      var vVnWW = {
        src: mMwMN,
        m: {
          n: 0
        }
      };
      var mMnnw = 12000;
      var nNWMW = 12000;
      var NmmvV = [];
      for (Wv = 0; Wv < 10; Wv++) {
        NmmvV[Wv] = [];
        for (mM = 0; mM < 3; mM++) {
          NmmvV[Wv][mM] = {
            n: 0
          };
        }
      }
      ;
      var MNV = [];
      for (Wv = 0; Wv < 8; Wv++) {
        MNV[Wv] = [];
        for (mM = 0; mM < 2; mM++) {
          MNV[Wv][mM] = {
            n: 0
          };
        }
      }
      var MwNWn = {
        src: nmwvm,
        m: {
          n: 0
        }
      };
      var Wmnmv = {
        src: WMmmm,
        m: {
          n: 0
        }
      };
      var vwM = {
        n: 0
      };
      var WmnmN = {
        src: MwVnw,
        m: {
          n: 0
        }
      };
      var mmNWn = {
        src: vWVww,
        m: {
          n: 0
        }
      };
      var WNVvV = {
        src: mMwVm,
        m: {
          n: 0
        }
      };
      var MwVNw = {
        src: wVNNW,
        m: {
          n: 0
        }
      };
      var NmwMV = {
        src: wwnVm,
        m: {
          n: 0
        }
      };
      var WMNmw = {
        src: VNvMN,
        m: {
          n: 0
        }
      };
      var WWmWw = {
        src: NnnWn,
        m: {
          n: 0
        }
      };
      var WnVvw = {
        src: VNnMv,
        m: {
          n: 0
        }
      };
      var VnWVN = {
        src: wNVWm,
        m: {
          n: 0
        }
      };
      var VMmnw = {
        src: mvVnW,
        m: {
          n: 0
        }
      };
      var MWWWV = {
        src: wnnNM,
        m: {
          n: 0
        }
      };
      var VnNvW = {
        n: 0
      };
      var wvMNm = [];
      for (Wv = 0; Wv < 20; Wv++) {
        wvMNm[VM[154]]({
          n: 0
        });
      }
      var MMW = document[VM[230]]("canvas");
      var nwmmv = MMW[VM[106]]("2d");
      MMW[VM[255]] = wWV;
      MMW[VM[104]] = vWmVm;
      MMW.n = 1;
      MMW.mvN = MMW[VM[255]] / 2;
      MMW.wmm = MMW[VM[104]] / 2;
      var VmVvv = {
        m: MMW
      };
      var MMWvn = document[VM[230]]("canvas");
      var NVmwv = MMWvn[VM[106]]("2d");
      MMWvn[VM[255]] = wWV;
      MMWvn[VM[104]] = vWmVm;
      MMWvn.n = 1;
      MMWvn.mvN = MMW[VM[255]] / 2;
      MMWvn.wmm = MMW[VM[104]] / 2;
      var nWVmw = {
        m: MMWvn
      };
      var NNwVM = 0;
      function mMvnm() {
        if (Mv.nW.MNmNw === 8) {
          nwmmv[VM[48]](0, 0, wWV, vWmVm);
          NVmwv[VM[48]](0, 0, wWV, vWmVm);
          for (var Wv = 0; Wv < 8; Wv++) {
            for (var mM = 0; mM < 8; mM++) {
              var MNWmn = Mv.nW.mNMNw[Wv][mM];
              if (MNWmn === 7) {
                nwmmv[VM[134]](nWvnv, 2 + mM * NvVMw, Wv * NvVMw + 1, nWvnv.mvN, nWvnv.wmm);
              } else {
                nwmmv[VM[134]](mVVnv, 2 + mM * NvVMw, Wv * NvVMw + 1, nWvnv.mvN, nWvnv.wmm);
              }
            }
          }
        } else {
          nwmmv[VM[134]](MMWvn, 0, 0);
          NVmwv[VM[48]](0, 0, wWV, vWmVm);
          for (var MMn = 0; MMn < 12; MMn++) {
            var vVW = Mv.nW.vNNVM[MMn];
            var Wv = vVW[0];
            var mM = vVW[1];
            if (Wv === -1) {
              continue;
            }
            NVmwv[VM[134]](nWvnv, 2 + mM * NvVMw, Wv * NvVMw + 1, nWvnv.mvN, nWvnv.wmm);
          }
        }
        ;
      }
      ;
      ;
      var nmvwM = document[VM[230]]("canvas");
      var nnVvV = nmvwM[VM[106]]("2d");
      nmvwM[VM[255]] = mwVnn;
      nmvwM[VM[104]] = Mnvmw;
      vmnVW = [];
      for (var Wv = 0; Wv < 9; Wv++) {
        vmnVW[Wv] = 0;
      }
      var vWW = 0;
      for (Wv = 0; Wv < vnvvv; Wv++) {
        mNVMM[Wv] = [];
        for (var mM = 0; mM < VmwVv; mM++) {
          mNVMM[Wv][mM] = 0;
        }
      }
      var NVmmw = document[VM[230]]("canvas");
      var VvmmV = NVmmw[VM[106]]("2d");
      NVmmw[VM[255]] = 280;
      NVmmw[VM[104]] = 148;
      var mmwWM = -1;
      var nMnWn = [];
      var vVNNv = [];
      var mNv = document[VM[230]]("canvas");
      var MMmVn = mNv[VM[106]]("2d");
      mNv[VM[255]] = 280;
      mNv[VM[104]] = 50;
      var wvmWv = -1;
      var WNmWV = document[VM[230]]("canvas");
      var Mwvnn = WNmWV[VM[106]]("2d");
      WNmWV[VM[255]] = 420;
      WNmWV[VM[104]] = 148;
      var NMwWW = -1;
      function MMwwm() {
        this.MmW = 0;
        this.nwMNV = 0;
        this.wWnmn = 0;
        this.wWN = 0;
        this.vWV = 0;
        this.vWW = 0;
        this.vWvVm = 0;
        this.nMV = 0;
        this.mWw = 0;
        this.Mnv = 0;
        this.Wv = 0;
        this[VM[141]] = [];
        this[VM[129]] = 0;
        for (var Wv = 0; Wv < 3; Wv++) {
          this[VM[141]][VM[154]]({
            type: 0,
            Wmn: 0
          });
        }
      }
      ;
      ;
      function wnVmW(Mm, Wn) {
        if (Mm.MvW > 0 || Mm.mNM !== 0) {
          return 0;
        }
        var Wv = Mm.Wv;
        var mM = Mm.mM;
        var vv = Mm.MNM >> 7;
        var MV = 0;
        switch (Wn) {
          case 0:
            if (Wv + 1 < Vvw) {
              var Nmv = wNM[Wv + 1][mM];
              if (Nmv.MmW === vWW && Nmv.vWV === vv) {
                if (Nmv[VM[129]] === 1) {
                  MV += vvV;
                } else if (Nmv[VM[129]] === 3) {
                  MV += VwN;
                }
              }
            }
            if (mM - 1 >= 0) {
              var Nmv = wNM[Wv][mM - 1];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 3 || Nmv[VM[129]] === 0)) {
                MV += nnw;
              }
            }
            if (mM + 1 < vvv) {
              var Nmv = wNM[Wv][mM + 1];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 1 || Nmv[VM[129]] === 0)) {
                MV += MwN;
              }
            }
            break;
          case 1:
            if (mM - 1 >= 0) {
              var Nmv = wNM[Wv][mM - 1];
              if (Nmv.MmW === vWW && Nmv.vWV === vv) {
                if (Nmv[VM[129]] === 0) {
                  MV += VwN;
                } else if (Nmv[VM[129]] === 2) {
                  MV += vvV;
                }
              }
            }
            if (Wv - 1 >= 0) {
              var Nmv = wNM[Wv - 1][mM];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 0 || Nmv[VM[129]] === 1)) {
                MV += nnw;
              }
            }
            if (Wv + 1 < Vvw) {
              var Nmv = wNM[Wv + 1][mM];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 2 || Nmv[VM[129]] === 1)) {
                MV += MwN;
              }
            }
            break;
          case 2:
            if (Wv - 1 >= 0) {
              var Nmv = wNM[Wv - 1][mM];
              if (Nmv.MmW === vWW && Nmv.vWV === vv) {
                if (Nmv[VM[129]] === 1) {
                  MV += VwN;
                } else if (Nmv[VM[129]] === 3) {
                  MV += vvV;
                }
              }
            }
            if (mM - 1 >= 0) {
              var Nmv = wNM[Wv][mM - 1];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 3 || Nmv[VM[129]] === 2)) {
                MV += MwN;
              }
            }
            if (mM + 1 < vvv) {
              var Nmv = wNM[Wv][mM + 1];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 1 || Nmv[VM[129]] === 2)) {
                MV += nnw;
              }
            }
            break;
          case 3:
            if (mM + 1 < vvv) {
              var Nmv = wNM[Wv][mM + 1];
              if (Nmv.MmW === vWW && Nmv.vWV === vv) {
                if (Nmv[VM[129]] === 0) {
                  MV += vvV;
                } else if (Nmv[VM[129]] === 2) {
                  MV += VwN;
                }
              }
            }
            if (Wv - 1 >= 0) {
              var Nmv = wNM[Wv - 1][mM];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 0 || Nmv[VM[129]] === 3)) {
                MV += MwN;
              }
            }
            if (Wv + 1 < Vvw) {
              var Nmv = wNM[Wv + 1][mM];
              if (Nmv.MmW === vWW && Nmv.vWV === vv && (Nmv[VM[129]] === 2 || Nmv[VM[129]] === 3)) {
                MV += nnw;
              }
            }
            break;
        }
        return wWW[Wn][MV];
      }
      ;
      ;
      function mmMMv(Mm) {
        if (Mm.MvW > 0 || Mm.mNM !== 0) {
          return 0;
        }
        var Wv = Mm.Wv;
        var mM = Mm.mM;
        var vv = Mm.MNM >> 7;
        var MV = 0;
        var W = 0;
        var NWM = 0;
        var N = 0;
        var vWvmn = 0;
        if (Wv - 1 >= 0) {
          var Nmv = wNM[Wv - 1][mM];
          if (Nmv.nwMNV === vWW) {
            NWM = 1;
            MV += WwW;
          }
        }
        if (Wv + 1 < Vvw) {
          var Nmv = wNM[Wv + 1][mM];
          if (Nmv.nwMNV === vWW) {
            MV += nVN;
            N = 1;
          }
        }
        if (mM - 1 >= 0) {
          var Nmv = wNM[Wv][mM - 1];
          if (Nmv.nwMNV === vWW) {
            MV += wMw;
            vWvmn = 1;
          }
        }
        if (mM + 1 < vvv) {
          var Nmv = wNM[Wv][mM + 1];
          if (Nmv.nwMNV === vWW) {
            MV += mMN;
            W = 1;
          }
        }
        if (W + NWM === 2) {
          var Nmv = wNM[Wv - 1][mM + 1];
          if (Nmv.nwMNV === vWW) {
            MV += mnw;
          }
        }
        if (vWvmn + NWM === 2) {
          var Nmv = wNM[Wv - 1][mM - 1];
          if (Nmv.nwMNV === vWW) {
            MV += Mmn;
          }
        }
        if (N + W === 2) {
          var Nmv = wNM[Wv + 1][mM + 1];
          if (Nmv.nwMNV === vWW) {
            MV += WWw;
          }
        }
        if (N + vWvmn === 2) {
          var Nmv = wNM[Wv + 1][mM - 1];
          if (Nmv.nwMNV === vWW) {
            MV += Www;
          }
        }
        return nVn[MV];
      }
      ;
      ;
      function nmwwn(Mm) {
        if (Mm.MvW > 0 || Mm.mNM !== 0) {
          return 0;
        }
        var Wv = Mm.Wv;
        var mM = Mm.mM;
        var vWV = wWw[Mm.MNM >> 7];
        var vv = vWV.mwmVn;
        var MV = 0;
        var W = 0;
        var NWM = 0;
        var N = 0;
        var vWvmn = 0;
        if (Wv - 1 >= 0) {
          var Nmv = wNM[Wv - 1][mM];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            NWM = 1;
            MV += WwW;
          }
        }
        if (Wv + 1 < Vvw) {
          var Nmv = wNM[Wv + 1][mM];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += nVN;
            N = 1;
          }
        }
        if (mM - 1 >= 0) {
          var Nmv = wNM[Wv][mM - 1];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += wMw;
            vWvmn = 1;
          }
        }
        if (mM + 1 < vvv) {
          var Nmv = wNM[Wv][mM + 1];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += mMN;
            W = 1;
          }
        }
        if (W + NWM === 2) {
          var Nmv = wNM[Wv - 1][mM + 1];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += mnw;
          }
        }
        if (vWvmn + NWM === 2) {
          var Nmv = wNM[Wv - 1][mM - 1];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += Mmn;
          }
        }
        if (N + W === 2) {
          var Nmv = wNM[Wv + 1][mM + 1];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += WWw;
          }
        }
        if (N + vWvmn === 2) {
          var Nmv = wNM[Wv + 1][mM - 1];
          if (Nmv.MmW === vWW && Nmv.vWV === vv) {
            MV += Www;
          }
        }
        var MV = nVn[MV];
        wNM[Wv][mM].wWnmn = vWV.wWnmn[MV];
        return MV;
      }
      ;
      ;
      function WmVmm(Mm) {
        var vv = Mm.MNM >> 7;
        if (wWw[vv].MwM !== 1 || Mm.MvW > 0 || Mm.WnN > 0) {
          return;
        }
        var Nmv = wNM[Mm.Wv][Mm.mM];
        Nmv.MmW = vWW;
        Nmv.vWV = vv;
        Nmv[VM[129]] = Mm.MNM >> 5 & 3;
      }
      ;
      ;
      function WmWMv(Mm) {
        var vv = Mm.MNM >> 7;
        if (wWw[vv].vWV !== 1 || Mm.MvW > 0 || Mm.WnN > 0) {
          return;
        }
        var Nmv = wNM[Mm.Wv][Mm.mM];
        Nmv.MmW = vWW;
        Nmv.vWV = wWw[vv].mwmVn;
        if (Mv.nW.mvm === Mm.mM) {
          var nMW = Math[VM[144]](1, Math[VM[0]](Mv.nW.vNw - Mm.Wv));
          if (Mv.nW.vNw < Mm.Wv) {
            MMnvv[0] = MVvwN / nMW;
          } else {
            MMnvv[1] = MVvwN / nMW;
          }
        } else if (Mv.nW.vNw === Mm.Wv) {
          var nMW = Math[VM[144]](1, Math[VM[0]](Mv.nW.mvm - Mm.mM));
          if (Mv.nW.mvm < Mm.mM) {
            MMnvv[2] = MVvwN / nMW;
          } else {
            MMnvv[3] = MVvwN / nMW;
          }
        }
      }
      ;
      ;
      function mWMVM(Mm) {
        var vv = Mm.MNM >> 7;
        if (wWw[vv].vWV !== 1 || Mm.MvW > 0 || Mm.WnN > 0) {
          return;
        }
        var Nmv = wNM[Mm.Wv][Mm.mM];
        Nmv.nwMNV = vWW;
      }
      ;
      ;
      function mnWwm(Mm, Wmn) {
        var Wv = Mm.Wv;
        var mM = Mm.mM;
        var Nmv = wNM[Wv][mM];
        if (Nmv.vWW === vWW) {
          if (Nmv.Wv < 3) {
            var N = Nmv[VM[141]][Nmv.Wv];
            Nmv.Wv += 1;
            N[VM[60]] = Mm[VM[60]];
            N.Wmn = Wmn;
          }
        } else {
          Nmv.vWW = vWW;
          var N = Nmv[VM[141]][0];
          Nmv.Wv = 1;
          N[VM[60]] = Mm[VM[60]];
          N.Wmn = Wmn;
        }
      }
      ;
      ;
      function mVWVW(WVvnW, NnWWV, WNNNm) {
        wMmWm = document[VM[57]]("bod")[VM[81]];
        if (Mv.vNn === Mv.NwvNm) {
          nwmmv[VM[48]](0, 0, wWV, wWV);
          NVmwv[VM[48]](0, 0, wWV, wWV);
          mMMWM = 0;
        }
        vMWWW = 0;
        Vw.NmMmM = 0;
        Vw.mVvMn = 0;
        if (WVvnW !== undefined) {
          mvWWM = 0;
        } else {
          mvWWM = nwVVW;
        }
        if (WNNNm !== undefined) {
          VNMnw = WNNNm;
        } else {
          VNMnw = WvVvN;
        }
        if (NnWWV !== undefined) {
          MVvwN = NnWWV;
        } else {
          MVvwN = mmmNv;
        }
        vVn = 0;
        Wnn = 0;
        Mv.nW[VM[232]] = 0;
        Mv.nW[VM[249]] = 0;
        Mv.nW.vNw = 0;
        Mv.nW.mvm = 0;
        vmv.MNV = 0;
        vmv.VN = 0;
        VVW.MNV = 0;
        VVW.VN = 0;
        mVWWN[VM[5]] = -1;
        mVWWN.MWV = -1;
        var Ww = vmn[VM[174]]("particles");
        if (Ww !== null) {
          MnWMv = Number(Ww);
        }
        nwM = "";
        nwvvw = null;
        wmW[VM[255]] = 150;
        wmW[VM[104]] = 150;
        Vw.wVWmW = wmW[VM[255]] * 100 / 255;
        vvv = wmW[VM[255]];
        Vvw = wmW[VM[104]];
        wmNVv = wVw * vvv;
        MVwwv = wVw * Vvw;
        mnwnw = 824 / wmNVv;
        VNnwm = 824 - vmnvW;
        wNwNW = VNnwm + VwM;
        nVNmw = wmNVv / 8;
        Mv.VVVVn(vvv, Vvw);
        for (var Wv = 0; Wv < Vvw; Wv++) {
          wNM[Wv] = [];
          for (var mM = 0; mM < vvv; mM++) {
            wNM[Wv][mM] = new MMwwm();
          }
        }
        var MwV = nNV.wVN[0][VM[126]];
        for (Wv = 0; Wv < MwV; Wv++) {
          WmVNM[Wv] = null;
        }
      }
      ;
      ;
      function WMmWm(Nv, mv, nN, wn, NMn, MMN) {
        Nv.mm[VM[232]] = nN;
        Nv.mm[VM[249]] = wn;
        Nv.Mw();
        var mV = wWw[mv[0]];
        var WM = mv[1];
        if (WM > 1) {
          if (NMn[WM] === undefined) {
            NMn[WM] = {
              m: NM.mMm("x" + WM, "'Black Han Sans', sans-serif", "#ffffff", 30, 250, undefined, 15, 12, undefined, undefined, undefined, undefined, "#000000", 12)
            };
            NMn[WM].m.n = 1;
          }
          MW.NN(NMn[WM], nN / vW + 53, wn / vW + 55, -0.5, 0, 0, 1);
        }
        if (mV.vvM !== undefined && mV.wNNnV === undefined) {
          var WM = mv[3];
          if (MMN[WM] === undefined) {
            MMN[WM] = {
              m: NM.mMm("x" + WM, "'Black Han Sans', sans-serif", "#FFFF00", 30, 250, undefined, 15, 12, undefined, undefined, undefined, undefined, "#000000", 12)
            };
            MMN[WM].m.n = 1;
          }
          MW.NN(MMN[WM], nN / vW + 53, wn / vW + 55, -0.5, 0, 0, 1);
        }
        if (mV.VwNmw !== undefined) {
          var WNVNw = Math[VM[61]](mv[3] / 12.8);
          var m = wvMNm[WNVNw];
          if (m.n !== 1) {
            wvMNm[WNVNw] = MW.Mvw("img/rotten" + WNVNw + ".png", m);
          } else {
            WV[VM[134]](m, nN + vW * 0.5, wn, vW * m[VM[255]] / 2, vW * m[VM[104]] / 2);
          }
        }
      }
      ;
      ;
      function VNWMN(MV, nN, wn) {
        if (nMnWn[MV] === undefined) {
          nMnWn[MV] = document[VM[230]]("canvas");
          vVNNv[MV] = nMnWn[MV][VM[106]]("2d");
          var mNNnW = nMnWn[MV];
          var Nvwnv = vVNNv[MV];
          mNNnW[VM[255]] = 400;
          mNNnW[VM[104]] = 148;
          Nvwnv[VM[48]](0, 0, 400, 148);
          MW.WVvmM(Nvwnv, 0, 0, 400, 148, 10);
          Nvwnv[VM[210]] = "#000000";
          Nvwnv[VM[149]] = 0.5;
          Nvwnv[VM[145]]();
          Nvwnv[VM[149]] = 1;
          MnNWV(vVNNv[MV], MV);
        }
        var ww = vW * 74;
        WV[VM[134]](nMnWn[MV], nN, wn, vW * 190, ww);
      }
      ;
      ;
      function WwVMW(NMn, MMN, wmV, mwW) {
        if (Mv.nW.NNn !== 0) {
          return;
        }
        var vwv = VNw.vwv;
        if (mNVwm.n !== 1) {
          mNVwm = MW.Mvw(WmnNn, mNVwm);
          return;
        }
        var mv = Mv.nW.vwv;
        var MwV = mv[VM[126]];
        var MN = mNVwm[VM[255]] * vW / 2;
        var ww = mNVwm[VM[104]] * vW / 2;
        var Vnm = Math[VM[144]](vW * 300, (MVM - MN * MwV) / 2);
        var vNV = Vnv - ww - vW * 5;
        var nN = Vnm;
        var wn = vNV;
        var NWm = vW * 5 + MN;
        if (MwV > 10) {
          mwW.mm[VM[232]] = MVM - vW * 69;
          mwW.mm[VM[249]] = Vnv - vW * 68;
          mwW.Mw();
          if (mwW[VM[64]] === 0) {
            MwV = 10;
          }
        }
        for (var Wv = 0; Wv < MwV; Wv++) {
          var Nv = vwv[Wv];
          if (mv[Wv][0] === 0) {
            Nv.mm[VM[232]] = nN;
            Nv.mm[VM[249]] = wn;
            WV[VM[134]](mNVwm, nN, wn, MN, ww);
          } else {
            WMmWm(Nv, mv[Wv], nN, wn, NMn, MMN);
          }
          if (Wv === 9) {
            nN = mwW.mm[VM[232]] - vW * 5;
            wn = mwW.mm[VM[249]] - NWm;
          } else if (Wv === 12) {
            nN -= NWm;
            wn = mwW.mm[VM[249]] - NWm;
          } else if (Wv > 9) {
            wn -= NWm;
          } else {
            nN += NWm;
          }
        }
        var vMV = Mv.nW.vMV;
        if (vMV.nMw === 1 && mvv[VM[102]] === mvv.nvmmV && vVV.nMW(vMV[VM[232]], vMV[VM[249]], mvv[VM[232]], mvv[VM[249]]) > vW * 4) {
          var mV = mv[vMV[VM[5]]][0];
          if (mV > 0) {
            var m = wWw[mV].nm.m[0];
            if (m.n === 0) {
              m = mmvnw[mV].nm.m[0];
            }
            WV[VM[149]] = 0.7;
            var MN = vW * 68;
            WV[VM[134]](m, mvv[VM[232]] * vW - MN / 2, mvv[VM[249]] * vW - MN / 2, MN, MN);
            WV[VM[149]] = 1;
          }
        } else if (wmV !== -1 && mv[wmV][0] !== 0) {
          if (wmV < 10) {
            VNWMN(mv[wmV][0], Vnm + NWm * wmV, vNV - vW * 79);
          } else if (wmV < 13) {
            VNWMN(mv[wmV][0], mwW.mm[VM[232]] - vW * 200, mwW.mm[VM[249]] + NWm * (-1 + (10 - wmV) % 3));
          } else {
            VNWMN(mv[wmV][0], mwW.mm[VM[232]] - vW * 200 - NWm, mwW.mm[VM[249]] + NWm * (-1 + (10 - wmV) % 3));
          }
        }
      }
      ;
      ;
      function MWvnm(nN, wn) {
        var mvW = Mv.nW[VM[112]];
        if (nVVMm[mvW] === undefined) {
          nVVMm[mvW] = {
            m: NM.mMm("" + mvW, "'Black Han Sans', sans-serif", "#ffffff", 44, 250, undefined, 18, 15, undefined, undefined, undefined, undefined, "#000000", 15)
          };
          nVVMm[mvW].m.n = 1;
        }
        MW.NN(nVVMm[mvW], nN / vW + 234, wn / vW + 79, 0, 0, 0, 1);
        var wNn = Mv.wnN.wNn;
        var Ww = 1 - wNn.nmV / wNn.WWV;
        MW.NN(WWmWw, 38 + nN / vW, 37 + wn / vW, Math[VM[99]] * Ww, 0, 0, 1);
      }
      ;
      ;
      function wMMnM(nN, wn) {
        var WW = Mv.wnN.WW;
        var Ww = WW.nmV / WW.WWV;
        MW[VM[84]](WV, nN / vW + 14, wn / vW + 71, Ww * 189, 16, vVnWm);
        var NwN = Mv.wnN.NwN;
        var Ww = NwN.nmV / NwN.WWV;
        MW[VM[84]](WV, nN / vW + 13, wn / vW + 162, 54, -Ww * 63, nNvNw);
        var NMv = Mv.wnN.NMv;
        var Ww = NMv.nmV / NMv.WWV;
        MW[VM[84]](WV, nN / vW + 81, wn / vW + 162, 54, -Ww * 63, nnMWN);
        var VNW = Mv.wnN.VNW;
        var Ww = VNW.nmV / VNW.WWV;
        MW[VM[84]](WV, nN / vW + 150, wn / vW + 162, 54, -Ww * 63, VWVVv);
        var VWv = Mv.wnN.VWv;
        var Ww = VWv.nmV / VWv.WWV;
        MW[VM[84]](WV, nN / vW + 226, wn / vW + 172, 16, -Ww * 77, MnVMW);
        var WNVVn = Mv.vVvmV();
        var m;
        var NNNmN;
        if (WNVVn >= 10000000) {
          if (WNVvV.n !== 1) {
            WNVvV = MW.Mvw(mMwVm, WNVvV);
            return;
          }
          WNVVn -= 10000000;
          m = WNVvV;
          NNNmN = NmwMV;
        } else {
          if (MwVNw.n !== 1) {
            MwVNw = MW.Mvw(wVNNW, MwVNw);
            return;
          }
          m = MwVNw;
          NNNmN = WMNmw;
        }
        var MN = vW * m[VM[255]] / 2;
        var ww = vW * m[VM[104]] / 2;
        WV[VM[134]](m, nN + vW * 100, wn + vW * 14, MN, ww);
        MW.NN(NNNmN, 144.5 + nN / vW, wn / vW + 56, WNVVn * NvMmv, 0, 0, 1);
      }
      ;
      ;
      function NWnvV(nN, wn) {
        var NvM = Mv.NvM;
        var wwW = Mv.wwW;
        var nwvVW = -1;
        if (Mv.wmWwW === 1) {
          nwvVW = 1;
          Mv.wmWwW = 0;
          nnVvV[VM[48]](0, 0, mwVnn, Mnvmw);
          for (var Wv = 0; Wv < NvM[VM[126]] && NvM[Wv] !== 0; Wv++) {
            var nW = wwW[NvM[Wv]];
            if (Mv.nW[VM[5]] === NvM[Wv]) {
              nwvVW = 0;
            }
            if (nW.MWn === 0) {
              break;
            }
            if (nW.MwMMW === null) {
              if (nW[VM[5]] === Mv.nW[VM[5]]) {
                nW.MwMMW = NM.mMm(nW.MWn, "'Viga', sans-serif", "#D6C823", 40, 350, undefined, 0, 12);
              } else {
                nW.MwMMW = NM.mMm(nW.MWn, "'Viga', sans-serif", "#ffffff", 40, 350, undefined, 0, 12);
              }
            }
            if (nW.vnW === null) {
              if (nW[VM[5]] === Mv.nW[VM[5]]) {
                nW.vnW = NM.mMm(nW.wVNnn, "'Viga', sans-serif", "#D6C823", 40, 150, undefined, 5, 12);
              } else {
                nW.vnW = NM.mMm(nW.wVNnn, "'Viga', sans-serif", "#ffffff", 40, 150, undefined, 5, 12);
              }
            }
            if (nW.MwMMW[VM[255]] !== 0 && nW.MwMMW[VM[104]] !== 0) {
              nnVvV[VM[134]](nW.MwMMW, 90, 114 + Wv * 50, nW.MwMMW[VM[255]], nW.MwMMW[VM[104]]);
            }
            nnVvV[VM[134]](nW.vnW, 484, 114 + Wv * 50, nW.vnW[VM[255]], nW.vnW[VM[104]]);
            var m = nwWvn[nW.nWwvN].m;
            if (m.n === 1) {
              nnVvV[VM[134]](m, 612, 114 + Wv * 50, m[VM[255]], m[VM[104]]);
            }
          }
          Mv.nW.VVMMV = nwvVW;
          if (nwvVW === 1) {
            var m = nwWvn[Mv.nW.nWwvN].m;
            if (m.n === 1) {
              nnVvV[VM[134]](m, 375, 645, m[VM[255]] * 1.5, m[VM[104]] * 1.5);
            }
          }
        }
        var vV = Mv.nW.vV;
        if (nwvVW === 1 || Mv.nW.VVMMV === 1 && vV !== Mv.nW.NMMnw) {
          var nW = wwW[Mv.nW[VM[5]]];
          nnVvV[VM[48]](480, 657, 112, 60);
          if (vV !== Mv.nW.NMMnw) {
            Mv.nW.NMMnw = vV;
            nW.vnW = NM.mMm(wMM.vWwwM(vV), "'Viga', sans-serif", "#ffffff", 40, 150, undefined, 5, 12);
          }
          nnVvV[VM[134]](nW.vnW, 484, 662, nW.vnW[VM[255]], nW.vnW[VM[104]]);
        }
        WV[VM[134]](nmvwM, nN, wn, mwVnn / 3 * vW, Mnvmw / 3 * vW);
      }
      ;
      ;
      function wWNNw(NnNww, WNw) {
        var MN = wWV * vW;
        var ww = vWmVm * vW;
        var nN = mVV - MN / 2;
        var wn = Math[VM[144]](nnW - ww / 2, 0);
        var mnV = nN / vW;
        var NwV = wn / vW;
        var MvMNW = wWV / wmNVv;
        var NWwnN = vWmVm / MVwwv;
        WNw.mm[VM[232]] = Math[VM[61]](nN + MN + vW * 0);
        WNw.mm[VM[249]] = Math[VM[61]](wn + vW * 0);
        NnNww.Mw();
        var vvNVw = Mv.nW.vvNVw;
        var MwV = vvNVw[VM[126]] / 2;
        if (MwV > 0) {
          vNV = Math[VM[61]](wn / vW + Math[VM[241]](Math[VM[144]](10, vvNVw[0] * NWwnN), 400));
          Vnm = Math[VM[61]](nN / vW + Math[VM[241]](Math[VM[144]](10, vvNVw[1] * MvMNW), 400));
          MW.NN(mmNWn, Vnm, vNV, 0, 0, 0, 1);
          for (var Wv = 1; Wv < MwV; Wv++) {
            vNV = Math[VM[61]](wn / vW + Math[VM[241]](Math[VM[144]](10, vvNVw[Wv * 2] * NWwnN), 400));
            Vnm = Math[VM[61]](nN / vW + Math[VM[241]](Math[VM[144]](10, vvNVw[1 + Wv * 2] * MvMNW), 400));
            MW.NN(WmnmN, Vnm, vNV, 0, 0, 0, 1);
          }
        }
        if (Mv.vNn === Mv.NwvNm) {
          var nNMmM = mnV + wWV / 2;
          var vNWvw = NwV + vWmVm / 2;
          MW.NN(VmVvv, nNMmM, vNWvw, 0, 0, 0, 2);
          WV[VM[149]] = NNwVM > 600 ? wMM.vNv.wvN((1200 - NNwVM) / 600) : wMM.vNv.wvN(NNwVM / 600);
          MW.NN(nWVmw, nNMmM, vNWvw, 0, 0, 0, 2);
          WV[VM[149]] = 1;
        }
        WNw.Mw();
        if (Mv.nW.nvW !== -1 || Mv.nW.NNn !== 0 && Mv.MNm < 6) {
          var wwW = nNV.wVN[wWm];
          for (var Wv = 0; Wv < Mv.nW.mVNNm; Wv++) {
            var MNwNM = Mv.nW.VwMVW[Wv];
            if (MNwNM.mmVnm < 0) {
              continue;
            }
            var nW = Mv.wwW[MNwNM[VM[5]]];
            var Vnm = Math[VM[61]](mnV + Math[VM[241]](Math[VM[144]](10, nW[VM[150]] * MvMNW), 400));
            var vNV = Math[VM[61]](NwV + Math[VM[241]](Math[VM[144]](10, nW[VM[169]] * MvMNW), 400));
            var VW;
            if (vWW === nW.vWW + 1) {
              VW = wwW[nW.NnvVn][VM[246]];
            } else {
              VW = nW[VM[232]] % WwNwv;
            }
            MW.NN(Wmnmv, Vnm, vNV, VW, 0, 0, 1);
          }
        }
        var Vnm = Math[VM[61]](nN / vW + Math[VM[241]](Math[VM[144]](10, vVn * MvMNW), 400));
        var vNV = Math[VM[61]](wn / vW + Math[VM[241]](Math[VM[144]](10, Wnn * NWwnN), 400));
        MW.NN(MwNWn, Vnm, vNV, mvv[VM[246]], 0, 0, 1);
        if (Mv.nW.nwWMn > 0) {
          var nW = Mv.wwW[Mv.nW.nwNww];
          MW.NN(nwWvn[nW.nWwvN], Math[VM[61]](mnV + Math[VM[241]](Math[VM[144]](10, nW[VM[150]] * MvMNW), 400)), Math[VM[61]](NwV + Math[VM[241]](Math[VM[144]](10, nW[VM[169]] * MvMNW), 400)), 0, 0, 0, 1.25);
        }
      }
      ;
      ;
      function Nvnnv() {
        if (vNm.nMVnm > 0) {
          if (vNm.nMVnm > 2500) {
            WV[VM[149]] = wMM.vNv.wvN((3000 - vNm.nMVnm) / 500);
          } else if (vNm.nMVnm > 500) {
            WV[VM[149]] = 1;
          } else {
            WV[VM[149]] = wMM.vNv.wvN(vNm.nMVnm / 500);
          }
          if (vNm.vWmMV === 0) {
            MW.NN(VMmnw, nWN, VMmnw.m.wmm / 2, 0, 0, 0, 1);
          } else if (vNm.vWmMV === 1) {
            MW.NN(VnWVN, nWN, VnWVN.m.wmm / 2, 0, 0, 0, 1);
          } else if (vNm.vWmMV === 2) {
            MW.NN(WnVvw, nWN, WnVvw.m.wmm / 2, 0, 0, 0, 1);
          } else if (vNm.vWmMV === 3) {
            MW.NN(MWWWV, nWN, MWWWV.m.wmm / 2, 0, 0, 0, 1);
          }
          WV[VM[149]] = 1;
          vNm.nMVnm -= nv;
        }
      }
      ;
      ;
      function mVvwN(nN, wn) {
        if (VnNvW.n !== 1) {
          VnNvW = MW.Mvw(vWvmW, VnNvW);
          return;
        }
        VNw.NnWvv.mm[VM[232]] = nN + vW * 241;
        VNw.NnWvv.mm[VM[249]] = wn + vW * 6;
        VNw.nWnvV.mm[VM[232]] = nN + vW * 290;
        VNw.nWnvV.mm[VM[249]] = wn + vW * 6;
        if (Mv.nW.nWv !== 0 || Mv.nW.mnnvm > 0) {
          if (Mv.nW.nWv !== 0) {
            if (Mv.nW.mnnvm < 333) {
              WV[VM[149]] = Mv.nW.mnnvm / 333;
              Mv.nW.mnnvm += nv;
            }
          } else {
            WV[VM[149]] = Mv.nW.mnnvm / 333;
            Mv.nW.mnnvm = Math[VM[144]](0, Mv.nW.mnnvm - nv);
          }
          var nW = Mv.wwW[Mv.nW.nWv];
          if (nW.vMN === null) {
            nW.vMN = NM.mMm(nW.MWn, "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
          }
          WV[VM[134]](VnNvW, nN, wn, vW * VnNvW.mvN, vW * VnNvW.wmm);
          if (nW.vMN[VM[255]] !== 0 && nW.vMN[VM[104]] !== 0) {
            WV[VM[134]](nW.vMN, nN + vW * 20, wn + vW * 6, nW.vMN.mvN * vW, nW.vMN.wmm * vW);
          }
          VNw.NnWvv.Mw();
          VNw.nWnvV.Mw();
          if (Mv.nW.mnnvm < 333) {
            WV[VM[149]] = 1;
          }
        }
      }
      ;
      ;
      function vMnVm(nN, wn, WWWMM) {
        Mv.nW.vnMmn -= nv;
        var VVV = Math[VM[144]](0, Math[VM[61]](Mv.nW.vnMmn / 1000));
        if (VVV < 3000) {
          MW.NN(wVmvn, nN / vW + 51, wn / vW + 145, 0, 0, 0, 1);
          if (NWvvn[VVV] === undefined) {
            if (WWWMM === 1 && NWvvn[VVV + 1] !== undefined) {
              NWvvn[VVV + 1] = undefined;
            }
            var NVmwV = Math[VM[61]](VVV / 60);
            var mVmWm = VVV % 60;
            NWvvn[VVV] = {
              m: NM.mMm((NVmwV < 10 ? "0" : "") + NVmwV + ":" + (mVmWm < 10 ? "0" : "") + mVmWm, "'Viga', sans-serif", "#FF0000", 38, 100, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12)
            };
            NWvvn[VVV].m.n = 1;
          }
          MW.NN(NWvvn[VVV], nN / vW + 60, wn / vW + 145, 0, 0, 0, 1);
        }
      }
      ;
      ;
      function VvMNn(nN, wn) {
        MW.NN(WvnnW, nN / vW + VVwwM - 63, 25 + wn / vW, 0, 0, 0, 1);
        if (MNm[Mv.MNm] === undefined) {
          MNm[Mv.MNm] = {
            m: NM.mMm("#" + Mv.MNm, "'Viga', sans-serif", "#FFFFFF", 60, 140)
          };
          MNm[Mv.MNm].m.n = 1;
        }
        MW.NN(MNm[Mv.MNm], nN / vW + VVwwM - 50, 25 + wn / vW, 0, 0, 0, 1);
      }
      ;
      ;
      function MvWvN(nN, wn) {
        mVvwN(nN + vW * 250, wn);
        if (vwM.n !== 1) {
          vwM = MW.Mvw(MVWVm, vwM);
          return;
        }
        var NWMVW = mnwnw * vVn;
        var VnWMv = mnwnw * Wnn;
        var mmV = Math[VM[241]](Math[VM[144]](0, NWMVW - VwM), VNnwm);
        var vMm = Math[VM[241]](Math[VM[144]](0, VnWMv - VwM), VNnwm);
        var MN = VwM * vW;
        WV[VM[134]](vwM, mmV, vMm, vmnvW, vmnvW, nN, wn, MN, MN);
        if (Mv.vNn === Mv.vWmNw) {
          if (Mv.nW.NNn !== 0) {
            VvMNn(-255, wn);
          } else {
            vMnVm(nN + 50, wn, 1);
          }
        }
        if (Mv.vNn === Mv.NwvNm) {
          var MNWmn = Mv.nW.mNMNw[Math[VM[61]](Wnn / nVNmw)][Math[VM[61]](vVn / nVNmw)];
          if (MNWmn !== 0 && MNWmn < Mv.nW.MNmNw && Mv.nW.MNmNw !== 8) {
            mMMWM = Math[VM[241]](1000, mMMWM + nv);
            WV[VM[149]] = wMM.vNv.vvW(mMMWM / 500);
            MW.NN(NVMnV, nWN, 58, 0, 0, 0, 1);
            WV[VM[149]] = 1;
          } else if (mMMWM > 0) {
            mMMWM = Math[VM[144]](0, mMMWM - nv);
            WV[VM[149]] = wMM.vNv.vvW(mMMWM / 500);
            MW.NN(NVMnV, nWN, 58, 0, 0, 0, 1);
            WV[VM[149]] = 1;
          }
          WV[VM[134]](VmVvv.m, mmV / 2, vMm / 2, VwM, VwM, nN, wn, MN, MN);
          WV[VM[149]] = NNwVM > 600 ? wMM.vNv.wvN((1200 - NNwVM) / 600) : wMM.vNv.wvN(NNwVM / 600);
          NNwVM = (NNwVM + nv) % 1200;
          WV[VM[134]](nWVmw.m, mmV / 2, vMm / 2, VwM, VwM, nN, wn, MN, MN);
          WV[VM[149]] = 1;
          VvMNn(0, wn);
          vMnVm(nN, wn, 0);
        } else if (Mv.nW.NNn === 0) {
          if (Mv.wnN.wNn.nMM === 1) {
            vMWWW = Math[VM[241]](1000, vMWWW + nv);
            WV[VM[149]] = wMM.vNv.vvW(vMWWW / 500);
            MW.NN(nNwNn, nWN, 58, 0, 0, 0, 1);
            WV[VM[149]] = 1;
          } else if (vMWWW > 0) {
            vMWWW = Math[VM[144]](0, vMWWW - nv);
            WV[VM[149]] = wMM.vNv.vvW(vMWWW / 500);
            MW.NN(nNwNn, nWN, 58, 0, 0, 0, 1);
            WV[VM[149]] = 1;
          }
        }
        if (mmV >= VNnwm) {
          NWMVW = Math[VM[241]]((NWMVW - wNwNW) / 2 + mMvnv, VwM - 8);
        } else if (NWMVW < VwM) {
          NWMVW = Math[VM[144]](15, NWMVW / 2);
        } else {
          NWMVW = mMvnv;
        }
        if (vMm >= VNnwm) {
          VnWMv = Math[VM[241]]((VnWMv - wNwNW) / 2 + mMvnv, VwM - 8);
        } else if (VnWMv < VwM) {
          VnWMv = Math[VM[144]](15, VnWMv / 2);
        } else {
          VnWMv = mMvnv;
        }
        var mnV = nN / vW;
        var NwV = wn / vW;
        if (Mv.nW.nvW !== -1 || Mv.nW.NNn !== 0 && Mv.MNm < 6) {
          var wwW = nNV.wVN[wWm];
          for (var Wv = 0; Wv < Mv.nW.mVNNm; Wv++) {
            var MNwNM = Mv.nW.VwMVW[Wv];
            if (MNwNM.mmVnm < 0) {
              continue;
            }
            var nW = Mv.wwW[MNwNM[VM[5]]];
            var VW;
            if (vWW === nW.vWW + 1) {
              var mmm = wwW[nW.NnvVn];
              if (vVV.NMM(nW[VM[150]], nW[VM[169]], mmm[VM[232]], mmm[VM[249]]) < 1000) {
                nW[VM[150]] = mmm[VM[232]];
                nW[VM[169]] = mmm[VM[249]];
              }
              nW[VM[232]] = mmm[VM[232]];
              nW[VM[249]] = mmm[VM[249]];
              VW = mmm[VM[246]];
            } else {
              var VW = nW[VM[232]] % WwNwv;
            }
            var Vnm = mnV + Math[VM[144]](15, Math[VM[241]](VwM - 15, NWMVW - 3 + (nW[VM[150]] - vVn) * mnwnw));
            var vNV = NwV + Math[VM[144]](15, Math[VM[241]](VwM - 15, VnWMv - 3 + (nW[VM[169]] - Wnn) * mnwnw));
            MW.NN(Wmnmv, Vnm, vNV, VW, 0, 0, 1);
          }
        }
        if (Mv.nW.nwWMn > 0) {
          var nW = Mv.wwW[Mv.nW.nwNww];
          if (vWW === nW.vWW + 1) {
            var wwW = nNV.wVN[wWm];
            var mmm = wwW[nW.NnvVn];
            if (vVV.NMM(nW[VM[150]], nW[VM[169]], mmm[VM[232]], mmm[VM[249]]) < 1000) {
              nW[VM[150]] = mmm[VM[232]];
              nW[VM[169]] = mmm[VM[249]];
            }
            nW[VM[232]] = mmm[VM[232]];
            nW[VM[249]] = mmm[VM[249]];
          }
          MW.NN(nwWvn[nW.nWwvN], mnV + Math[VM[144]](15, Math[VM[241]](VwM - 15, NWMVW - 3 + (nW[VM[150]] - vVn) * mnwnw)), NwV + Math[VM[144]](15, Math[VM[241]](VwM - 15, VnWMv - 3 + (nW[VM[169]] - Wnn) * mnwnw)), 0, 0, 0, 1.25);
        }
        var Vnm = mnV + (NWMVW - 3);
        var vNV = NwV + (VnWMv - 3);
        MW.NN(MwNWn, Vnm, vNV, mvv[VM[246]], 0, 0, 1);
        if (Mv.nW.NNn === 0 && (Mv.nW.mNv > 0 || vmv.MNV > 0)) {
          var VN = (vmv.VN + nv) % 1000;
          vmv.VN = VN;
          if (vmv.VN < 500) {
            nN += 260 + wMM.vNv.wvN(VN / 500) * 15;
          } else {
            nN += 260 + wMM.vNv.wvN((1000 - VN) / 500) * 15;
          }
          WV[VM[149]] = wMM.vNv.vvW(vmv.MNV);
          MW.NN(vmv, nN, wn + 31, 0, 0, 0, 1);
          WV[VM[149]] = 1;
          if (Mv.nW.mNv <= 0 || VNw.MWw() === 1) {
            vmv.MNV = Math[VM[144]](0, vmv.MNV - nv / 500);
          } else if (vmv.MNV < 1) {
            vmv.MNV = Math[VM[241]](1, vmv.MNV + nv / 500);
          }
        }
      }
      ;
      ;
      var nwM = "";
      var nwvvw = null;
      function mwNMv(WNw, wWvvw, vMvWn, NNnwW, VWVwV, NmNWw, NMMwm, VNmWM) {
        var nN = 0;
        var wn = 0;
        if (Mv.nW.nvW === -1) {
          var MWmnv = 1;
          if (VNw.nwM[VM[126]] === 0) {
            MWmnv = 0;
          } else {
            for (var Wv = 0; Wv < Mv.MWW[VM[126]]; Wv++) {
              if (Mv.MWW[Wv][VM[133]] === VNw.nwM) {
                MWmnv = 0;
                break;
              }
            }
          }
          Mv.nW.MWmnv = MWmnv;
          nN = wWvvw.mm[VM[232]];
          wn = wWvvw.mm[VM[249]];
          wWvvw.Mw();
          WNw.mm[VM[232]] = nN + vW * 513;
          WNw.mm[VM[249]] = wn + vW * 2;
          if (nwM !== VNw.nwM) {
            nwM = VNw.nwM;
            nwvvw = NM.mMm(nwM, "'Viga', sans-serif", "#FFFFFF", 30, 400);
          }
          if (nwvvw !== null && nwM[VM[126]] !== 0) {
            MW[VM[84]](WV, nN / vW + 39, wn / vW + 14, 122, 16.5, "#000000");
            WV[VM[134]](nwvvw, nN + vW * 35, wn + vW * 14.5, nwvvw.mvN * vW, nwvvw.wmm * vW);
          }
          VWVwV.mm[VM[232]] = nN + vW * 172;
          VWVwV.mm[VM[249]] = wn + vW * 6;
          if (MWmnv === 0 || Date[VM[105]]() - Mv.nW.NwvWV < 30500) {
            VWVwV.wvn(NM.WVN);
            WV[VM[149]] = 0.5;
            VWVwV.Mw();
            WV[VM[149]] = 1;
          } else {
            VWVwV.Mw();
          }
          var mM = 0;
          for (var Wv = 0; Wv < 18; Wv++) {
            var nvW = Mv.MWW[Wv];
            if (nvW.wmmnM === 0) {
              continue;
            }
            if (nvW[VM[208]] === null) {
              nvW[VM[208]] = NM.mMm(nvW[VM[133]], "'Viga', sans-serif", "#FFFFFF", 30, 400);
            }
            WV[VM[134]](nvW[VM[208]], nN + (20 + mM % 3 * 163) * vW, wn + (58.5 + Math[VM[61]](mM / 3) * 36) * vW, nvW[VM[208]].mvN * vW, nvW[VM[208]].wmm * vW);
            var Nv = VNw[VM[116]][mM];
            Nv.mm[VM[232]] = nN + (84 + mM % 3 * 163) * vW;
            Nv.mm[VM[249]] = wn + (48 + Math[VM[61]](mM / 3) * 36) * vW;
            if (Date[VM[105]]() - Mv.nW.MMmwv < 10500) {
              Nv.wvn(NM.WVN);
              WV[VM[149]] = 0.5;
              Nv.Mw();
              WV[VM[149]] = 1;
            } else {
              Nv.Mw();
            }
            mM++;
          }
        } else {
          nN = vMvWn.mm[VM[232]];
          wn = vMvWn.mm[VM[249]];
          var nvW = Mv.MWW[Mv.nW.nvW];
          if (nvW[VM[208]] === null) {
            nvW[VM[208]] = NM.mMm(nvW[VM[133]], "'Viga', sans-serif", "#FFFFFF", 30, 400);
          }
          WV[VM[134]](nvW[VM[208]], nN + vW * 144, wn + vW * 13, nvW[VM[208]].mvN * vW, nvW[VM[208]].wmm * vW);
          vMvWn.Mw();
          WNw.mm[VM[232]] = nN + vW * 512;
          WNw.mm[VM[249]] = wn + vW * 34.5;
          if (Mv.nW.vwwmn === 1) {
            if (Mv.nW.NmNmW === 0) {
              NmNWw.mm[VM[232]] = nN + vW * 259;
              NmNWw.mm[VM[249]] = wn + vW * 5;
              NmNWw.Mw();
            } else {
              NMMwm.mm[VM[232]] = nN + vW * 259;
              NMMwm.mm[VM[249]] = wn + vW * 5;
              NMMwm.Mw();
            }
            VNmWM.mm[VM[232]] = nN + vW * 311.5;
            VNmWM.mm[VM[249]] = wn + vW * 5;
            VNmWM.Mw();
            var mM = 0;
            for (var Wv = 0; Wv < Mv.wwW[VM[126]]; Wv++) {
              var nW = Mv.wwW[Wv];
              if (nvW.MWV !== nW.VVM || nW.nvW !== nvW[VM[5]]) {
                continue;
              }
              if (nW.vMN === null) {
                nW.vMN = NM.mMm(nW.MWn, "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
              }
              if (nW.vMN[VM[255]] !== 0 && nW.vMN[VM[104]] !== 0) {
                WV[VM[134]](nW.vMN, nN + (26 + mM % 3 * 166.5) * vW, wn + (53 + Math[VM[61]](mM / 3) * 29.5) * vW, nW.vMN.mvN * vW / 2.2, nW.vMN.wmm * vW / 2.2);
              }
              var Nv = VNw.VMVNW[mM];
              Nv.mm[VM[232]] = nN + (132 + mM % 3 * 166.5) * vW;
              Nv.mm[VM[249]] = wn + (48.5 + Math[VM[61]](mM / 3) * 29.5) * vW;
              if (Date[VM[105]]() - Mv.nW.MMmwv < 10500 || nW[VM[5]] === Mv.nW[VM[5]]) {
                Nv.wvn(NM.WVN);
                WV[VM[149]] = 0.5;
                Nv.Mw();
                WV[VM[149]] = 1;
              } else {
                Nv.Mw();
              }
              mM++;
            }
          } else {
            NNnwW.mm[VM[232]] = nN + vW * 311.5;
            NNnwW.mm[VM[249]] = wn + vW * 5;
            NNnwW.Mw();
            var mM = 0;
            for (var Wv = 0; Wv < Mv.wwW[VM[126]]; Wv++) {
              var nW = Mv.wwW[Wv];
              if (nvW.MWV !== nW.VVM || nW.nvW !== nvW[VM[5]]) {
                continue;
              }
              if (nW.vMN === null) {
                nW.vMN = NM.mMm(nW.MWn, "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
              }
              if (nW.vMN[VM[255]] !== 0 && nW.vMN[VM[104]] !== 0) {
                WV[VM[134]](nW.vMN, nN + (26 + mM % 3 * 166.5) * vW, wn + (53 + Math[VM[61]](mM / 3) * 29.5) * vW, nW.vMN.mvN * vW / 2.2, nW.vMN.wmm * vW / 2.2);
              }
              mM++;
            }
          }
        }
        WNw.Mw();
      }
      ;
      ;
      function NvWnv(nMnnN, WNw, NMn, MMN) {
        nMnnN.Mw();
        var nN = nMnnN.mm[VM[232]];
        var wn = nMnnN.mm[VM[249]];
        WNw.mm[VM[232]] = nN + vW * 161;
        WNw.mm[VM[249]] = wn + vW * 0;
        WNw.Mw();
        var Nwn = Mv.nW.Nwn;
        var Vnm;
        var vNV = wn + vW * 14;
        var Nv = VNw.Nwn;
        for (var Wv = 0; Wv < 4; Wv++) {
          if (Wv % 2 === 0) {
            Vnm = nN + vW * 12.5;
            if (Wv === 2) {
              vNV += vW * 71;
            }
          } else {
            Vnm += vW * 72;
          }
          if (Nwn[Wv][0] === 0) {
            continue;
          }
          WMmWm(Nv[Wv], Nwn[Wv], Vnm, vNV, NMn, MMN);
        }
      }
      ;
      ;
      function mVVwW() {
        var MnvMv = WVV;
        if (MnvMv > 0) {
          MW[VM[84]](WV, 0, 0, MnvMv, mWNvm, WwVnW);
        } else {
          MnvMv = 0;
        }
        var WNvvn = NVM;
        if (WNvvn > 0) {
          MW[VM[84]](WV, MnvMv, 0, VVwwM - MnvMv, WNvvn, WwVnW);
        } else {
          WNvvn = 0;
        }
        var MwNNW = -WVV + VVwwM - wmNVv;
        if (MwNNW > 0) {
          MW[VM[84]](WV, VVwwM - MwNNW, WNvvn, MwNNW, mWNvm - WNvvn, WwVnW);
        } else {
          MwNNW = 0;
        }
        var MnvNW = -NVM + mWNvm - MVwwv;
        if (MnvNW > 0) {
          MW[VM[84]](WV, MnvMv, mWNvm - MnvNW, VVwwM - MnvMv - MwNNW, MnvNW, WwVnW);
        }
      }
      ;
      ;
      function MnNWV(nMnWn, MV) {
        var nnV = wWw[MV];
        var wm = nnV[VM[213]];
        var NWw = NM.mMm(wm[VM[133]], "'Viga', sans-serif", "#D3BB43", 30, 400);
        nMnWn[VM[134]](NWw, 20, 20);
        NWw = NM.mMm(wm[VM[119]], "'Viga', sans-serif", "#FFFFFF", 16, 400);
        nMnWn[VM[134]](NWw, 20, 68);
        if (nnV.MnW === 21) {
          if (nnV.vWM > 0) {
            NWw = NM.mMm("Damage: " + nnV.wmw + "/" + nnV.vWM, "'Viga', sans-serif", "#D3BB43", 24, 400);
            nMnWn[VM[134]](NWw, 20, 101);
          } else {
            NWw = NM.mMm("Life: " + nnV.WW, "'Viga', sans-serif", "#D3BB43", 24, 400);
            nMnWn[VM[134]](NWw, 20, 101);
          }
        } else if (nnV.MnW !== undefined && nnV.MnW !== 0) {
          var wVM = "";
          var VV = nWw[wWm].NMmnw[nnV.MnW];
          if (VV.wmw !== undefined) {
            wVM = "Damage: " + (VV.vWwVw === undefined ? VV.wmw : VV.vWwVw);
          } else {
            if (VV.NwN !== 0) {
              wVM += "Food: " + VV.NwN + " ";
            }
            if (VV.wNV < 0) {
              wVM += "Damage: " + VV.wNV + " ";
            } else if (VV.wNV > 0) {
              wVM += "Heal: " + VV.wNV + " ";
            }
            if (VV.vmw !== 0) {
              wVM += "Energy: " + VV.vmw;
            }
          }
          NWw = NM.mMm(wVM, "'Viga', sans-serif", "#D3BB43", 24, 400);
          nMnWn[VM[134]](NWw, 20, 101);
        } else if (nnV.MvN !== undefined) {} else {
          NWw = NM.mMm("Cannot be equipped", "'Viga', sans-serif", "#FFFFFF", 17, 400);
          nMnWn[VM[134]](NWw, 20, 108);
        }
      }
      ;
      ;
      function VmnmV(WWwMW, WNw, Mmw, Mnwnw, nvNVN, wnwWM, Wvv, wMWmv, NMn, MMN, vVnnN, mWVvW, WwwNv, VWwMw) {
        WWwMW.Mw();
        var nN = WWwMW.mm[VM[232]];
        var wn = WWwMW.mm[VM[249]];
        var mnV = nN / vW;
        var NwV = wn / vW;
        WNw.mm[VM[232]] = nN + vW * 594;
        WNw.mm[VM[249]] = wn + vW * 0;
        WNw.Mw();
        var WMV = Mv.nW.WMV;
        var VVVVm = Mv.nW.VVVVm;
        var Mnv = Mv.nW.MMV;
        var vVW = Mv.nW.MnV;
        for (var Wv = 0; Wv < Mmw[VM[126]]; Wv++) {
          var Nv = Mmw[Wv];
          if (Wv === Mnv) {
            Nv.wvn(NM.WVv);
          }
          Nv.mm[VM[232]] = vW * 10 + nN + Wv * 47 * vW;
          Nv.mm[VM[249]] = wn - vW * 40;
          Nv.Mw();
        }
        var mM = 0;
        for (Wv = 0; Wv < Wvv[VM[126]]; Wv++) {
          if (Wv === vVW && Mv.nW.WVm === 1) {} else if (Wv !== Mv.nW.mVmvW && Wv !== 0) {
            continue;
          }
          var Nv = Wvv[Wv];
          if (Wv === vVW) {
            Nv.wvn(NM.WVv);
          }
          Nv.mm[VM[232]] = nN - vW * 40;
          Nv.mm[VM[249]] = vW * 10 + wn + mM * 43 * vW;
          Nv.Mw();
          mM++;
        }
        wMWmv.mm[VM[232]] = nN + vW * 364;
        wMWmv.mm[VM[249]] = wn + vW * 27;
        wMWmv.Mw();
        var nwV = VNw.nwV;
        var MwV = Mv.nW.mnMWn;
        var MN = vW * 49;
        var ww = vW * 49;
        var NWm = vW * 58;
        var vVMVM = vW * 30;
        var Wnwvw = vW * 34;
        var NV = 1;
        if (WNVnn < 500) {
          NV += wMM.vNv.vvW(WNVnn / 500) * 0.08;
          WNVnn += nv;
        } else {
          NV += wMM.vNv.VWN(1 - (WNVnn - 500) / 500) * 0.08;
          WNVnn += nv;
          if (WNVnn > 1000) {
            WNVnn = 0;
          }
        }
        NV = Math[VM[144]](1, Math[VM[241]](1.08, NV));
        for (Wv = 0; Wv < MwV; Wv++) {
          var Nv = nwV[Wv];
          Nv.mm[VM[232]] = vVMVM + nN + Wv % 5 * NWm;
          Nv.mm[VM[249]] = Wnwvw + wn + Math[VM[61]](Wv / 5) * NWm;
          var VvWWW = WMV[Wv];
          if (VvWWW === 0) {
            WV[VM[149]] = 0.45;
            Nv.Mw();
            WV[VM[149]] = 1;
          } else if (VvWWW === 2) {
            Nv.wvn(NM.nwmmV);
            Nv.Mw();
          } else {
            WV[VM[149]] = 0.6;
            MW.NN(mMvvM, Nv.mm[VM[232]] / vW + 24.5, Nv.mm[VM[249]] / vW + 24.5, 0, 0, 0, NV);
            WV[VM[149]] = 1;
            Nv.Mw();
          }
        }
        var MNN = 0;
        if (Mv.nW.MMV === -1) {
          if (Mv.nW.WVm === 1) {
            Mnwnw.mm[VM[232]] = nN + vW * 454;
            Mnwnw.mm[VM[249]] = wn + vW * 153;
            if (Mv.nW.WMV[Mv.nW.nVNnV] === 1 && Mv.nW.Vv.MwV < 4 && Mv.nW.Vv.NVW !== 0) {
              Mnwnw.Mw();
            } else {
              WV[VM[149]] = 0.5;
              Mnwnw.wvn(NM.WVN);
              Mnwnw.Mw();
              WV[VM[149]] = 1;
            }
          } else if (Mv.nW.vwwmm === 0) {
            Mnwnw.mm[VM[232]] = nN + vW * 454;
            Mnwnw.mm[VM[249]] = wn + vW * 153;
            if (Mv.nW.WMV[Mv.nW.nVNnV] === 1) {
              Mnwnw.Mw();
            } else {
              WV[VM[149]] = 0.5;
              Mnwnw.wvn(NM.WVN);
              Mnwnw.Mw();
              WV[VM[149]] = 1;
            }
          } else {
            nvNVN.mm[VM[232]] = nN + vW * 454;
            nvNVN.mm[VM[249]] = wn + vW * 153;
            nvNVN.Mw();
          }
          if (wWVnN.n !== 1) {
            wWVnN = MW.Mvw(nwWmv, wWVnN);
            return;
          }
          if (Mv.nW.WVm === 1) {
            if (Mv.nW.Vv[VM[250]] !== 0 && Mv.nW.Vv.NVW !== 0) {
              MNN = Mv.nW.Vv[VM[250]] - Date[VM[105]]();
              if (MNN < 0) {
                Mv.nW.Vv[VM[250]] = 0;
              }
              MNN = wMM.vNv.wvN(1 - MNN / Mv.nW.Vv.WvwnM);
            }
          } else if (Mv.nW.vwwmm !== 0) {
            MNN = Mv.nW.vwwmm - Date[VM[105]]();
            if (MNN < 0) {
              Mv.nW.vwwmm = 0;
            }
            MNN = wMM.vNv.wvN(1 - MNN / Mv.nW.vnwvV);
          }
          MNN = Math[VM[241]](1, Math[VM[144]](0, MNN));
          MN = vW * wWVnN[VM[255]] / 2;
          ww = vW * wWVnN[VM[104]] / 2;
          var MNwVm = nN + vW * 356;
          var WVVvV = wn + vW * 206;
          WV[VM[210]] = "#A29742";
          NWm = vW * 3;
          vVMVM = NWm * 2;
          WV[VM[84]](Math[VM[61]](MNwVm + NWm), Math[VM[61]](WVVvV + NWm), Math[VM[61]]((MN - vVMVM) * MNN), Math[VM[61]](ww - vVMVM));
          WV[VM[134]](wWVnN, MNwVm, WVVvV, MN, ww);
        } else {
          var VVvnV = Mv.nW.WMV[Mv.nW.nVNnV];
          wnwWM.mm[VM[232]] = nN + vW * 454;
          wnwWM.mm[VM[249]] = wn + vW * 153;
          if (VVvnV === 1) {
            wnwWM.Mw();
          } else if (VVvnV === 0) {
            WV[VM[149]] = 0.5;
            wnwWM.wvn(NM.WVN);
            wnwWM.Mw();
            WV[VM[149]] = 1;
            if (Mv.nW.VWMVN !== NMwWW) {
              Mwvnn[VM[48]](0, 0, 420, 148);
              NMwWW = Mv.nW.VWMVN;
              var wm = wWw[NMwWW][VM[213]];
              var nvVvV = 20;
              if (wm[VM[112]] > Mv.nW[VM[112]]) {
                var mNN = NM.mMm("Require level " + wm[VM[112]] + " or higher", "'Viga', sans-serif", "#D8BA3D", 30, 600);
                Mwvnn[VM[134]](mNN, 20, nvVvV);
                nvVvV += 50;
              }
              if (wm.MVMWV !== -1 && Mv.nW.vnNNM[wm.MVMWV] === undefined) {
                var mNN = NM.mMm("Unlock " + wWw[wm.MVMWV][VM[213]][VM[133]] + " before", "'Viga', sans-serif", "#D8BA3D", 30, 600);
                Mwvnn[VM[134]](mNN, 20, nvVvV);
                nvVvV += 50;
              }
              if (Mv.nW.mNv < wm.mwVNN) {
                var mNN = NM.mMm("Cost " + wm.mwVNN + " skill point" + (wm.mwVNN !== 1 ? "s" : ""), "'Viga', sans-serif", "#D8BA3D", 30, 600);
                Mwvnn[VM[134]](mNN, 20, nvVvV);
              }
            }
            WV[VM[134]](WNmWV, nN + vW * 356, wn + vW * 211, vW * WNmWV[VM[255]] / 2, vW * WNmWV[VM[104]] / 2);
          } else {
            wnwWM.wvn(NM.WVv);
            wnwWM.Mw();
          }
        }
        if (Mv.nW.WVm === 1) {
          var WM = Mv.nW.Vv.NVW;
          if (WM >= 0) {
            var Nv;
            if (vVW === Mn.vMM || vVW === Mn.vMW || vVW === Mn.MNw) {
              Nv = mWVvW;
            } else if (vVW === Mn.MVV || vVW === Mn.nNW) {
              Nv = WwwNv;
            } else {
              Nv = vVnnN;
            }
            Nv.mm[VM[232]] = nN + vW * 532;
            Nv.mm[VM[249]] = wn + vW * 153;
            if (Mv.nW.Vv.NVW !== 255) {
              Nv.Mw();
            } else {
              WV[VM[149]] = 0.5;
              Nv.wvn(NM.WVN);
              Nv.Mw();
              WV[VM[149]] = 1;
            }
            if (MMN[WM] === undefined) {
              MMN[WM] = {
                m: NM.mMm("x" + WM, "'Black Han Sans', sans-serif", "#FFFF00", 30, 250, undefined, 15, 12, undefined, undefined, undefined, undefined, "#000000", 12)
              };
              MMN[WM].m.n = 1;
            }
            MW.NN(MMN[WM], Nv.mm[VM[232]] / vW + 42, Nv.mm[VM[249]] / vW + 42, -0.5, 0, 0, 0.9);
          }
          var WVw = VNw.WVw;
          var nvmwm = Mv.nW.Vv.mm;
          MwV = Mv.nW.Vv.MwV;
          MN = vW * 40;
          ww = vW * 40;
          NWm = vW * 62;
          vVMVM = vW * 356;
          Wnwvw = vW * 237;
          for (var Wv = 0; Wv < MwV; Wv++) {
            var Nv = WVw[Wv];
            if (Wv === nvmwm) {
              if (MNN !== 0) {
                WV[VM[149]] = 0.6;
                MW.NN(mMvvM, Nv.mm[VM[232]] / vW + 20, Nv.mm[VM[249]] / vW + 20, 0, 0, 0, Math[VM[144]](0.01, Math[VM[241]](1, MNN)) * 0.85);
                WV[VM[149]] = 1;
              }
            } else if (Wv < nvmwm) {
              WV[VM[149]] = 0.6;
              MW.NN(mMvvM, Nv.mm[VM[232]] / vW + 20, Nv.mm[VM[249]] / vW + 20, 0, 0, 0, NV * 0.85);
              WV[VM[149]] = 1;
            }
            Nv.mm[VM[232]] = vVMVM + nN + Wv * NWm;
            Nv.mm[VM[249]] = Wnwvw + wn;
            Nv.Mw();
          }
        }
        var mVnWN = VNw.mVnWN;
        MwV = Mv.nW.wMWVm;
        NWm = vW * 45;
        vVMVM = vW * 356;
        Wnwvw = vW * 151;
        for (var Wv = 0; Wv < MwV; Wv++) {
          var Nv = mVnWN[Wv];
          Nv.mm[VM[232]] = vVMVM + nN + Wv * NWm;
          Nv.mm[VM[249]] = Wnwvw + wn;
          Nv.Mw();
        }
        if (Mv.nW.mNv !== wvmWv) {
          MMmVn[VM[48]](0, 0, 280, 50);
          wvmWv = Mv.nW.mNv;
          var mNN = NM.mMm("SKILL POINT: " + wvmWv, "'Viga', sans-serif", "#FFFFFF", 32, 400);
          MMmVn[VM[134]](mNN, 24, 12);
        }
        WV[VM[134]](mNv, nN + vW * 455, wn + vW * 378, vW * mNv[VM[255]] / 2, vW * mNv[VM[104]] / 2);
        if (Mv.nW.VWMVN !== mmwWM) {
          VvmmV[VM[48]](0, 0, 280, 148);
          mmwWM = Mv.nW.VWMVN;
          MnNWV(VvmmV, mmwWM);
        }
        WV[VM[134]](NVmmw, nN + vW * 439, wn + vW * 24, vW * NVmmw[VM[255]] / 2, vW * NVmmw[VM[104]] / 2);
        if (Mv.nW.mNv > 0 || VVW.MNV > 0) {
          var VN = (VVW.VN + nv) % 1000;
          VVW.VN = VN;
          var vNV = wn / vW;
          if (VVW.VN < 500) {
            vNV += -62 - wMM.vNv.wvN(VN / 500) * 15;
          } else {
            vNV += -62 - wMM.vNv.wvN((1000 - VN) / 500) * 15;
          }
          WV[VM[149]] = wMM.vNv.vvW(VVW.MNV);
          MW.NN(VVW, 266 + WWwMW.mm[VM[232]] / vW, vNV, 0, 0, 0, 1);
          WV[VM[149]] = 1;
          if (Mv.nW.mNv <= 0) {
            VVW.MNV = Math[VM[144]](0, VVW.MNV - nv / 500);
          } else if (VVW.MNV < 1) {
            VVW.MNV = Math[VM[241]](1, VVW.MNV + nv / 500);
          }
        }
        var nmW = VNw.nmW;
        MwV = Mv.nW.mwmvn;
        MN = vW * 40;
        ww = vW * 40;
        NWm = vW * 45;
        vVMVM = vW * 356;
        Wnwvw = vW * 107;
        for (var Wv = 0; Wv < MwV; Wv++) {
          var Nv = nmW[Wv];
          Nv.mm[VM[232]] = vVMVM + nN + Wv * NWm;
          Nv.mm[VM[249]] = Wnwvw + wn;
          var WM = Math[VM[0]](VVVVm[Wv]);
          if (NMn[WM] === undefined) {
            NMn[WM] = {
              m: NM.mMm("x" + WM, "'Black Han Sans', sans-serif", "#ffffff", 30, 250, undefined, 15, 12, undefined, undefined, undefined, undefined, "#000000", 12)
            };
            NMn[WM].m.n = 1;
          }
          if (VVVVm[Wv] < 0) {
            WV[VM[149]] = 0.45;
            Nv.Mw();
            MW.NN(NMn[WM], Nv.mm[VM[232]] / vW + 30, Nv.mm[VM[249]] / vW + 32, -0.5, 0, 0, 0.9);
            WV[VM[149]] = 1;
          } else {
            Nv.Mw();
            MW.NN(NMn[WM], Nv.mm[VM[232]] / vW + 30, Nv.mm[VM[249]] / vW + 32, -0.5, 0, 0, 0.9);
          }
          if (VWwMw === Wv && Mv.nW.WwNww[Wv] > 0) {
            VNWMN(Mv.nW.WwNww[Wv], Nv.mm[VM[232]], Nv.mm[VM[249]] + vW * 45);
          }
        }
      }
      ;
      ;
      function nMNNN(VwMmv, NwWnM, VWvmN, mvWwN, WWmwM, mMnVW, wMvVv, mwVWv, nMvVw, vmmNm, WNw, VmNvV, MVvmv, wnwmm) {
        VwMmv.Mw();
        var nN = VwMmv.mm[VM[232]];
        var wn = VwMmv.mm[VM[249]];
        WNw.mm[VM[232]] = nN + vW * 265;
        WNw.mm[VM[249]] = wn + vW * 0;
        WNw.Mw();
        WWmwM.mm[VM[232]] = nN + vW * 87;
        WWmwM.mm[VM[249]] = wn + vW * 15;
        if (wwm.MMVwv() === 1) {
          WWmwM.wvn(NM.WVv);
        }
        WWmwM.Mw();
        mMnVW.mm[VM[232]] = nN + vW * 173;
        mMnVW.mm[VM[249]] = wn + vW * 15;
        if (wwm.mwwwW() === 1) {
          mMnVW.wvn(NM.WVv);
        }
        mMnVW.Mw();
        mvWwN.mm[VM[232]] = nN + vW * 87;
        mvWwN.mm[VM[249]] = wn + vW * 62;
        if (MW[VM[29]].MmNMW === 3) {
          mvWwN.wvn(NM.WVv);
        }
        mvWwN.Mw();
        VWvmN.mm[VM[232]] = nN + vW * 147;
        VWvmN.mm[VM[249]] = wn + vW * 62;
        if (MW[VM[29]].MmNMW === 2) {
          VWvmN.wvn(NM.WVv);
        }
        VWvmN.Mw();
        NwWnM.mm[VM[232]] = nN + vW * 207;
        NwWnM.mm[VM[249]] = wn + vW * 62;
        if (MW[VM[29]].MmNMW === 1) {
          NwWnM.wvn(NM.WVv);
        }
        NwWnM.Mw();
        wMvVv.mm[VM[232]] = nN + vW * 87;
        wMvVv.mm[VM[249]] = wn + vW * 117;
        if (wN[VM[29]].MVmwn === 1) {
          wMvVv.wvn(NM.WVv);
        }
        wMvVv.Mw();
        mwVWv.mm[VM[232]] = nN + vW * 147;
        mwVWv.mm[VM[249]] = wn + vW * 117;
        if (wN[VM[29]].MVmwn === 0) {
          mwVWv.wvn(NM.WVv);
        }
        mwVWv.Mw();
        nMvVw.mm[VM[232]] = nN + vW * 87;
        nMvVw.mm[VM[249]] = wn + vW * 167;
        if (wN[VM[29]].VvWwv === 1) {
          nMvVw.wvn(NM.WVv);
        }
        nMvVw.Mw();
        vmmNm.mm[VM[232]] = nN + vW * 147;
        vmmNm.mm[VM[249]] = wn + vW * 167;
        if (wN[VM[29]].VvWwv === 0) {
          vmmNm.wvn(NM.WVv);
        }
        vmmNm.Mw();
        wnwmm.mm[VM[232]] = nN + vW * 87;
        wnwmm.mm[VM[249]] = wn + vW * 217;
        if (MnWMv === 0) {
          wnwmm.wvn(NM.WVv);
        }
        wnwmm.Mw();
        MVvmv.mm[VM[232]] = nN + vW * 147;
        MVvmv.mm[VM[249]] = wn + vW * 217;
        if (MnWMv === 1) {
          MVvmv.wvn(NM.WVv);
        }
        MVvmv.Mw();
        VmNvV.mm[VM[232]] = nN + vW * 207;
        VmNvV.mm[VM[249]] = wn + vW * 217;
        if (MnWMv === 2) {
          VmNvV.wvn(NM.WVv);
        }
        VmNvV.Mw();
      }
      ;
      ;
      function vMVWN(Mm) {
        var nW = Mv.wwW[Mm.nMV];
        if (nW[VM[39]][VM[126]] > 0) {
          for (var Wv = 0; Wv < nW[VM[39]][VM[126]] && Wv < 2; Wv++) {
            if (!nW[VM[208]][Wv]) {
              nW[VM[208]][Wv] = NM.mMm(nW[VM[39]][Wv], "'Viga', sans-serif", "#ffffff", 32, 1000, "#000000", 33, 19, undefined, undefined, 0.55, 5);
              nW.WnMmN[Wv] = 0;
              nW.wnNVn[Wv] = 0;
            }
            if (Wv === 1) {
              nW.wnNVn[0] = wMM.vNv.wvN(nW.nvvMn) * 28;
            }
          }
          MWNvM = nv / 1000;
          nW.WnMmN[0] += MWNvM;
          if (nW[VM[39]][VM[126]] > 1) {
            nW.nvvMn = Math[VM[241]](nW.nvvMn + MWNvM, 1);
            if (nW.WnMmN[0] > 1 && nW.nvvMn > 0.5) {
              nW.WnMmN[1] += MWNvM;
            }
          }
          for (var Wv = 0; Wv < nW[VM[39]][VM[126]] && Wv < 2; Wv++) {
            var MNV = nW.WnMmN[Wv];
            if (MNV > 0) {
              if (MNV < 0.25) {
                WV[VM[149]] = MNV * 4;
              } else if (MNV > 4.75) {
                WV[VM[149]] = Math[VM[144]]((5 - MNV) * 5, 0);
              } else {
                WV[VM[149]] = 1;
              }
              var wn = 118;
              var m = nW[VM[208]][Wv];
              WV[VM[134]](m, 0, 0, m[VM[255]], m[VM[104]], (WVV + Mm[VM[232]] - m[VM[255]] / 4) * vW, (NVM + Mm[VM[249]] - wn - nW.wnNVn[Wv]) * vW, m[VM[255]] / 2 * vW, m[VM[104]] / 2 * vW);
              WV[VM[149]] = 1;
            }
          }
          if (nW.WnMmN[0] > 5) {
            nW.WnMmN[VM[12]]();
            nW[VM[39]][VM[12]]();
            nW.wnNVn[VM[12]]();
            nW[VM[208]][VM[12]]();
            nW.nvvMn = 0;
          }
        }
      }
      ;
      ;
      function NwVnn(Mm) {
        var nW = Mv.wwW[Mm.nMV];
        if ((Mm.MNM & 255) === 16 && Mv.nW.NNnMv !== 1 && Mm.nMV !== Mv.nW[VM[5]] && (nW.nvW === -1 || Mv.MWW[nW.nvW].MWV !== nW.VVM || Mv.nW.nvW !== nW.nvW)) {
          return;
        }
        if (nW.vMN === null) {
          nW.vMN = NM.mMm(nW.MWn, "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
        }
        var m = nW.vMN;
        var wn = 90;
        if (nW.nvW === -1) {
          WV[VM[134]](m, (WVV + Mm[VM[232]] - m.mvN / 2) * vW, (NVM + Mm[VM[249]] - wn) * vW, m.mvN * vW, m.wmm * vW);
        } else if (nW.nvW !== -1) {
          var nvW = Mv.MWW[nW.nvW];
          if (nvW.MWV === nW.VVM) {
            if (nvW.wWNVN === null) {
              nvW.wWNVN = NM.mMm("[" + nvW[VM[133]] + "]", "'Viga', sans-serif", "#FFFFFF", 38, 400, undefined, 16, 25, undefined, undefined, undefined, undefined, "#000000", 12);
            }
            var NNvmV = nvW.wWNVN;
            WV[VM[134]](NNvmV, (WVV + Mm[VM[232]] - m.mvN / 2 - NNvmV.mvN / 2 - 0.5) * vW, (NVM + Mm[VM[249]] - wn) * vW, NNvmV.mvN * vW, NNvmV.wmm * vW);
            if (m[VM[255]] !== 0 && m[VM[104]] !== 0) {
              WV[VM[134]](m, (WVV + Mm[VM[232]] - m.mvN / 2 + NNvmV.mvN / 2) * vW, (NVM + Mm[VM[249]] - wn) * vW, m.mvN * vW, m.wmm * vW);
            }
          } else {
            nW.nvW = -1;
          }
        }
      }
      ;
      ;
      function nVVmV(wWN, Wv, mM, MmNNV, vvVvN, VWvmv, mmVWN) {
        var Vv = VnMmm[wWN[VM[60]]];
        var m = Vv.m;
        if (m.n !== 1) {
          Vv.m = MW.Mvw(Vv[VM[58]], Vv.m);
          return;
        }
        var MnnVm = VWvmv - wWN.Wv;
        var WwNNN = mmVWN - wWN.mM;
        var NmvWv = Wv + Vv.mwM[VM[126]] - MnnVm;
        var vwmWm = mM + Vv.mwM[0][VM[126]] - WwNNN;
        var wNVVN = 0;
        var VMvWv = 0;
        for (var vNw = Wv, WmWnv = 0; vNw < NmvWv; vNw++, WmWnv++) {
          if (vNw >= WVWVv) {
            wNVVN = Vv.mwM[VM[126]] - WmWnv;
            break;
          }
          for (var mvm = mM, MvnMn = 0; mvm < vwmWm; mvm++, MvnMn++) {
            if (mvm >= nNnWv) {
              VMvWv = Vv.mwM[0][VM[126]] - MvnMn;
              break;
            } else {
              mNVMM[vNw][mvm] = vWW;
            }
          }
        }
        var nN = 0;
        var wn = 0;
        var ww = 0;
        var MN = 0;
        if (wNVVN !== 0 || VMvWv !== 0) {
          nN = ((wWN.mM + WwNNN) * wVw + WVV) * vW;
          wn = ((wWN.Wv + MnnVm) * wVw + NVM) * vW;
          MnnVm *= 32;
          WwNNN *= 32;
          ww = m[VM[104]] - wNVVN * 32 + MnnVm;
          MN = m[VM[255]] - VMvWv * 32 + WwNNN;
        } else {
          nN = ((wWN.mM + WwNNN) * wVw + WVV) * vW;
          wn = ((wWN.Wv + MnnVm) * wVw + NVM) * vW;
          MnnVm *= 32;
          WwNNN *= 32;
          ww = m[VM[104]] - MnnVm;
          MN = m[VM[255]] - WwNNN;
        }
        WV[VM[134]](m, WwNNN, MnnVm, MN, ww, nN, wn, MN * 3 * vW, ww * 3 * vW);
      }
      ;
      ;
      function NWMwM() {
        nmmwN = MW.vmm(nmmwN, Vw[VM[236]] + MMnvv[0] + MMnvv[1] + MMnvv[2] + MMnvv[3], VNMnw);
        mnMwn = vW;
        vW += nmmwN * vW;
        VVwwM = MVM / vW;
        mWNvm = Vnv / vW;
      }
      ;
      ;
      function mVNwM() {
        var wwW = nNV.wVN[wWm];
        var nNn = nNV[VM[216]][wWm];
        var MwV = nNn[VM[216]];
        for (var Wv = 0; Wv < MwV; Wv++) {
          var nW = wwW[nNn.Wmn[Wv]];
          if (nW.nMV === Mv.nW[VM[5]]) {
            if (vVV.NMM(Mv.nW[VM[232]], Mv.nW[VM[249]], nW[VM[232]], nW[VM[249]]) < 1) {
              mvWWM = Math[VM[144]](0, mvWWM - nv);
            } else {
              mvWWM = nwVVW;
            }
            var VNN = nWw[wWm].wWmWN[nW.MNM & 255];
            var wnN = Mv.wnN;
            if (VNN.wNn !== undefined) {
              wnN.wNn.Mmmwm = VNN.wNn;
              wnN.NMv.Mmmwm = VNN.vwm;
            } else {
              wnN.wNn.Mmmwm = 0;
              wnN.NMv.Mmmwm = 0;
            }
            vVn = nW[VM[232]];
            Wnn = nW[VM[249]];
            Mv.nW[VM[232]] = nW[VM[232]];
            Mv.nW[VM[249]] = nW[VM[249]];
            Mv.nW.vNw = nW.Wv;
            Mv.nW.mvm = nW.mM;
            Mv.nW.nvN = nWw[wWm].NMmnw[nW.MNM >> 8 & 255][VM[60]] === 6 ? 1 : 0;
            var NWWnV = Math[VM[241]](MMWwN, wwwmw);
            if (mvv.nMW > NWWnV) {
              NWWnV = mNNvn * Math[VM[241]]((mvv.nMW - NWWnV) / NWWnV, 1);
            } else {
              NWWnV = 0;
            }
            var nN = NWWnV * Math[VM[178]](mvv[VM[246]]);
            var wn = NWWnV * Math[VM[142]](mvv[VM[246]]);
            VwMnn = MW.vmm(VwMnn, nN, mwMMW);
            wNVMM = MW.vmm(wNVMM, wn, mwMMW);
            var nNVNv = 0;
            var MNmvM = 0;
            if (Vw.mVvMn > 0) {
              Vw.mVvMn -= 1;
              nNVNv += Math[VM[185]]() * 6 - 3;
              MNmvM += Math[VM[185]]() * 6 - 3;
            }
            if (Vw.NmMmM > 0) {
              Vw.NmMmM -= 1;
              nNVNv += Math[VM[185]]() * 18 - 9;
              MNmvM += Math[VM[185]]() * 18 - 9;
            }
            WVV = mVV / vW - nW[VM[232]] - VwMnn + nNVNv;
            NVM = nnW / vW - nW[VM[249]] - wNVMM + MNmvM;
            NvVVV = nW[VM[232]] + VwMnn;
            wnnnm = nW[VM[249]] + wNVMM;
            return;
          }
        }
      }
      ;
      ;
      function NWmnm() {
        for (var Wv = 0; Wv < Mv.nW.WnW[VM[126]]; Wv++) {
          if (Mv.nW.WnW[Wv] !== 0) {
            return 0;
          }
        }
        return 1;
      }
      ;
      function mvvvM() {
        if (Mv.nW.nvN === 1) {
          if (Mv.nW.mwM > 0 && (Mv.nW.VVnWm !== Mv.nW.vNw || Mv.nW.wNmWN !== Mv.nW.mvm)) {
            for (var Wv = 0; Wv < Mv.nW.WnW[VM[126]]; Wv++) {
              if (Mv.nW.WnW[Wv] === 0) {
                Mv.nW.WnW[Wv] = Mv.nW.mwM;
                Mv.nW.VvnnM[Wv] = Mv.nW.VVnWm;
                Mv.nW.MWwWv[Wv] = Mv.nW.wNmWN;
                break;
              }
            }
            Mv.nW.mwM = 0;
            Mv.nW.VVnWm = Mv.nW.vNw;
            Mv.nW.wNmWN = Mv.nW.mvm;
          }
          Mv.nW.mwM = Math[VM[241]](NVwnN, Mv.nW.mwM + nv);
          for (var Wv = 0; Wv < Mv.nW.WnW[VM[126]]; Wv++) {
            Mv.nW.WnW[Wv] = Math[VM[144]](0, Mv.nW.WnW[Wv] - nv);
          }
        } else if (Mv.nW.mwM === 0 && NWmnm() === 1) {
          return;
        } else {
          Mv.nW.mwM = Math[VM[144]](0, Mv.nW.mwM - nv);
          for (var Wv = 0; Wv < Mv.nW.WnW[VM[126]]; Wv++) {
            Mv.nW.WnW[Wv] = Math[VM[144]](0, Mv.nW.WnW[Wv] - nv);
          }
        }
        if (NwvnW.n !== 1) {
          NwvnW = MW.Mvw(wnnww, NwvnW);
          return;
        }
        WV[VM[149]] = Mv.nW.mwM / NVwnN;
        var wn = vW * (Mv.nW.VVnWm * wVw + NVM + Vvn);
        var nN = vW * (Mv.nW.wNmWN * wVw + WVV + Vvn);
        var MN = vW * NwvnW[VM[255]] / 2;
        var ww = vW * NwvnW[VM[104]] / 2;
        WV[VM[134]](NwvnW, nN - MN / 2, wn - ww / 2, MN, ww);
        WV[VM[149]] = 1;
        for (var Wv = 0; Wv < Mv.nW.WnW[VM[126]]; Wv++) {
          if (Mv.nW.WnW[Wv] > 0) {
            WV[VM[149]] = Mv.nW.WnW[Wv] / NVwnN;
            var wn = vW * (Mv.nW.VvnnM[Wv] * wVw + NVM + Vvn);
            var nN = vW * (Mv.nW.MWwWv[Wv] * wVw + WVV + Vvn);
            var MN = vW * NwvnW[VM[255]] / 2;
            var ww = vW * NwvnW[VM[104]] / 2;
            WV[VM[134]](NwvnW, nN - MN / 2, wn - ww / 2, MN, ww);
            WV[VM[149]] = 1;
          }
        }
      }
      ;
      ;
      function WnMNV() {
        var MmNNV = Math[VM[241]](wmW[VM[104]] - WVWVv, Math[VM[144]](0, (vnvvv - WVWVv) / 2 + Math[VM[61]](wnnnm / wVw - WVWVv / 2) + 1));
        var vvVvN = Math[VM[241]](wmW[VM[255]] - nNnWv, Math[VM[144]](0, (VmwVv - nNnWv) / 2 + Math[VM[61]](NvVVV / wVw - nNnWv / 2) + 1));
        var ww = MmNNV + WVWVv;
        var MN = vvVvN + nNnWv;
        for (var Wv = MmNNV; Wv < ww; Wv++) {
          for (var mM = vvVvN; mM < MN; mM++) {
            var Mm = wmW.nnMVV[Wv][mM];
          }
        }
      }
      ;
      ;
      function nwVwn(Mm) {
        var nW = Mv.wwW[Mm.nMV];
        if (nW !== undefined && nW.nMvwm[VM[126]] > 0) {
          if (nW.vvmmm >= WWvNN) {
            nW.vvmmm = 0;
          }
          var mVw = nW.vvmmm;
          var mvW = nW.vvWMW[0];
          var vv = nW.nMvwm[0];
          if (mVw === 0) {
            var nMW = vVV.nMW(Mm[VM[232]], Mm[VM[249]], vVn, Wnn);
          }
          nW.vvmmm += nv;
          if (nW.vvmmm >= WWvNN) {
            nW.vvmmm = 0;
            nW.vvWMW[VM[12]]();
            nW.nMvwm[VM[12]]();
          }
          var m = NmmvV[vv][mvW];
          if (m.n !== 1) {
            NmmvV[vv][mvW] = MW.Mvw(VvmMN + vv + "_" + mvW + ".png", m);
            return;
          }
          var VN = 0;
          if (mVw < vmvmw) {
            var mvnNM = mVw / vmvmw;
            WV[VM[149]] = mvnNM;
            VN = (1 - mvnNM) * 15;
          } else if (mVw > nNnvM) {
            var mWVVm = (WWvNN - mVw) / (WWvNN - nNnvM);
            WV[VM[149]] = mWVVm;
            VN = (mWVVm - 1) * 40;
          }
          WV[VM[134]](m, (WVV + Mm[VM[232]] - 120) * vW, (NVM + Mm[VM[249]] + (VN - 45)) * vW, m[VM[255]] * vW / 2, m[VM[104]] * vW / 2);
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function mnMVW(Mm) {
        var nW = Mv.wwW[Mm.nMV];
        for (var Wv = 0; Wv < nW.vWNnw[VM[126]]; Wv++) {
          var MNV = nW.vWNnw[Wv];
          if (Wv > 0 && MNV.mVw <= 0) {
            var NnMNw = nW.vWNnw[Wv - 1];
            if (NnMNw.mVw > 500 || NnMNw.mVw <= 0) {
              continue;
            }
          }
          if (Mm.mMw > nWw[wWm].mMw || MNV.mVw > 0) {
            var NMW = nWw[wWm].vWNnw;
            var m = NMW.m;
            if (m.n !== 1) {
              NMW.m = MW.Mvw(NMW[VM[58]], NMW.m);
              return;
            }
            if (MNV.mVw <= 0) {
              MNV.mVw = 750;
              MNV[VM[246]] = Math[VM[185]]() * WwNwv;
              MNV[VM[232]] = Mm[VM[232]];
              MNV[VM[249]] = Mm[VM[249]];
              MNV[VM[242]] = 1 + Math[VM[185]]() * 0.8;
            } else {
              MNV.mVw -= nv;
            }
            var Ww = wMM.vNv.Nmn(Math[VM[144]](0, MNV.mVw / 750));
            var Wmv = vW * (MNV[VM[242]] + 1) * Ww * m[VM[255]] / 7;
            var mvN = -Wmv / 2;
            WV[VM[30]]();
            WV[VM[101]]((WVV + MNV[VM[232]]) * vW, (NVM + MNV[VM[249]]) * vW);
            WV[VM[129]](MNV[VM[246]]);
            WV[VM[149]] = Math[VM[144]](0, Ww * Ww);
            WV[VM[134]](m, mvN, mvN, Wmv, Wmv);
            WV[VM[235]]();
          }
        }
      }
      ;
      ;
      function wwvMV(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var Vwm = 0;
        var VnvMw = Mm[VM[102]] & 254;
        var vmM = VV.WWN;
        var wNm = VV.Vmm;
        if (VnvMw === 4) {
          if (nW.vNN === -1) {
            var vnnNM = Mm.MNM >> 8 & 255;
            if (wN.mn.NmW[vnnNM] !== 0 && Vw.nWW - nW.mmNMW > 800) {
              nW.mmNMW = Vw.nWW;
              var NvWnM = Math[VM[61]](Math[VM[185]]() * VV.NVN);
              wN.Vww(wN.mn.NmW[vnnNM][NvWnM], VV.MVW, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 4, VV.mVn);
            }
            nW.vNN = 0;
          }
          if (nW.NnNmW === 1) {
            nW.vNN = Math[VM[144]](0, nW.vNN - nv);
          } else {
            nW.vNN = Math[VM[241]](VV.Vnw, nW.vNN + nv);
          }
          var Ww = nW.vNN / VV.Vnw;
          Vwm = Ww * VV.Vwm;
          if (nW.vNN === 0 || nW.vNN === VV.Vnw) {
            nW.NnNmW *= -1;
          }
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.vNN = -1;
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          nW.vNN = -1;
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, vmM[VM[246]] + Mm[VM[246]], vmM[VM[232]] + VN * nW[VM[110]] + Vwm + NV, vmM[VM[249]], mw);
        NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -wNm[VM[246]] + Mm[VM[246]], wNm[VM[232]] + VN * nW[VM[110]] + Vwm + NV, wNm[VM[249]], mw);
        var mV = VV.VV;
        MW.NN(mV, nN, wn, Mm[VM[246]], mV[VM[232]] + VN * nW[VM[110]] + NV + Vwm, mV[VM[249]], mw);
        if (Mm.wvv > 0) {
          var wwv = 1;
          Mm.wvv -= nv;
          var Ww = 0;
          if (Mm.wvv > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.wvv) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.wvv / 150);
            wwv += (1 - Ww) * 0.2;
          }
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.NwN, nN, wn, Mm[VM[246]], 0, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]], 0, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]], 0, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]], 0, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]], 0, 0, mw);
        }
      }
      ;
      ;
      function WWVmn(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var Vwm = 0;
        var wmv = 0;
        var mVM = 0;
        var MNV = -1;
        var vmM = VV.WWN;
        var wNm = VV.Vmm;
        var WMNWv = nW.WMNWv;
        if (Mm.wnn > 0) {
          if (Mm.wnn === Mm.wnM) {
            for (var Wv = 0; Wv < WMNWv[VM[126]]; Wv++) {
              var wwN = WMNWv[Wv];
              if (wwN.mVw <= 0) {
                wwN[VM[60]] = VV.wwN;
                wwN.mVw = VV.vNVvW;
                wwN[VM[232]] = nN + Math[VM[178]](Mm[VM[246]]) * 44;
                wwN[VM[249]] = wn + Math[VM[142]](Mm[VM[246]]) * 44;
                var VW = -Math[VM[99]] / 2.5 + Mm[VM[246]] + Math[VM[185]]() * -Math[VM[99]] / 3.5;
                wwN.VNWMm = Math[VM[178]](VW);
                wwN.nVWvV = Math[VM[142]](VW);
                break;
              }
            }
          }
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
          var Ww = Mm.wnn > 80 ? 1 - (Mm.wnn - 80) / 100 : Mm.wnn / 80;
          if (VV.mvV === 0) {
            var mWWWV = NMW.mNn[VV.mNn][VM[126]];
            for (var mNn = 0; mNn < mWWWV; mNn++) {
              if (Mm.wnn > VV.mVw - (mNn + 1) * 30) {
                MNV = mNn;
                break;
              }
            }
          }
          mVM = Ww * VV.mVM;
          wmv = Ww * VV.wmv;
          Vwm = Ww * VV.Vwm;
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, vmM[VM[246]] + Mm[VM[246]], vmM[VM[232]] + VN * nW[VM[110]] + Vwm + NV, vmM[VM[249]], mw);
        NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -wNm[VM[246]] + Mm[VM[246]], wNm[VM[232]] + VN * nW[VM[110]] + Vwm + NV, wNm[VM[249]], mw);
        var mV = VV.VV;
        if (MNV >= 0 && VV.mvV === 0) {
          var mNn = NMW.mNn[VV.mNn][MNV];
          MW.NN(mNn, nN, wn, Mm[VM[246]], mV[VM[232]] + VN * nW[VM[110]] + NV + wmv + VV.Wmw, mV[VM[249]], mw);
        }
        MW.NN(mV, nN, wn, Mm[VM[246]], mV[VM[232]] + VN * nW[VM[110]] + NV + wmv, mV[VM[249]], mw);
        for (var Wv = 0; Wv < WMNWv[VM[126]]; Wv++) {
          var wwN = WMNWv[Wv];
          if (wwN.mVw > 0) {
            wwN[VM[232]] += nv * wwN.VNWMm * 0.18;
            wwN[VM[249]] += nv * wwN.nVWvV * 0.18;
            if (wwN.mVw < 200 && WV[VM[149]] === 1) {
              WV[VM[149]] = wMM.vNv.VWN(wwN.mVw / 200);
              MW.NN(NMW.WMNWv[wwN[VM[60]]], wwN[VM[232]], wwN[VM[249]], wwN.mVw * 0.007, 0, 0, mw);
              WV[VM[149]] = 1;
            } else {
              MW.NN(NMW.WMNWv[wwN[VM[60]]], wwN[VM[232]], wwN[VM[249]], wwN.mVw * 0.007, 0, 0, mw);
            }
            wwN.mVw -= nv;
          }
        }
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]], mVM, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]], mVM, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]], mVM, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]], mVM, 0, mw);
        }
      }
      ;
      ;
      function vVVVn(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var nww = 0;
        var vmV = 0;
        var mMW = 0;
        var WMw = 0;
        if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
          Ww = Mm.wnn > VV.WWn ? 1 - (Mm.wnn - VV.WWn) / (VV.mVw - VV.WWn) : Mm.wnn / VV.WWn;
          nww = -wMM.vNv.wvN(Ww) * 0.35;
          WMw = Ww * 3;
          mMW = -Ww * 20;
          vmV = Ww * 3;
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var mNMWm = VV.mNMWm * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var Nwm = VV.WWN;
        var NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, Nwm[VM[246]] + Mm[VM[246]] - nww, Nwm[VM[232]] - VN * nW[VM[110]] + mMW + mNMWm, Nwm[VM[249]], mw);
        if (Mm.wnn > 0) {
          var WVNvw = VV.WVNvw;
          MW.NN(WVNvw, nN, wn, Mm[VM[246]], WVNvw[VM[232]] - VN * nW[VM[110]] + mNMWm + mMW, WVNvw[VM[249]], mw);
        }
        var mV = VV.VV;
        MW.NN(mV, nN, wn, mV[VM[246]] + Mm[VM[246]], mV[VM[232]] + VN * nW[VM[110]] + NV + vmV, mV[VM[249]], mw);
        Nwm = VV.Vmm;
        NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -Nwm[VM[246]] + Mm[VM[246]], Nwm[VM[232]] + VN * nW[VM[110]] + vmV + NV, Nwm[VM[249]], mw);
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, mw);
        }
      }
      ;
      ;
      function nNvvV(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var nww = 0;
        var vmV = 0;
        var mMW = 0;
        var WMw = 0;
        if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
          Ww = Mm.wnn > VV.WWn ? 1 - (Mm.wnn - VV.WWn) / (VV.mVw - VV.WWn) : Mm.wnn / VV.WWn;
          nww = -wMM.vNv.wvN(Ww) * 0.55;
          WMw = Ww * 3;
          mMW = -Ww * 25;
          vmV = Ww * 10;
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var Nwm = VV.Vmm;
        var NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -Nwm[VM[246]] + Mm[VM[246]] - NV - nww, Nwm[VM[232]] - VN * nW[VM[110]] + vmV, Nwm[VM[249]], mw);
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]] - nww / 1.5, WMw, 0, mw);
        }
        var mNMWm = VV.mNMWm * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        Nwm = VV.WWN;
        NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, Nwm[VM[246]] + Mm[VM[246]], Nwm[VM[232]] + VN * nW[VM[110]] + mMW + mNMWm, Nwm[VM[249]], mw);
        var mV = VV.VV;
        MW.NN(mV, nN, wn, mV[VM[246]] + Mm[VM[246]], mV[VM[232]] + VN * nW[VM[110]] + mNMWm + mMW, mV[VM[249]], mw);
      }
      ;
      ;
      function WMWWn(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var nww = 0;
        var vmV = 0;
        var mMW = 0;
        var WMw = 0;
        var vmM = VV.WWN;
        var wNm = VV.Vmm;
        if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
          Ww = Mm.wnn > VV.WWn ? 1 - (Mm.wnn - VV.WWn) / (VV.mVw - VV.WWn) : Mm.wnn / VV.WWn;
          nww = -wMM.vNv.wvN(Ww) * 0.4;
          WMw = Ww * 3;
          vmV = Ww * wNm.nMW;
          mMW = Ww * vmM.nMW;
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var mV = VV.VV;
        MW.mnnmv(mV, nN, wn, mV[VM[246]] + Mm[VM[246]] + NV, mV[VM[232]] + VN * nW[VM[110]], mV[VM[249]], mw, nww * mV.VNm, mV[VM[139]], mV[VM[34]]);
        var NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, vmM[VM[246]] + Mm[VM[246]] + NV + nww * vmM.VNm, vmM[VM[232]] + VN * nW[VM[110]] + mMW, vmM[VM[249]], mw);
        NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -wNm[VM[246]] + Mm[VM[246]] + NV + nww * wNm.VNm, wNm[VM[232]] + VN * nW[VM[110]] + vmV, wNm[VM[249]], mw);
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, mw);
        }
      }
      ;
      ;
      function nnnnM(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var vmV = 0;
        var mMW = 0;
        if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var Nwm = VV.WWN;
        var NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, Nwm[VM[246]] + Mm[VM[246]] + NV, Nwm[VM[232]] + VN * nW[VM[110]] + mMW, Nwm[VM[249]], mw);
        Nwm = VV.Vmm;
        NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -Nwm[VM[246]] + Mm[VM[246]] - NV, Nwm[VM[232]] - VN * nW[VM[110]] + vmV, Nwm[VM[249]], mw);
        MW.NN(VV.Nnw, nN, wn, -Nwm[VM[246]] + Mm[VM[246]] - NV + Math[VM[99]] / 3, Nwm[VM[232]] - VN * nW[VM[110]] + vmV - 40, Nwm[VM[249]] - 15, mw);
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]], 0, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]], 0, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]], 0, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]], 0, 0, mw);
        }
        MW.NN(VV.WwVWV, nN, wn, Mm[VM[246]], 0, 0, mw);
      }
      ;
      ;
      var VWVMM = [0, 0, 0, 0];
      function vMNMn() {
        var MvvVM = 0;
        if (Mv.nW.nvN === 1 && Mv.nW.Nnw !== 0) {
          var mV = wWw[Mv.nW.Nnw];
          if (mV.nvm !== 0) {
            mV = mV.nvm[Mv.nW.mVVnW];
            mV.MNW = mV.Vv;
            mV.Nnw = mV.Vv;
            mV.mWN = VWVMM;
            mV.wVW = VWVMM;
          }
          var VW = mvv[VM[246]];
          var Wn = mV.vWV === 1 ? 0 : Mv.nW.NMvmW;
          Mv.nW.Vmn = Mv.nW.mvm + Math[VM[61]]((Vvn + Math[VM[178]](VW) * wVw) / wVw);
          Mv.nW.VnW = Mv.nW.vNw + Math[VM[61]]((Vvn + Math[VM[142]](VW) * wVw) / wVw);
          var nN = mV.mWN[Wn] + WVV + Vvn + wVw * Mv.nW.Vmn;
          var wn = mV.wVW[Wn] + NVM + Vvn + wVw * Mv.nW.VnW;
          if (Mv.nW.Vmn >= 0 && Mv.nW.VnW >= 0 && Mv.nW.Vmn < vvv && Mv.nW.VnW < Vvw) {
            var Nmv = wNM[Mv.nW.VnW][Mv.nW.Vmn];
            var nvW = Mv.nW.nvW === -1 ? -2 : Mv.nW.nvW;
            if (Nmv.wWN === vWW && (mV.VvN !== 2 || Nmv.mWw === 0 || Nmv.Mnv === vn.wwwNW)) {
              Mv.nW.vNNVn = 0;
              MW.NN(mV.MNW, nN, wn, Wn * vNM, 0, 0, 1);
            } else if ((mV[VM[213]].Mnv === vn.wwwNW || mV.VvN === 2 || Nmv.nMV !== 0 && Nmv.nMV !== Mv.nW[VM[5]] && Mv.wwW[Nmv.nMV].nvW !== nvW) && Nmv.vWvVm === vWW) {
              Mv.nW.vNNVn = 0;
              MW.NN(mV.MNW, nN, wn, Wn * vNM, 0, 0, 1);
            } else if (mV.VMwMM !== undefined && (Wn % 2 === 0 && (Mv.nW.VnW < 1 || Mv.nW.VnW >= Vvw - 1 || wNM[Mv.nW.VnW + 1][Mv.nW.Vmn].wWN === vWW || wNM[Mv.nW.VnW + 1][Mv.nW.Vmn].vWvVm === vWW && wNM[Mv.nW.VnW + 1][Mv.nW.Vmn].nMV !== Mv.nW[VM[5]] && wNM[Mv.nW.VnW + 1][Mv.nW.Vmn].nMV !== 0 && Mv.wwW[wNM[Mv.nW.VnW + 1][Mv.nW.Vmn].nMV].nvW !== nvW || wNM[Mv.nW.VnW - 1][Mv.nW.Vmn].wWN === vWW || wNM[Mv.nW.VnW - 1][Mv.nW.Vmn].vWvVm === vWW && wNM[Mv.nW.VnW - 1][Mv.nW.Vmn].nMV !== Mv.nW[VM[5]] && wNM[Mv.nW.VnW - 1][Mv.nW.Vmn].nMV !== 0 && Mv.wwW[wNM[Mv.nW.VnW - 1][Mv.nW.Vmn].nMV].nvW !== nvW) || Wn % 2 === 1 && (Mv.nW.Vmn < 1 || Mv.nW.Vmn >= vvv - 1 || wNM[Mv.nW.VnW][Mv.nW.Vmn + 1].wWN === vWW || wNM[Mv.nW.VnW][Mv.nW.Vmn + 1].vWvVm === vWW && wNM[Mv.nW.VnW][Mv.nW.Vmn + 1].nMV !== Mv.nW[VM[5]] && wNM[Mv.nW.VnW][Mv.nW.Vmn + 1].nMV !== 0 && Mv.wwW[wNM[Mv.nW.VnW][Mv.nW.Vmn + 1].nMV].nvW !== nvW || wNM[Mv.nW.VnW][Mv.nW.Vmn - 1].wWN === vWW || wNM[Mv.nW.VnW][Mv.nW.Vmn - 1].vWvVm === vWW && wNM[Mv.nW.VnW][Mv.nW.Vmn - 1].nMV !== Mv.nW[VM[5]] && wNM[Mv.nW.VnW][Mv.nW.Vmn - 1].nMV !== 0 && Mv.wwW[wNM[Mv.nW.VnW][Mv.nW.Vmn - 1].nMV].nvW !== nvW || Mv.nW.vNw === Mv.nW.VnW))) {
              Mv.nW.vNNVn = 0;
              MW.NN(mV.MNW, nN, wn, Wn * vNM, 0, 0, 1);
            } else {
              Mv.nW.vNNVn = 1;
              MW.NN(mV.Nnw, nN, wn, Wn * vNM, 0, 0, 1);
            }
          }
          if (vWvnN.n !== 1) {
            vWvnN = MW.Mvw(MmMWn, vWvnN);
            return;
          }
          if (mV.vWV === 1 || Mv.nW.vVM >= 0) {
            MvvVM = Math[VM[144]](0, Mv.nW.vWvnN - nv);
          } else {
            MvvVM = Math[VM[241]](900, Mv.nW.vWvnN + nv);
          }
        } else {
          MvvVM = Math[VM[144]](0, Mv.nW.vWvnN - nv);
        }
        if (MvvVM > 0) {
          WV[VM[149]] = wMM.vNv.VWN(Math[VM[144]](0, MvvVM - 600) / 300);
          var mw = vW + nmmwN * vW;
          var WMvVN = mw / vW;
          var MN = vW * vWvnN[VM[255]] / 2;
          var ww = vW * vWvnN[VM[104]] / 2;
          WV[VM[134]](vWvnN, (WVV + vVn) * vW - MN / 2, Math[VM[144]](vW * 10, (NVM + Wnn) * vW - ww / 2 - vW * 65 - vW * 60), MN, ww);
          WV[VM[149]] = 1;
        }
        Mv.nW.vWvnN = MvvVM;
      }
      ;
      ;
      function mvwMM(NMW, VV, VNN, Mm, mw, nN, wn) {
        var nW = Mv.wwW[Mm.nMV];
        var Nvn = 0;
        var VWM = nW.VWM - Vw.nWW;
        var VnN = nW.VnN - Vw.nWW;
        if (VWM > 0) {
          if (VnN > 0) {
            Nvn = 3;
          } else if (nW.VnN > 0) {
            Nvn = 5;
          } else {
            Nvn = 1;
          }
        } else if (VnN > 0) {
          Nvn = 2;
        } else if (nW.VnN > 0) {
          Nvn = 4;
        }
        var mmw = NMW.wnnWM[Nvn];
        var nww = 0;
        var vmV = 0;
        var mMW = 0;
        var WMw = 0;
        if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
          Mm.wnn = Math[VM[241]](Mm.wnn, VV.mVw);
          Ww = Mm.wnn > VV.WWn ? 1 - (Mm.wnn - VV.WWn) / (VV.mVw - VV.WWn) : Mm.wnn / VV.WWn;
          nww = nW.NnNmW * wMM.vNv.wvN(Ww) * 0.55;
          WMw = Ww * 3;
          if (nW.NnNmW === 1) {
            vmV = Ww * 25;
          } else {
            mMW = Ww * 25;
          }
          if (Mm.wnn === 0) {
            nW.NnNmW *= -1;
          }
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          nW.NV = (nW.NV + nv) % 1500;
          if (nW.VN !== 0) {
            if (nW.VN < 400) {
              nW.VN = 800 - nW.VN;
            }
            nW.VN = nW.VN + nv;
            if (nW.VN > 800) {
              nW.VN = 0;
            }
          }
        } else {
          if (Mm.mMw > nWw[wWm].mMw) {
            nW.VN = nW.VN + nv * 1.9;
          } else {
            nW.VN = nW.VN + nv;
          }
          if (nW.VN > 800) {
            nW[VM[110]] *= -1;
            nW.VN = nW.VN % 800;
          }
          if (nW.NV !== 0) {
            if (nW.NV < 750) {
              nW.NV = 1500 - nW.NV;
            }
            nW.NV = nW.NV + nv;
            if (nW.NV > 1500) {
              nW.NV = 0;
            }
          }
        }
        var NV = VV.NV * (nW.NV < 750 ? nW.NV / 750 : 1 - (nW.NV - 750) / 750);
        var VN = VV.VN * (nW.VN < 400 ? nW.VN / 400 : 1 - (nW.VN - 400) / 400);
        var Nwm = VV.WWN;
        var NMV = VNN.WWN === undefined ? mmw.WWN : VNN.WWN;
        MW.NN(NMV, nN, wn, Nwm[VM[246]] + Mm[VM[246]] + NV + nww, Nwm[VM[232]] + VN * nW[VM[110]] + mMW, Nwm[VM[249]], mw);
        Nwm = VV.Vmm;
        NMV = VNN.Vmm === undefined ? mmw.Vmm : VNN.Vmm;
        MW.NN(NMV, nN, wn, -Nwm[VM[246]] + Mm[VM[246]] - NV + nww, Nwm[VM[232]] - VN * nW[VM[110]] + vmV, Nwm[VM[249]], mw);
        if (Mm.wvv > 0) {
          var wwv = 1;
          Mm.wvv -= nv;
          var Ww = 0;
          if (Mm.wvv > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.wvv) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.wvv / 150);
            wwv += (1 - Ww) * 0.2;
          }
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.NwN, nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 3;
          wn += Math[VM[142]](Mm.NNw) * Ww * 3;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(NMW.MvW, nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        if (Mm.wNV > 0) {
          var wwv = 1;
          Mm.wNV -= nv;
          if (Mm.wNV > 150) {
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, wMM.vNv.vvW((300 - Mm.wNV) / 300)));
          } else {
            var Ww = wMM.vNv.VWN(Mm.wNV / 150);
            wwv += (1 - Ww) * 0.2;
            WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          }
          MW.NN(NMW.wNV, nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(mmw[VM[91]], nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, mw);
        if (VNN[VM[91]] !== undefined) {
          MW.NN(VNN[VM[91]], nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, mw);
        }
      }
      ;
      ;
      function VVnwM(Mm) {
        var wnW = vmN[Mm.MNM & 15];
        wNM[Mm.Wv][Mm.mM].wWN = vWW;
        wNM[Mm.Wv][Mm.mM].mWw = Mm.nMV;
        wNM[Mm.Wv][Mm.mM].Mnv = undefined;
        var mw = 1;
        var nN = WVV + Mm[VM[232]];
        var wn = NVM + Mm[VM[249]];
        if (Mm.mNM !== 0) {
          Mm.VnV += nv;
          var Ww = wMM.vNv.Nmn(1 - (Mm.VnV - 500) / 400);
          WV[VM[149]] = Math[VM[241]](Math[VM[144]](0, Ww), 1);
          MW.NN(wnW.VnV, nN, wn, Mm[VM[246]], 0, 0, 1);
          Ww = wMM.vNv.Nmn(1 - Mm.VnV / 400);
          mw = Math[VM[241]](1 + (1 - Ww) * 0.5, 1.5);
          WV[VM[149]] = Math[VM[144]](0, Ww);
        }
        if ((Mm.MNM & 16) === 16) {
          Mm.MNM &= ~16;
          Mm.MvW = 250;
          Mm.NNw = WwNwv * (Mm.MNM >> 5 & 31) / 31;
        }
        wnW.Mw(wnW, Mm, nN, wn, mw);
        if (Mm.mNM !== 0) {
          if (Mm.VnV > 900) {
            Mm.mNM = 2;
          }
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function wnnnw(Mm) {
        wNM[Mm.Wv][Mm.mM].wWN = vWW;
        wNM[Mm.Wv][Mm.mM].mWw = Mm.nMV;
        wNM[Mm.Wv][Mm.mM].Mnv = undefined;
        var NMW = nWw[wWm];
        var vnnNM = Mm.MNM >> 8 & 255;
        var VV = NMW.NMmnw[vnnNM];
        var VNN = NMW.wWmWN[Mm.MNM & 255];
        var mw = 1;
        var VnvMw = Mm[VM[102]] & 254;
        var nN = WVV + Mm[VM[232]];
        var wn = NVM + Mm[VM[249]];
        if (Mm.mNM !== 0) {
          Mm.VnV += nv;
          var Ww = wMM.vNv.Nmn(1 - (Mm.VnV - 500) / 400);
          WV[VM[149]] = Math[VM[241]](Math[VM[144]](0, Ww), 1);
          MW.NN(NMW.VnV, nN, wn, Mm[VM[246]], 0, 0, 1);
          Ww = wMM.vNv.Nmn(1 - Mm.VnV / 400);
          mw = Math[VM[241]](1 + (1 - Ww) * 0.5, 1.5);
          WV[VM[149]] = Math[VM[144]](0, Ww);
        }
        if (VnvMw === 2) {
          Mm[VM[102]] &= 65281;
          if (wN.mn.NmW[vnnNM] !== 0) {
            var NvWnM = Math[VM[61]](Math[VM[185]]() * VV.NVN);
            wN.Vww(wN.mn.NmW[vnnNM][NvWnM], VV.MVW, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 4, VV.mVn);
          }
          if (Mm.wnn <= 0) {
            Mm.wnn = VV.mVw;
            Mm.wnM = VV.mVw;
          }
        } else if (VnvMw === 6) {
          Mm[VM[102]] &= 65281;
        }
        switch (VV[VM[60]]) {
          case 0:
            mvwMM(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
          case 1:
            WMWWn(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
          case 2:
            WWVmn(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
          case 3:
            nNvvV(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
          case 4:
            vVVVn(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
          case 5:
            wwvMV(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
          case 6:
            nnnnM(NMW, VV, VNN, Mm, mw, nN, wn);
            break;
        }
        if (Mm.mNM !== 0) {
          if (Mm.VnV > 900) {
            Mm.mNM = 2;
          }
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function MwVWm() {
        if (Mv.nW.NNn !== 0) {
          return;
        }
        var VnNNN = Mv.nW.MmNnm;
        if (VnNNN > 0) {
          if (VnNNN < 500) {
            WV[VM[149]] = wMM.vNv.vvW(VnNNN / 500);
          } else if (VnNNN > 1500) {
            WV[VM[149]] = wMM.vNv.vvW(1 - (VnNNN - 1500) / 500);
          } else {
            WV[VM[149]] = 1;
          }
          var NNN = Mv.nW.MmnvM === 1 ? vVnWW : mnn[wWw[Mv.nW.MmnvM].nw];
          MW.NN(MmnvM, nWN, 50, 0, 0, 0, 1);
          MW.NN(NNN, nWN, 50, 0, 0, 0, 1);
          WV[VM[149]] = 1;
          Mv.nW.MmNnm -= nv;
        }
        var vVM = Mv.nW.vVM;
        switch (vVM) {
          case 0:
            if (nmVVN.n !== 1) {
              if (Mwv === 0) {
                nmVVN = MW.Mvw(NwmvN, nmVVN);
              } else {
                nmVVN = MW.Mvw(VWVVN, nmVVN);
              }
              return;
            }
            var mw = vW + nmmwN * vW;
            var WMvVN = mw / vW;
            var MN = vW * nmVVN[VM[255]] / 2;
            var ww = vW * nmVVN[VM[104]] / 2;
            var nN = (WVV + vVn) * mw - MN / 2;
            var wn = Math[VM[144]](vW * 10, (NVM + Wnn) * mw - ww / 2 - mw * 65 - vW * 60);
            if (Mwv === 1) {
              VNw.VVwwN = nN;
              VNw.nWvWv = wn;
              VNw.wnvnV = MN;
              VNw.NwNmV = ww;
            }
            WV[VM[134]](nmVVN, nN, wn, MN, ww);
            var nw = mnn[Mv.nW.nw];
            nN = (WVV + vVn) * WMvVN - MN / (vW * 2);
            wn = Math[VM[144]](10, (NVM + Wnn) * WMvVN - ww / (vW * 2) - WMvVN * 65 - 60);
            MW.NN(nw, nN + 77, wn + 33, nw[VM[246]], 0, 0, nw[VM[236]]);
            break;
          case 1:
            var Ww = Mv.nW.VMvwn / Mv.nW.NwnMN;
            var mVw = Mv.nW.NwnMN - Mv.nW.VMvwn;
            Mv.nW.VMvwn -= nv;
            if (Mv.nW.VMvwn < 0) {
              Mv.nW.vVM = -1;
              return;
            }
            if (NWMNN.n !== 1) {
              NWMNN = MW.Mvw(vMMWv, NWMNN);
              return;
            }
            if (vmvWw.n !== 1) {
              vmvWw = MW.Mvw(VvvMn, vmvWw);
              return;
            }
            if (NmwNm.n !== 1) {
              NmwNm = MW.Mvw(WwvWM, NmwNm);
              return;
            }
            var mw = vW + nmmwN * vW;
            var MN = vW * NWMNN[VM[255]] / 2;
            var ww = vW * NWMNN[VM[104]] / 2;
            var Vnm = (WVV + vVn) * mw;
            var vNV = (NVM + Wnn) * mw;
            var nN = Vnm - MN / 2;
            var wn = Math[VM[144]](mw * 10, vNV - ww / 2 - mw * 65 - vW * 60);
            if (mVw < 100) {
              WV[VM[149]] = mVw / 100;
            } else if (Mv.nW.VMvwn < 100) {
              WV[VM[149]] = Mv.nW.VMvwn / 100;
            }
            WV[VM[134]](NWMNN, nN, wn, MN, ww);
            WV[VM[30]]();
            WV[VM[101]](Vnm, Math[VM[144]](mw * 10 + ww / 2, vNV - mw * 65 - vW * 60));
            WV[VM[129]](-WwNwv * Ww);
            WV[VM[134]](vmvWw, -MN / 2, -ww / 2, MN, ww);
            WV[VM[235]]();
            WV[VM[134]](NmwNm, nN, wn, MN, ww);
            WV[VM[149]] = 1;
            break;
          case 2:
            var m = Mv.nW.vwNVn.m;
            if (m.n !== 1) {
              if (Mwv === 0) {
                Mv.nW.vwNVn.m = MW.Mvw(Mv.nW.vwNVn[VM[58]], m);
              } else {
                Mv.nW.vwNVn.m = MW.Mvw(Mv.nW.vwNVn[VM[58]][VM[107]]("e-", "e-mobile-"), m);
              }
              return;
            }
            var mw = vW + nmmwN * vW;
            var MN = vW * m[VM[255]] / 2;
            var ww = vW * m[VM[104]] / 2;
            var nN;
            if (Mv.nW.WmwVW === 1) {
              nN = (WVV + vVn - 5) * mw - MN;
            } else {
              nN = (WVV + vVn) * mw - MN / 2;
            }
            var wn = Math[VM[144]](vW * 10, (NVM + Wnn) * mw - ww / 2 - mw * 65 - vW * 60);
            if (Mwv === 1) {
              VNw.VVwwN = nN;
              VNw.nWvWv = wn;
              VNw.wnvnV = MN;
              VNw.NwNmV = ww;
            }
            WV[VM[134]](m, nN, wn, MN, ww);
            if (Mv.nW.WmwVW === 1) {
              if (Vwwwm.n !== 1) {
                if (Mwv === 0) {
                  Vwwwm = MW.Mvw(WvNMM, Vwwwm);
                } else {
                  Vwwwm = MW.Mvw(VWVVN, nmVVN);
                }
                return;
              }
              var WMvVN = mw / vW;
              MN = vW * Vwwwm[VM[255]] / 2;
              ww = vW * Vwwwm[VM[104]] / 2;
              nN += MN + vW * 10;
              wn = Math[VM[144]](vW * 10, (NVM + Wnn) * mw - ww / 2 - mw * 65 - vW * 60);
              if (Mwv === 1) {
                VNw.mwMmN = nN;
                VNw.wVNWv = wn;
              }
              WV[VM[134]](Vwwwm, nN, wn, MN, ww);
              var nw = mnn[Mv.nW.nw];
              nN = (WVV + vVn) * WMvVN + 5;
              wn = Math[VM[144]](10, (NVM + Wnn) * WMvVN - ww / (vW * 2) - WMvVN * 65 - 60);
              MW.NN(nw, nN + 77, wn + 33, nw[VM[246]], 0, 0, nw[VM[236]]);
            }
            break;
        }
      }
      ;
      ;
      var VvNWw = 0;
      var nVwNN = 0;
      var mVWWN = {
        id: -1,
        MWV: -1
      };
      function NMWWN(Mm, MV, nMW, WM) {
        if (MnWMv === WVwWN || MV === Nw.NnnVV) {
          return;
        } else if (MnWMv === mnVmN) {
          WM *= 3;
        }
        if (nNV[VM[216]][vnWWw][VM[216]] + WM >= vvWNm) {
          return;
        }
        for (var Wv = 0; Wv < WM; Wv++) {
          var W = Math[VM[185]]();
          var VW = W * 10 % 1 * WwNwv;
          var mNnVv = nMW + W * 10000 % 1 * 25;
          nMW += 8;
          nVwNN = (nVwNN + 1) % vvWNm;
          var MNMWn = nVwNN + nNV.mnMmV;
          VvNWw += 1;
          var MNv = nNV[VM[206]](0, MNMWn, VvNWw, vnWWw);
          mvvMm(MNv, 0, VvNWw, MNMWn, vnWWw, Mm.MvwWn, Mm.vNwwv, Mm.MvwWn + Math[VM[178]](VW) * mNnVv, Mm.vNwwv + Math[VM[142]](VW) * mNnVv, Math[VM[61]](W * wMV[MV][VM[126]]), W * 100 % 1 * 255, MV);
        }
      }
      ;
      ;
      function VmWnM(Mm) {
        var m = wMV[Mm[VM[102]]][Mm.MNM];
        if (Mm.VnV > 0) {
          Mm.VnV = Math[VM[241]](1, Mm.VnV + nv / 500);
          WV[VM[149]] = 1 - Mm.VnV;
          MW.NN(m, WVV + Mm[VM[232]], NVM + Mm[VM[249]], Mm[VM[246]], 0, 0, 1);
          WV[VM[149]] = 1;
          if (Mm.VnV === 1) {
            mVWWN[VM[5]] = Mm[VM[5]];
            mVWWN.MWV = Mm.MWV;
          }
          return;
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 0.01) {
          Mm.VnV = 0.001;
        }
        MW.NN(m, WVV + Mm[VM[232]], NVM + Mm[VM[249]], Mm[VM[246]], 0, 0, 1);
      }
      ;
      ;
      function vNnnM(mV, Mm, nN, wn, Wn, mw) {
        Mm.NV = (Mm.NV + nv) % 500;
        var Ww = Mm.NV / 500;
        var wwv = 0.95 + wMM.vNv.wvN(Ww) * 0.3;
        WV[VM[149]] = 1 - Ww;
        MW.NN(mV.Vv[1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, wwv);
        WV[VM[149]] = 1;
        MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function mNVMV(mV, Mm, nN, wn, Wn, mw) {
        var mMNnv = 0;
        var WmNnm = 1;
        if ((Mm[VM[102]] & 16) === 16) {
          WmNnm = 0;
        }
        if (Mm.nMV === Mv.nW[VM[5]] || Mv.nW.nvW !== -1 && Mv.nW.nvW === Mv.wwW[Mm.nMV].nvW && Mv.wwW[Mm.nMV].VVM === Mv.MWW[Mv.nW.nvW].MWV || vVV.NMM(vVn, Wnn, Mm[VM[232]], Mm[VM[249]]) < 52000) {
          mMNnv = 1;
        }
        if (WmNnm === 0) {
          if (Mm.wvv === 0) {
            NMWWN(Mm, mV.NNW, mV.mnM, 5);
          }
          if (Mm.wvv < 300) {
            nN += Math[VM[185]]() * 6 - 4;
            wn += Math[VM[185]]() * 6 - 4;
            Mm.wvv += nv;
          }
          if (Mm.NV > 0) {
            Mm.NV = Math[VM[144]](0, Mm.NV - nv / 5);
            WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
            MW.NN(mV[VM[176]][Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
            WV[VM[149]] = 1;
          }
          MW.NN(mV.MnmMv[Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else if (mMNnv === 1) {
          if (Mm.NV === 300) {
            MW.NN(mV[VM[176]][Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          } else {
            Mm.NV = Math[VM[241]](300, Mm.NV + nv);
            WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
            MW.NN(mV[VM[176]][Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
            WV[VM[149]] = 1;
          }
        } else if (mMNnv === 0 && Mm.NV > 0) {
          Mm.NV = Math[VM[144]](0, Mm.NV - nv / 5);
          WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
          MW.NN(mV[VM[176]][Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function nNMwn(mV, Mm, nN, wn, Wn, mw) {
        var mMNnv = 0;
        if (Mm.nMV === Mv.nW[VM[5]] || Mv.nW.nvW !== -1 && Mv.nW.nvW === Mv.wwW[Mm.nMV].nvW && Mv.wwW[Mm.nMV].VVM === Mv.MWW[Mv.nW.nvW].MWV || vVV.NMM(vVn, Wnn, Mm[VM[232]], Mm[VM[249]]) < 22500) {
          mMNnv = 1;
        }
        if (mMNnv === 1) {
          if (Mm.NV === 300) {
            MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          } else {
            Mm.NV = Math[VM[241]](300, Mm.NV + nv);
            WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
            MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
            WV[VM[149]] = 1;
          }
        } else if (mMNnv === 0 && Mm.NV > 0) {
          Mm.NV = Math[VM[144]](0, Mm.NV - nv / 5);
          WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
          MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function WmMNV(mV, Mm, nN, wn, Wn, mw) {
        var mMNnv = 0;
        if (Mm.nMV === Mv.nW[VM[5]] || Mv.nW.nvW !== -1 && Mv.nW.nvW === Mv.wwW[Mm.nMV].nvW && Mv.wwW[Mm.nMV].VVM === Mv.MWW[Mv.nW.nvW].MWV || vVV.NMM(vVn, Wnn, Mm[VM[232]], Mm[VM[249]]) < 52000) {
          mMNnv = 1;
        }
        if (mMNnv === 1) {
          if (Mm.NV === 300) {
            MW.NN(mV.Vv[Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          } else {
            Mm.NV = Math[VM[241]](300, Mm.NV + nv);
            WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
            MW.NN(mV.Vv[Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
            WV[VM[149]] = 1;
          }
        } else if (mMNnv === 0 && Mm.NV > 0) {
          Mm.NV = Math[VM[144]](0, Mm.NV - nv / 5);
          WV[VM[149]] = wMM.vNv.wvN(Mm.NV / 300);
          MW.NN(mV.Vv[Mm[VM[5]] % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function VWvVM(mV, Mm, nN, wn, Wn, mw) {
        MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function nNWwV(mV, Mm, nN, wn, Wn, mw) {
        MW.NN(mV.Vv[Mm.WnN], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function WnVvv(mV, Mm, nN, wn, Wn, mw) {
        if (Mm.WnN > 0) {
          MW.NN(mV.Nnv[Mm.WnN - 1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, 0, 0, 0, mw);
        } else {
          MW.NN(mV.Vv[nmwwn(Mm)], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, 0, 0, 0, mw);
        }
      }
      ;
      ;
      function WWm(mV, Mm, mnNvM) {
        if (Mm.mNM === 0 && Mv.nW.vVM !== 1 && Mv.nW.WVm !== 1 && (mnNvM === 0 || Mm.nMV === Mv.nW[VM[5]] || Mv.nW.nvW !== -1 && Mv.nW.nvW === Mv.wwW[Mm.nMV].nvW && Mv.wwW[Mm.nMV].VVM === Mv.MWW[Mv.nW.nvW].MWV)) {
          var nMW = vVV.NMM(vVn, Wnn, Mm[VM[232]], Mm[VM[249]]);
          if (nMW < mMnnw) {
            Mv.nW.MMw = mV.MMw;
            Mv.nW.NnvWW = Mm[VM[5]];
            Mv.nW.wnnvW = Mm.nMV;
            Mv.nW.mVmvW = mV.vVW;
            mMnnw = nMW;
            if (Mv.nW.vVM === 0) {
              Mv.nW.WmwVW = 1;
            }
            Mv.nW.vVM = 2;
            Mv.nW.vwNVn = mV.nnv;
            return 1;
          }
        }
        return 0;
      }
      ;
      ;
      function NvNNv(mV, Mm, nN, wn, Wn, mw) {
        MW.NN(mV.vvMVW, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, 1);
        var mvW = Mm[VM[102]] >> 4 & 15;
        if (Mm.wVv !== mvW) {
          Mm.wVv = mvW;
          Mm.NV = 0;
        }
        Mm.NV = Mm.NV + nv;
        Mm.wNV = (Mm.wNV + nv) % 1000;
        var mw = 1 + (Mm.wNV < 500 ? Mm.wNV / 500 : 1 - (Mm.wNV - 500) / 500) * 0.03;
        if (mvW === 0) {
          WV[VM[149]] = wMM.vNv.wvN(Mm.NV / mV.VWmNW);
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = 1;
        } else if (Mm.NV < mV.VWmNW) {
          var MWmnw = wMM.vNv.wvN(Mm.NV / mV.VWmNW);
          WV[VM[149]] = 1 - MWmnw;
          MW.NN(mV.Vv[mvW - 1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = MWmnw;
          MW.NN(mV.Vv[mvW], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = 1;
        } else {
          MW.NN(mV.Vv[mvW], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
      }
      ;
      ;
      function mWVNV(mV, Mm, nN, wn, Wn, mw) {
        var mvW = Mm[VM[102]] >> 4 & 15;
        Mm.NV = (Mm.NV + nv) % 1000;
        var mw = 1 + (Mm.NV < 500 ? Mm.NV / 500 : 1 - (Mm.NV - 500) / 500) * 0.01;
        MW.NN(mV.Vv[mvW], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function Nwvwm(mV, Mm, nN, wn, Wn, mw) {
        var mvW = Mm[VM[102]] >> 4 & 15;
        Mm.NV = (Mm.NV + nv) % 1000;
        var mw = 1 + (Mm.NV < 500 ? Mm.NV / 500 : 1 - (Mm.NV - 500) / 500) * 0.03;
        MW.NN(mV.Vv[mvW], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function NVnMV(mV, Mm, nN, wn, Wn, mw) {
        var Vwn = Mm.WnN > 0 ? mV.Nnv[Mm.WnN - 1] : mV.Vv[wnVmW(Mm, Wn)];
        var m = Vwn.m;
        if (m.n !== 1) {
          Vwn.m = MW.Mvw(Vwn[VM[58]], Vwn.m);
          return;
        }
        var Wmv = vW * m[VM[255]] / 2 * mw;
        var nVV = vW * m[VM[104]] / 2 * mw;
        WV[VM[30]]();
        WV[VM[101]](vW * (WVV + Mm[VM[232]] + nN), vW * (NVM + Mm[VM[249]] + wn));
        WV[VM[129]](Wn * vNM);
        WV[VM[101]](mV.VnWWn * vW - Wmv / 2, mV.WwVMm * vW - nVV / 2);
        WV[VM[134]](m, -mV.VnWWn * vW, -mV.WwVMm * vW, Wmv, nVV);
        WV[VM[235]]();
      }
      ;
      ;
      function wvwvV(mV, Mm, nN, wn, Wn, mw) {
        WV[VM[149]] = 1;
        var NWwnV = Mm[VM[102]] >> 7 & 1;
        if (NWwnV === 1) {
          Mm.wnM = Math[VM[241]](500, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        if (Mm.wnM > 0 && Mm.wnM !== 500) {
          WV[VM[149]] = wMM.vNv.VWN(Mm.wnM / 500);
          MW.NN(mV.Vv[1][Mm.WnN], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = wMM.vNv.VWN(1 - Mm.wnM / 500);
          MW.NN(mV.Vv[0][Mm.WnN], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          WV[VM[149]] = 1;
        } else {
          MW.NN(mV.Vv[NWwnV][Mm.WnN], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
      }
      ;
      ;
      function NvNVm(mV, Mm, nN, wn, Wn, mw) {
        WWm(mV, Mm, 0);
        MW.NN(mV.Vv[Mm[VM[102]] >> 4 & 1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function mwWwv(mV, Mm, nN, wn, Wn, mw) {
        WWm(mV, Mm, 0);
        MW.NN(mV.Vv[Mm[VM[102]] >> 4 & 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function MMNMW(mV, Mm, nN, wn, Wn, mw) {
        WWm(mV, Mm, 0);
        var VVN = Mm[VM[102]] >> 7 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](500, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        if (Mm.wnM > 0) {
          WmVNM[MVnMV++] = Mm;
          MW.NN(mV.vWMMM[Mm[VM[102]] >> 4 & 7], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else {
          MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
      }
      ;
      ;
      function vWmNm(Mm) {
        var mV = wWw[Mm.MNM >> 7];
        WV[VM[149]] = wMM.vNv.VWN(Mm.wnM / 500);
        Mm.wVv = (Mm.wVv + nv) % 5000;
        var NV = Mm.wVv;
        var mw = 1 + (NV < 2500 ? NV / 2500 : 1 - (NV - 2500) / 2500) * 0.09;
        MW.NN(mV.mNvvm[Mm[VM[102]] >> 4 & 7], WVV + Mm[VM[232]], NVM + Mm[VM[249]], 0, 0, 0, mw);
        WV[VM[149]] = 1;
      }
      ;
      ;
      function mwwNM(mV, Mm, nN, wn, Wn, mw) {
        var nmMMn = Mm[VM[102]] >> 4 & 1;
        var wwWwn = Mm.nMV === 0 ? 0 : 1;
        if (WWm(mV, Mm, wwWwn) === 1 && nmMMn === 1) {
          Mv.nW.vwNVn = mV.vwMwN;
        }
        if (Mm.wnn !== nmMMn) {
          Mm.wnM = 500;
          Mm.wnn = nmMMn;
        }
        if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        var VW = mV[VM[246]];
        if (nmMMn === 0) {
          VW *= wMM.vNv.wvN(Mm.wnM / 500);
        } else {
          VW *= wMM.vNv.wvN(1 - Mm.wnM / 500);
        }
        var Vwn = Mm.WnN > 0 ? mV.Nnv[Mm.WnN - 1] : mV.Vv;
        var m = Vwn.m;
        if (m.n !== 1) {
          Vwn.m = MW.Mvw(Vwn[VM[58]], Vwn.m);
          return;
        }
        var Wmv = vW * m[VM[255]] / 2 * mw;
        var nVV = vW * m[VM[104]] / 2 * mw;
        WV[VM[30]]();
        WV[VM[101]](vW * (WVV + Mm[VM[232]] + nN), vW * (NVM + Mm[VM[249]] + wn));
        WV[VM[129]](Wn * vNM);
        WV[VM[101]](mV.VnWWn * vW - Wmv / 2, mV.WwVMm * vW - nVV / 2);
        WV[VM[129]](VW);
        WV[VM[134]](m, -mV.VnWWn * vW, -mV.WwVMm * vW, Wmv, nVV);
        WV[VM[235]]();
        if ((Mm[VM[102]] & 32) === 32) {
          Mm[VM[102]] -= 32;
          if (Mm.NV === 0 && nN === 0 && wn === 0) {
            Mm.NV = 600;
          }
        }
        if (Mm.NV > 0) {
          if (VmWmW.n !== 1) {
            VmWmW = MW.Mvw(vNmNM, VmWmW);
            return;
          }
          if (Mm.NV > 400) {
            WV[VM[149]] = wMM.vNv.VWN(1 - (Mm.NV - 400) / 200);
          } else if (Mm.NV < 200) {
            WV[VM[149]] = wMM.vNv.VWN(Mm.NV / 200);
          }
          var wn = vW * (Mm.Wv * wVw + NVM + Vvn);
          var nN = vW * (Mm.mM * wVw + WVV + Vvn);
          var MN = vW * VmWmW[VM[255]] / 2;
          var ww = vW * VmWmW[VM[104]] / 2;
          WV[VM[134]](VmWmW, nN - MN / 2, wn - ww / 2, MN, ww);
          WV[VM[149]] = 1;
          Mm.NV = Math[VM[144]](0, Mm.NV - nv);
        }
      }
      ;
      ;
      function mNVNv(mV, Mm, nN, wn, Wn, mw) {
        var VWMNW = wNM[Mm.Wv][Mm.mM];
        VWMNW.wWN = 0;
        VWMNW.vWvVm = vWW;
        VWMNW.nMV = Mm.nMV;
        if (VWMNW.MmW !== vWW || VWMNW.wWnmn === 1) {
          if (Mm.WnN > 0) {
            MW.NN(mV.Nnv[Mm.WnN - 1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, 0, 0, 0, mw);
          } else {
            MW.NN(mV.Vv[mmMMv(Mm)], WVV + Mm[VM[232]], NVM + Mm[VM[249]], 0, 0, 0, mw);
          }
        }
      }
      ;
      ;
      function VmwVw(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        var WMMwN = wWw[mV[VM[5]]].nvm[Mm.nvm];
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0 && WMMwN.wNVWw === 1 && WWm(WMMwN, Mm, 0) === 1) {
          Mv.nW.vwNVn = vWmmn;
        }
        MW.NN(WMMwN.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function vnNmw(mV, Mm, nN, wn, Wn, mw) {
        var WMMwN = wWw[mV[VM[5]]].nvm[Mm.nvm];
        MW.NN(WMMwN.Vv, WVV + Mm[VM[232]], NVM + Mm[VM[249]], 0, 0, 0, mw);
      }
      ;
      ;
      function mmwMw(wnW, Mm, nN, wn, mw) {
        var VnvMw = Mm[VM[102]] & 254;
        if (VnvMw === 2) {
          Mm[VM[102]] &= 65281;
          if (Mm.wnn <= 0) {
            Mm.wnn = wnW.mmMnN;
            Mm.wnM = wnW.mmMnN;
            var NvWnM = Math[VM[61]](Math[VM[185]]() * 3);
            wN.Vww(wN.mn.NmW[0][NvWnM], 0.5, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 3.5, 0);
          }
        }
        var nww = 0;
        var vmV = 0;
        var mMW = 0;
        var WMw = 0;
        if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
          Mm.wnn = Math[VM[241]](Mm.wnn, wnW.mmMnN);
          Ww = Mm.wnn > wnW.WwVWM ? 1 - (Mm.wnn - wnW.WwVWM) / (wnW.mmMnN - wnW.WwVWM) : Mm.wnn / wnW.WwVWM;
          nww = Mm.wvv * wMM.vNv.wvN(Ww) * 0.55;
          WMw = Ww * 6;
          if (Mm.wvv === 1) {
            vmV = Ww * 25;
          } else {
            mMW = Ww * 25;
          }
          if (Mm.wnn === 0) {
            Mm.wvv *= -1;
          }
        } else if (vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          Mm.NV = (Mm.NV + nv) % 1500;
          if (Mm.wVv !== 0) {
            if (Mm.wVv < 750) {
              Mm.wVv = 1500 - Mm.wVv;
            }
            Mm.wVv = Mm.wVv + nv;
            if (Mm.wVv > 1500) {
              Mm.wVv = 0;
            }
          }
        } else {
          Mm.wVv = (Mm.wVv + nv) % 1500;
          if (Mm.wVv > 1500) {
            Mm.wNV *= -1;
            Mm.wVv = Mm.wVv % 1500;
          }
          if (Mm.NV !== 0) {
            if (Mm.NV < 750) {
              Mm.NV = 1500 - Mm.NV;
            }
            Mm.NV = Mm.NV + nv;
            if (Mm.NV > 1500) {
              Mm.NV = 0;
            }
          }
        }
        var NV = wnW.NV * (Mm.NV < 750 ? Mm.NV / 750 : 1 - (Mm.NV - 750) / 750);
        var VN = wnW.WmmvM * (Mm.wVv < 750 ? Mm.wVv / 750 : 1 - (Mm.wVv - 750) / 750);
        MW.NN(wnW.WWN, nN, wn, wnW.WWN[VM[246]] + Mm[VM[246]] + NV + nww, wnW.WWN[VM[232]] + VN * Mm.wNV + mMW, wnW.WWN[VM[249]], mw);
        MW.NN(wnW.Vmm, nN, wn, -wnW.Vmm[VM[246]] + Mm[VM[246]] - NV + nww, wnW.Vmm[VM[232]] - VN * Mm.wNV + vmV, wnW.Vmm[VM[249]], mw);
        if (Mm.MvW > 0) {
          var wwv = 1;
          Mm.MvW -= nv;
          var Ww = 0;
          if (Mm.MvW > 150) {
            Ww = wMM.vNv.vvW((300 - Mm.MvW) / 300);
          } else {
            Ww = wMM.vNv.VWN(Mm.MvW / 150);
            wwv += (1 - Ww) * 0.2;
          }
          nN += Math[VM[178]](Mm.NNw) * Ww * 10;
          wn += Math[VM[142]](Mm.NNw) * Ww * 10;
          WV[VM[149]] = Math[VM[241]](1, Math[VM[144]](0, Ww));
          MW.NN(wnW.MvW, nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, wwv);
          WV[VM[149]] = 1;
        }
        MW.NN(wnW[VM[91]], nN, wn, Mm[VM[246]] + nww / 1.5, WMw, 0, mw);
      }
      ;
      ;
      function nVvWV(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function WmnMv(mV, Mm, nN, wn, Wn, mw) {
        var Wv = (Wn + 1) % 2;
        var mM = Wn % 2;
        wNM[Mm.Wv + Wv][Mm.mM + mM].wWN = vWW;
        wNM[Mm.Wv - Wv][Mm.mM - mM].wWN = vWW;
        wNM[Mm.Wv + Wv][Mm.mM + mM].mWw = Mm.nMV;
        wNM[Mm.Wv - Wv][Mm.mM - mM].mWw = Mm.nMV;
        wNM[Mm.Wv + Wv][Mm.mM + mM].Mnv = undefined;
        wNM[Mm.Wv - Wv][Mm.mM - mM].Mnv = undefined;
        WWm(mV, Mm, 0);
        MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
      }
      ;
      ;
      function Vmwwn(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](10000, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        var Ww = 0;
        if (Mm.wnM > 0) {
          Ww = wMM.vNv.VWN(Mm.wnM / 10000);
          Mm.wNV += Ww * nv / 300;
          MW.NN(mV.Vv[1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          MW.NN(mV.Vv[2], WVV + Mm[VM[232]] + nN + mV.NWvmn[Wn][0], NVM + Mm[VM[249]] + wn + mV.NWvmn[Wn][1], Wn * vNM + Mm.wNV, 0, 0, mw);
          MW.NN(mV.Vv[3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else {
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function wMvMV(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](10000, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        var Ww = 0;
        if (Mm.wnM > 0) {
          Ww = wMM.vNv.VWN(Mm.wnM / 10000);
          nN += (Math[VM[185]]() * 2 - 1) * Ww;
          wn += (Math[VM[185]]() * 2 - 1) * Ww;
          Mm.wNV += Ww * nv / 300;
          MW.NN(mV.Vv[1], WVV + Mm[VM[232]] + nN + mV.NWvmn[Wn][0], NVM + Mm[VM[249]] + wn + mV.NWvmn[Wn][1], Wn * vNM + Mm.wNV, 0, 0, mw);
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else {
          MW.NN(mV.Vv[2], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function VVmnv(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](10000, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        var Ww = 0;
        if (Mm.wnM > 0) {
          Ww = wMM.vNv.VWN(Mm.wnM / 10000);
          nN += (Math[VM[185]]() * 2 - 1) * Ww;
          wn += (Math[VM[185]]() * 2 - 1) * Ww;
          Mm.wNV += Ww * nv / 300;
          MW.NN(mV.Vv[1], WVV + Mm[VM[232]] + nN + mV.NWvmn[Wn][0], NVM + Mm[VM[249]] + wn + mV.NWvmn[Wn][1], Wn * vNM + Mm.wNV, 0, 0, mw);
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else {
          MW.NN(mV.Vv[2], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function VVmVM(Mm, nN, wn) {
        Mm.NV = (Mm.NV + nv) % 1000;
        var mw = 1 + (Mm.NV < 500 ? Mm.NV / 500 : 1 - (Mm.NV - 500) / 500) * 0.15;
        mw *= vW;
        if (VmWmW.n !== 1) {
          VmWmW = MW.Mvw(vNmNM, VmWmW);
          return;
        }
        WV[VM[149]] = wMM.vNv.VWN(Mm.wnn / 500);
        var wn = vW * (Mm.Wv * wVw + NVM + Vvn);
        var nN = vW * (Mm.mM * wVw + WVV + Vvn);
        var MN = mw * VmWmW[VM[255]] / 2;
        var ww = mw * VmWmW[VM[104]] / 2;
        WV[VM[134]](VmWmW, nN - MN / 2, wn - ww / 2, MN, ww);
        WV[VM[149]] = 1;
      }
      ;
      ;
      function mwVNv(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](10000, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        var Ww = 0;
        if (Mm.wnM > 0) {
          Ww = wMM.vNv.VWN(Mm.wnM / 10000);
          nN += (Math[VM[185]]() * 2 - 1) * Ww;
          wn += (Math[VM[185]]() * 2 - 1) * Ww;
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else {
          MW.NN(mV.Vv[1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function VVwnN(mV, Mm, nN, wn, Wn, mw) {
        var Wv = (Wn + 1) % 2;
        var mM = Wn % 2;
        wNM[Mm.Wv + Wv][Mm.mM + mM].wWN = vWW;
        wNM[Mm.Wv - Wv][Mm.mM - mM].wWN = vWW;
        wNM[Mm.Wv + Wv][Mm.mM + mM].mWw = Mm.nMV;
        wNM[Mm.Wv - Wv][Mm.mM - mM].mWw = Mm.nMV;
        wNM[Mm.Wv + Wv][Mm.mM + mM].Mnv = undefined;
        wNM[Mm.Wv - Wv][Mm.mM - mM].Mnv = undefined;
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](10000, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        var Ww = 0;
        if (Mm.wnM > 0) {
          Ww = wMM.vNv.VWN(Mm.wnM / 10000);
          nN += (Math[VM[185]]() * 2 - 1) * Ww;
          wn += (Math[VM[185]]() * 2 - 1) * Ww;
          MW.NN(mV.Vv[1], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        } else {
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function MNMNv(mV, Mm, nN, wn, Wn, mw) {
        var Wv = (Wn + 1) % 2;
        var mM = Wn % 2;
        wNM[Mm.Wv + Wv][Mm.mM + mM].wWN = vWW;
        wNM[Mm.Wv - Wv][Mm.mM - mM].wWN = vWW;
        wNM[Mm.Wv + Wv][Mm.mM + mM].mWw = Mm.nMV;
        wNM[Mm.Wv - Wv][Mm.mM - mM].mWw = Mm.nMV;
        wNM[Mm.Wv + Wv][Mm.mM + mM].Mnv = undefined;
        wNM[Mm.Wv - Wv][Mm.mM - mM].Mnv = undefined;
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = 1 + (Mm.wnM + nv % 300000);
        } else {
          Mm.wnM = 0;
        }
        var Ww = 0;
        if (Mm.wnM > 0) {
          MW.NN(mV.Vv[1 + Math[VM[61]](Mm.wnM / 500) % 3], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          var VVN = mV.VVN[Math[VM[61]](Mm.wnM / 50) % mV.VVN[VM[126]]];
          if (VVN !== 0) {
            MW.NN(VVN, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
          }
        } else {
          MW.NN(mV.Vv[0], WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function Wwvmv(Mm) {
        WV[VM[149]] = wMM.vNv.VWN(Mm.wnM / 500);
        Mm.wNV = (Mm.wNV + nv) % 1000;
        for (var Wv = 0; Wv < 3; Wv++) {
          var NV = (Mm.wNV + Wv * 333) % 1000;
          var mw = 1 + (NV < 500 ? NV / 500 : 1 - (NV - 500) / 500) * 0.15;
          MW.NN(WnnNn[Wv], WVV + Mm[VM[232]] + nNMWw[Wv], NVM + Mm[VM[249]] + vNVVv[Wv], 0, 0, 0, mw);
        }
        Mm.wVv = (Mm.wVv + nv) % 5000;
        var NV = Mm.wVv;
        var mw = 1 + (NV < 2500 ? NV / 2500 : 1 - (NV - 2500) / 2500) * 0.15;
        MW.NN(WnnNn[3], WVV + Mm[VM[232]] + nNMWw[3], NVM + Mm[VM[249]] + vNVVv[3], 0, 0, 0, mw);
        WV[VM[149]] = 1;
      }
      ;
      ;
      function wnMvv(mV, Mm, nN, wn, Wn, mw) {
        var MvV = Mm[VM[102]] >> 4 & 1;
        if (MvV === 1) {
          Mm.wnn = Math[VM[241]](500, Mm.wnn + nv);
        } else if (Mm.wnn > 0) {
          Mm.wnn = Math[VM[144]](0, Mm.wnn - nv);
        }
        if (MvV === 0) {
          WWm(mV, Mm, 0);
        }
        MW.NN(mV.Vv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Wn * vNM, 0, 0, mw);
        var VVN = Mm[VM[102]] >> 5 & 1;
        if (VVN === 1) {
          Mm.wnM = Math[VM[241]](500, Mm.wnM + nv);
        } else if (Mm.wnM > 0) {
          Mm.wnM = Math[VM[144]](0, Mm.wnM - nv);
        }
        if (Mm.wnM > 0) {
          WmVNM[MVnMV++] = Mm;
        }
        if (Mm.wnn > 0) {
          VVmVM(Mm, nN, wn);
        }
      }
      ;
      ;
      function mMmWw(Mm) {
        var m = nWw[mNvwn].Wvnww;
        var NMW = Math[VM[61]](Mm.NNv / 70);
        if (NMW < 10) {
          if (Mm.NNv === 0) {
            if (Vw.NmMmM !== -2) {
              Vw.NmMmM = 20;
            }
            wN.Vww(wN.mn.WVW, 0.7, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 4);
          }
          MW.NN(m[NMW], WVV + Mm[VM[232]], NVM + Mm[VM[249]], 0, 0, 0, 1);
        }
        Mm.NNv += nv;
      }
      ;
      ;
      function MNvwW(Mm) {
        wNM[Mm.Wv][Mm.mM].wWN = vWW;
        wNM[Mm.Wv][Mm.mM].mWw = Mm.nMV;
        wNM[Mm.Wv][Mm.mM].Mnv = undefined;
        var vmwww = mWm[Mm.MNM >> 5 & 31];
        var vv = vmwww[VM[60]][Mm.MNM >> 10 & 7];
        var mw = 1;
        if (Mm.mNM !== 0) {
          if (Mm.VnV === 0) {
            if (vmwww.mmM !== 0 && vmnVW[vmwww.mmM] === 0) {
              wN.Vww(wN.mn.wmw[vmwww.mmM], 1, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 2.5);
              vmnVW[vmwww.mmM] = 1;
            }
            NMWWN(Mm, vmwww.NNW, vv.mnM, vv.MNv);
          }
          Mm.VnV += nv;
          var Ww = Math[VM[144]](0, wMM.vNv.Nmn(1 - Mm.VnV / 300));
          WV[VM[149]] = Ww;
          mw = Math[VM[241]](1 + (1 - Ww) * 0.35, 1.35);
        } else if (Mm.NNv < 700) {
          if (Mm.NNv === 0 && vv.vnw !== undefined) {
            if (mvWWM === 0) {
              Mm.NV = Math[VM[61]](Math[VM[185]]() * 6000);
            } else {
              Mm.wNV = Math[VM[61]](Math[VM[185]]() * 6000);
              Mm.NV = 3000;
            }
          }
          var Ww = Math[VM[241]](1, wMM.vNv.Nmn(Mm.NNv / 700));
          WV[VM[149]] = Ww;
          mw = Ww * 0.5 + 0.5;
        }
        if ((Mm[VM[102]] & 2) === 2) {
          if (vmwww.Vvm !== 0 && vmnVW[vmwww.Vvm] === 0) {
            wN.Vww(wN.mn.wmw[vmwww.Vvm], 1, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 2.8);
            vmnVW[vmwww.Vvm] = 1;
          }
          Mm.MvW = 250;
          if (Mm.wvv <= 0) {
            Mm.wvv = 300;
          }
          Mm.NNw = WwNwv * (Mm.MNM & 31) / 31;
          Mm[VM[102]] &= ~2;
          NMWWN(Mm, vmwww.NNW, vv.mnM, 1);
        }
        var nN = 0;
        var wn = 0;
        if (Mm.MvW > 0) {
          var MvW = Mm.MvW > 200 ? (250 - Mm.MvW) * 20 / 50 : Mm.MvW * 20 / 200;
          nN = Math[VM[178]](Mm.NNw) * MvW;
          wn = Math[VM[142]](Mm.NNw) * MvW;
          Mm.MvW -= nv;
        }
        if (Mm.NV === 3000 && mvWWM !== 0 && Mm.MvW === 0) {
          MW.NN(vv.MWnnv, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Mm[VM[246]], 0, 0, mw);
          if (Mm.mNM !== 0) {
            if (Mm.VnV > 300) {
              Mm.mNM = 2;
            }
            WV[VM[149]] = 1;
          } else if (Mm.NNv < 700) {
            Mm.NNv += nv;
            WV[VM[149]] = 1;
          }
          return;
        }
        MW.NN(vv.m, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Mm[VM[246]], 0, 0, mw);
        if (vv.vnw !== undefined) {
          nN = 0;
          wn = 0;
          if (Mm.wvv > 0) {
            var MvW = Mm.wvv > 250 ? wMM.vNv.vvW((300 - Mm.wvv) / 250) * 10 : wMM.vNv.VWN(Mm.wvv / 250) * 10;
            nN = Math[VM[178]](Mm.NNw) * MvW;
            wn = Math[VM[142]](Mm.NNw) * MvW;
            Mm.wvv -= nv;
          }
          if (mvWWM === 0) {
            if (Mm.wNV > 0) {
              Mm.wNV = Math[VM[144]](0, Mm.wNV - nv);
            } else {
              Mm.NV += nv;
            }
            if (Mm.NV > 6000) {
              Mm.NV = 0;
            }
            if (Mm.NV > 3000) {
              mw += (Mm.NV - 3000) * 0.025 / 3000;
            } else {
              mw += 0.025 - Mm.NV * 0.025 / 3000;
            }
          } else {
            if (Mm.wNV === 0) {
              Mm.wNV = Mm.NV;
            }
            if (Mm.NV > 6000) {
              Mm.NV = 0;
            }
            if (Mm.NV > 3000) {
              Mm.NV = Math[VM[144]](3000, Mm.NV - nv);
              mw += (Mm.NV - 3000) * 0.025 / 3000;
            } else if (Mm.NV < 3000) {
              Mm.NV = Math[VM[241]](3000, Mm.NV + nv);
              mw += 0.025 - Mm.NV * 0.025 / 3000;
            }
          }
          MW.NN(vv.vnw, WVV + Mm[VM[232]] + nN, NVM + Mm[VM[249]] + wn, Mm[VM[246]], 0, 0, mw);
        }
        if (Mm.mNM !== 0) {
          if (Mm.VnV > 300) {
            Mm.mNM = 2;
          }
          WV[VM[149]] = 1;
        } else if (Mm.NNv < 700) {
          Mm.NNv += nv;
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function nWnMV(Mm) {
        wNM[Mm.Wv][Mm.mM].wWN = vWW;
        wNM[Mm.Wv][Mm.mM].mWw = Mm.nMV;
        wNM[Mm.Wv][Mm.mM].Mnv = undefined;
        var Wn = Mm.MNM >> 5 & 3;
        var mV = wWw[Mm.MNM >> 7];
        var mw = 1;
        wNM[Mm.Wv][Mm.mM].Mnv = mV[VM[213]].Mnv;
        if (Mm.mNM !== 0) {
          if (Mm.VnV === 0) {
            var MMv = mV.NNW === -1 ? wWw[mV[VM[5]]].nvm[Mm.nvm] : mV;
            NMWWN(Mm, MMv.NNW, MMv.mnM, 5);
            if (MMv.mmM !== 0 && vmnVW[MMv.mmM] === 0) {
              wN.Vww(wN.mn.wmw[MMv.mmM], 1, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 2.5);
              vmnVW[MMv.mmM] = 1;
            }
          }
          Mm.VnV += nv;
          var Ww = Math[VM[144]](0, wMM.vNv.Nmn(1 - Mm.VnV / 300));
          WV[VM[149]] = Ww;
          mw = Math[VM[241]](1 + (1 - Ww) * 0.35, 1.35);
        }
        if ((Mm[VM[102]] & 2) === 2) {
          Mm.MvW = 250;
          Mm.NNw = WwNwv * (Mm.MNM & 31) / 31;
          Mm[VM[102]] &= ~2;
          var MMv = mV.NNW === -1 ? wWw[mV[VM[5]]].nvm[Mm.nvm] : mV;
          NMWWN(Mm, MMv.NNW, MMv.mnM, 1);
          if (MMv.Vvm !== 0 && vmnVW[MMv.Vvm] === 0) {
            wN.Vww(wN.mn.wmw[MMv.Vvm], 1, vVV.nMW(Mv.nW[VM[232]], Mv.nW[VM[249]], Mm[VM[232]], Mm[VM[249]]) / 2.8);
            vmnVW[MMv.Vvm] = 1;
          }
        }
        var nN = 0;
        var wn = 0;
        if (Mm.MvW > 0) {
          if (Mm.MvW > 200) {
            var MvW = (250 - Mm.MvW) * 20 / 100;
            nN = Math[VM[178]](Mm.NNw) * MvW;
            wn = Math[VM[142]](Mm.NNw) * MvW;
            Mm.MvW -= nv;
          } else {
            var MvW = Mm.MvW * 20 / 200;
            nN = Math[VM[178]](Mm.NNw) * MvW;
            wn = Math[VM[142]](Mm.NNw) * MvW;
            Mm.MvW -= nv;
          }
        }
        mV.Mw(mV, Mm, nN, wn, Wn, mw);
        if (Mm.mNM !== 0) {
          if (Mm.VnV > 300) {
            Mm.mNM = 2;
          }
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function Vvnvn(Mm) {
        wNM[Mm.Wv][Mm.mM].wWN = vWW;
        wNM[Mm.Wv][Mm.mM].mWw = Mm.nMV;
        wNM[Mm.Wv][Mm.mM].Mnv = undefined;
        var MWmnw = 1;
        var Wv = Mm.Wv;
        var mM = Mm.mM;
        var vmNNN = Wv <= 1 ? 0 : Wv - 1;
        var NwWwn = Wv >= vvv - 2 ? vvv - 1 : Wv + 1;
        var nNmMn = mM <= 1 ? 0 : mM - 1;
        var vvmVV = mM >= Vvw - 2 ? Vvw - 1 : mM + 1;
        for (Wv = vmNNN; Wv <= NwWwn; Wv++) {
          for (mM = nNmMn; mM <= vvmVV; mM++) {
            var Nmv = wNM[Wv][mM];
            if (Nmv.vWW !== vWW) {
              continue;
            }
            var N = Nmv[VM[141]];
            var MwV = Nmv.Wv;
            for (var MMn = 0; MMn < MwV; MMn++) {
              var nnV = N[MMn];
              var vv = nnV[VM[60]];
              var WvWMV = nNV.wVN[vv][nnV.Wmn];
              if ((WvWMV.nMV !== Mv.nW[VM[5]] || WvWMV[VM[5]] !== 0) && vVV.nMW(WvWMV[VM[232]], WvWMV[VM[249]], Mm[VM[232]], Mm[VM[249]]) < nWw[vv].NnV - 4) {
                console[VM[172]]("DETECTED");
                Mm[VM[150]] = Mm[VM[232]];
                Mm[VM[169]] = Mm[VM[249]];
                Mm.NWN = Mm[VM[232]];
                Mm.vVw = Mm[VM[249]];
              }
            }
          }
        }
        if (Mm.mNM !== 0) {
          Mm.VnV += nv;
          MWmnw = Math[VM[144]](0, wMM.vNv.Nmn(1 - Mm.VnV / 200));
          WV[VM[149]] = MWmnw;
        }
        var nMW = vVV.NMM(Mm.NWN, Mm.vVw, Mm[VM[232]], Mm[VM[249]]);
        if (nMW < 400 || Mm.mNM !== 0) {
          WV[VM[149]] = Math[VM[241]](nMW / 400, MWmnw);
          MW.NN(nWw[wWm].VvvVW[Mm.MNM][2], WVV + Mm[VM[232]], NVM + Mm[VM[249]], Mm[VM[246]], 0, 0, 1);
          WV[VM[149]] = MWmnw;
          MW.NN(nWw[wWm].VvvVW[Mm.MNM][1], WVV + Mm[VM[232]], NVM + Mm[VM[249]], Mm[VM[246]], 0, 0, 1);
        } else {
          MW.NN(nWw[wWm].VvvVW[Mm.MNM][0], WVV + Mm[VM[232]], NVM + Mm[VM[249]], Mm[VM[246]], 0, 0, 1);
        }
        if (Mm.mNM !== 0) {
          if (Mm.VnV > 200) {
            Mm.mNM = 2;
          }
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function wnwmM(Mm) {
        wNM[Mm.Wv][Mm.mM].wWN = vWW;
        wNM[Mm.Wv][Mm.mM].mWw = Mm.nMV;
        wNM[Mm.Wv][Mm.mM].Mnv = undefined;
        if (Mm.wnn !== 0) {
          var nW = Mv.wwW[Mm.wnn];
          if (vWW === nW.vWW) {
            var wwW = nNV.wVN[wWm];
            var mmm = wwW[nW.NnvVn];
            Mm.NWN = mmm[VM[232]];
            Mm.vVw = mmm[VM[249]];
            Mm.VnwnV = Math[VM[178]](vVV[VM[246]](Mm[VM[150]], Mm[VM[169]], Mm.NWN, Mm.vVw));
            Mm.Wvnmw = Math[VM[142]](vVV[VM[246]](Mm[VM[150]], Mm[VM[169]], Mm.NWN, Mm.vVw));
          }
        }
        if (Mm.mNM === 0 && vVV.NMM(Mm[VM[232]], Mm[VM[249]], Mm.NWN, Mm.vVw) < 1) {
          var nMW = vVV.NMM(vVn, Wnn, Mm[VM[232]], Mm[VM[249]]);
          if (nMW < nNWMW) {
            nNWMW = nMW;
            Mv.nW.nw = Mm.MNM;
            Mv.nW.vnmvm = Mm[VM[5]];
            if (Mv.nW.vVM <= 0) {
              Mv.nW.vVM = 0;
            } else {
              Mv.nW.WmwVW = 1;
            }
          }
        }
        var NV = 0;
        var vwnvv = 0;
        if (Mm.mNM !== 0) {
          Mm.VnV += nv;
          WV[VM[149]] = Math[VM[144]](0, wMM.vNv.Nmn(1 - Mm.VnV / 800));
          vwnvv = Mm.VnV / 2400;
        } else if (Mm.NNv < 500) {
          var Ww = Math[VM[241]](1, wMM.vNv.Nmn(Mm.NNv / 500));
          WV[VM[149]] = Ww;
        }
        Mm.NV = (Mm.NV + nv) % 1500;
        if (Mm.NV < 750) {
          NV = 0.95 + wMM.vNv.wvN(Mm.NV / 750) * 0.1;
        } else {
          NV = 0.95 + wMM.vNv.wvN(1 - (Mm.NV - 750) / 750) * 0.1;
        }
        MW.NN(mnn[Mm.MNM], WVV + Mm[VM[232]], NVM + Mm[VM[249]], Mm[VM[246]], 0, 0, NV - vwnvv);
        if (Mm.mNM !== 0) {
          if (Mm.VnV > 800) {
            Mm.mNM = 2;
          }
          WV[VM[149]] = 1;
        } else if (Mm.NNv < 500) {
          Mm.NNv += nv;
          WV[VM[149]] = 1;
        }
      }
      ;
      ;
      function NwVnN() {
        var Wv = 0;
        MVnMV = 0;
        MMnvv[0] = 0;
        MMnvv[1] = 0;
        MMnvv[2] = 0;
        MMnvv[3] = 0;
        mMnnw = 12000;
        nNWMW = 12000;
        Mv.nW.WmwVW = 0;
        Mv.nW.NnvWW = -1;
        Mv.nW.mVmvW = -1;
        if (Mv.nW.vVM !== 1) {
          Mv.nW.vVM = -1;
        }
        var nmn = nNV.wVN[nWw[VM[126]]];
        var mmN = nNV[VM[216]][nWw[VM[126]]];
        var vvn = mmN[VM[216]];
        var wMm = nNV.wVN[nvNvV];
        var WMv = nNV[VM[216]][nvNvV];
        var NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          WmWMv(wMm[WMv.Wmn[Wv]]);
        }
        wMm = nNV.wVN[MmNvm];
        WMv = nNV[VM[216]][MmNvm];
        NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          mWMVM(wMm[WMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < NVw; Wv++) {
          nWnMV(wMm[WMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === MmNvm) {
            nWnMV(Mm);
          }
        }
        if (MnWMv !== WVwWN) {
          var NNW = nNV.wVN[vnWWw];
          var WMv = nNV[VM[216]][vnWWw];
          var NVw = WMv[VM[216]];
          for (Wv = 0; Wv < NVw; Wv++) {
            VmWnM(NNW[WMv.Wmn[Wv]]);
          }
          if (mVWWN[VM[5]] !== -1) {
            nNV[VM[16]](0, mVWWN[VM[5]], mVWWN.MWV, vnWWw);
            mVWWN[VM[5]] = -1;
          }
        }
        var wMm = nNV.wVN[VVNmM];
        var WMv = nNV[VM[216]][VVNmM];
        var NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          nWnMV(wMm[WMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === VVNmM) {
            nWnMV(Mm);
          }
        }
        WNWMn = nNV.wVN[VwMWm];
        mMvVw = nNV[VM[216]][VwMWm];
        VvvwW = mMvVw[VM[216]];
        for (Wv = 0; Wv < VvvwW; Wv++) {
          MNvwW(WNWMn[mMvVw.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === VwMWm) {
            MNvwW(Mm);
          }
        }
        var wMm = nNV.wVN[VwvMV];
        var WMv = nNV[VM[216]][VwvMV];
        var NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          WmVmm(wMm[WMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < NVw; Wv++) {
          nWnMV(wMm[WMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === VwvMV) {
            nWnMV(Mm);
          }
        }
        var wwW = nNV.wVN[wWm];
        var nNn = nNV[VM[216]][wWm];
        var MwV = nNn[VM[216]];
        for (Wv = 0; Wv < MwV; Wv++) {
          var mm = nNn.Wmn[Wv];
          var Mm = wwW[mm];
          var nW = Mv.wwW[Mm.nMV];
          mnMVW(Mm);
          nW.NnvVn = mm;
          nW.vWW = vWW;
          mnWwm(Mm, mm);
        }
        Mv.nW.nw = -1;
        Mv.nW.vnmvm = -1;
        var vmmMM = nNV.wVN[nnWNV];
        var VNvMv = nNV[VM[216]][nnWNV];
        var NmnwN = VNvMv[VM[216]];
        for (Wv = 0; Wv < NmnwN; Wv++) {
          wnwmM(vmmMM[VNvMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === nnWNV) {
            wnwmM(Mm);
          }
        }
        var VvvVW = nNV.wVN[VMvWN];
        var wmWvn = nNV[VM[216]][VMvWN];
        var nWVWv = wmWvn[VM[216]];
        for (Wv = 0; Wv < nWVWv; Wv++) {
          Vvnvn(VvvVW[wmWvn.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === VMvWN) {
            Vvnvn(Mm);
          }
        }
        WNWMn = nNV.wVN[mnVnn];
        mMvVw = nNV[VM[216]][mnVnn];
        VvvwW = mMvVw[VM[216]];
        for (Wv = 0; Wv < VvvwW; Wv++) {
          MNvwW(WNWMn[mMvVw.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === mnVnn) {
            MNvwW(Mm);
          }
        }
        if (Mv.vNn === Mv.vWmNw) {
          for (Wv = 0; Wv < MwV; Wv++) {
            var Mm = wwW[nNn.Wmn[Wv]];
            var NNn = Mv.wwW[Mm.nMV].NNn;
            if (NNn === 0) {
              wnnnw(Mm);
            } else {
              Mm.MNM = NNn - 1;
              VVnwM(Mm);
            }
            ;
          }
          for (Wv = 0; Wv < vvn; Wv++) {
            var Mm = nmn[mmN.Wmn[Wv]];
            if (Mm[VM[60]] === wWm) {
              mnMVW(Mm);
              var NNn = Mv.wwW[Mm.nMV].NNn;
              if (NNn === 0) {
                wnnnw(Mm);
              } else {
                Mm.MNM = NNn - 1;
                VVnwM(Mm);
              }
              ;
            }
          }
        } else {
          for (Wv = 0; Wv < MwV; Wv++) {
            wnnnw(wwW[nNn.Wmn[Wv]]);
          }
          for (Wv = 0; Wv < vvn; Wv++) {
            var Mm = nmn[mmN.Wmn[Wv]];
            if (Mm[VM[60]] === wWm) {
              mnMVW(Mm);
              wnnnw(Mm);
            }
          }
        }
        var wnW = nNV.wVN[NmWWn];
        var VnMnN = nNV[VM[216]][NmWWn];
        var VmMWn = VnMnN[VM[216]];
        for (Wv = 0; Wv < VmMWn; Wv++) {
          VVnwM(wnW[VnMnN.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === NmWWn) {
            VVnwM(Mm);
          }
        }
        wMm = nNV.wVN[nvNvV];
        WMv = nNV[VM[216]][nvNvV];
        NVw = WMv[VM[216]];
        for (Wv = 0; Wv < NVw; Wv++) {
          nWnMV(wMm[WMv.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === nvNvV) {
            nWnMV(Mm);
          }
        }
        for (Wv = 0; Wv < MVnMV; Wv++) {
          var mV = wWw[WmVNM[Wv].MNM >> 7];
          mV.MWnVv(WmVNM[Wv]);
          WmVNM[Wv] = null;
        }
        WNWMn = nNV.wVN[MvNVm];
        mMvVw = nNV[VM[216]][MvNVm];
        VvvwW = mMvVw[VM[216]];
        for (Wv = 0; Wv < VvvwW; Wv++) {
          MNvwW(WNWMn[mMvVw.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === MvNVm) {
            MNvwW(Mm);
          }
        }
        WNWMn = nNV.wVN[VVv];
        mMvVw = nNV[VM[216]][VVv];
        VvvwW = mMvVw[VM[216]];
        for (Wv = 0; Wv < VvvwW; Wv++) {
          MNvwW(WNWMn[mMvVw.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < vvn; Wv++) {
          var Mm = nmn[mmN.Wmn[Wv]];
          if (Mm[VM[60]] === VVv) {
            MNvwW(Mm);
          }
        }
        Wvnww = nNV.wVN[mNvwn];
        vwVWn = nNV[VM[216]][mNvwn];
        VwvmV = vwVWn[VM[216]];
        for (Wv = 0; Wv < VwvmV; Wv++) {
          mMmWw(Wvnww[vwVWn.Wmn[Wv]]);
        }
        for (Wv = 0; Wv < MwV; Wv++) {
          nwVwn(wwW[nNn.Wmn[Wv]]);
        }
        if (Mv.vNn !== Mv.NwvNm) {
          for (Wv = 0; Wv < MwV; Wv++) {
            NwVnn(wwW[nNn.Wmn[Wv]]);
          }
          for (Wv = 0; Wv < MwV; Wv++) {
            vMVWN(wwW[nNn.Wmn[Wv]]);
          }
        }
      }
      ;
      ;
      function nMvvv() {
        mvwWW = 0;
      }
      ;
      ;
      var wMmWm;
      var NMWVw = MW[VM[29]].MmNMW;
      var VNmnM = 0;
      var VwnWv = 0;
      var mvwWW = 0;
      var nmnWN = 0;
      var mnvVw = 0;
      function VnVWm(mVw) {
        if (mnvVw === 0) {
          VNmnM = Vw[VM[236]];
          Vw[VM[236]] = 0.8;
          VwnWv = 0;
          mvwWW = mVw;
          nmnWN = 0;
          mnvVw = 1;
          NMWVw = MW[VM[29]].NNnmM / MW[VM[29]].MNmmn;
        }
      }
      ;
      ;
      function wMnNm() {
        if (mvwWW <= 0 && VwnWv + nv > 1500) {
          mnvVw = 0;
          VwnWv = 1500;
        } else {
          mvwWW -= nv;
          nmnWN += nv;
          VwnWv = (VwnWv + nv) % 1500;
        }
        var Ww = wMM.vNv.wvN((VwnWv > 750 ? 1500 - VwnWv : VwnWv) / 750);
        if (mvwWW < 750 && VwnWv > 750 && 1500 - VwnWv > mvwWW) {
          var vnWMW = Math[VM[144]](0, (1500 - VwnWv) / 750);
          Ww = vnWMW * 0.5 + Ww * 0.5;
        } else if (nmnWN > 750) {
          Ww = 0.5 + Ww * 0.5;
        }
        var wVNVW = Ww * 20;
        Vw[VM[236]] = VNmnM + Ww;
        MW[VM[29]].MNmmn = MW[VM[29]].NNnmM / (NMWVw + wVNVW);
        wMmWm();
      }
      ;
      ;
      var VWVvw = document[VM[230]]("canvas");
      var nnvMv = VWVvw[VM[106]]("2d");
      function MVwvM() {
        var VMm;
        var Ww;
        var vNMwN = WV;
        Ww = 1 - wMM.vNv.vvW(Mv.mwn / 1000);
        VWVvw[VM[255]] = MVw[VM[255]];
        VWVvw[VM[104]] = MVw[VM[104]];
        WV = nnvMv;
        WV[VM[30]]();
        var VMN = MW[VM[29]].MNmmn / MW[VM[29]].NvnNM;
        WV[VM[236]](VMN, VMN);
        VMm = mmvnw;
        mmvnw = wWw;
        wWw = VMm;
        VMm = nMvWm;
        nMvWm = wMV;
        wMV = VMm;
        VMm = nVNnW;
        nVNnW = mnn;
        mnn = VMm;
        VMm = mWMWV;
        mWMWV = mWm;
        mWm = VMm;
        VMm = nVVmm;
        nVVmm = nWw;
        nWw = VMm;
        VMm = WMVwm;
        WMVwm = WnnNn;
        WnnNn = VMm;
        VMm = vMnnM;
        vMnnM = WwVnW;
        WwVnW = VMm;
        VMm = vwNwn;
        vwNwn = vmN;
        vmN = VMm;
        WV[VM[210]] = Mv.Mwm === 0 ? "#0B2129" : "#3D5942";
        WV[VM[84]](0, 0, MVM, Vnv);
        mVVwW();
        NwVnN();
        VMm = mmvnw;
        mmvnw = wWw;
        wWw = VMm;
        VMm = nMvWm;
        nMvWm = wMV;
        wMV = VMm;
        VMm = nVNnW;
        nVNnW = mnn;
        mnn = VMm;
        VMm = mWMWV;
        mWMWV = mWm;
        mWm = VMm;
        VMm = nVVmm;
        nVVmm = nWw;
        nWw = VMm;
        VMm = WMVwm;
        WMVwm = WnnNn;
        WnnNn = VMm;
        VMm = vMnnM;
        vMnnM = WwVnW;
        WwVnW = VMm;
        VMm = vwNwn;
        vwNwn = vmN;
        vmN = VMm;
        WV[VM[235]]();
        WV = vNMwN;
        WV[VM[149]] = Ww;
        WV[VM[134]](VWVvw, 0, 0, MVM, Vnv);
        WV[VM[149]] = 1;
        Mv.mwn = Math[VM[144]](0, Mv.mwn - nv);
        if (Mv.mwn === 0) {
          Mv.WNVmv();
        }
      }
      ;
      ;
      function wNmMn() {
        Vw.nWW += nv;
        if (mnvVw === 1) {
          wMnNm();
        }
        NWMwM();
        mVNwM();
        mVVwW();
        mvvvM();
        NwVnN();
        vMNMn();
        if (Mv.mwn > 0) {
          MVwvM();
        }
        nNV.WmnWv();
        vWW++;
        for (var Wv = 0; Wv < MMvvw; Wv++) {
          vmnVW[Wv] = 0;
        }
        vW = mnMwn;
        VVwwM = MVM / vW;
        mWNvm = Vnv / vW;
      }
      ;
      ;
      function VmMNm(Ww) {
        mvWWM = 0;
      }
      ;
      function VnNVW(Ww) {
        vmn[VM[62]]("particles", "" + Ww);
        MnWMv = Ww;
      }
      ;
      ;
      function zoom(nWNWn) {
        if (nWNWn[VM[75]] < 0) {
          Vw[VM[236]] += 0.1;
        } else {
          Vw[VM[236]] -= 0.1;
        }
        Vw[VM[236]] = Math[VM[144]](-0.35, Math[VM[241]](Vw[VM[236]], 1));
      }
      ;
      ;
      Wm[VM[130]][VM[57]]("can")[VM[121]]("wheel", zoom);
      return {
        nWW: Date[VM[105]](),
        reset: mVWVW,
        VMnnv: wNmMn,
        vwM: MvWvN,
        MNNVn: wWNNw,
        wnN: wMMnM,
        wVvMW: MWvnm,
        NvM: NWnvV,
        vwv: WwVMW,
        Wvwnv: WMmWm,
        mWnWW: nMNNN,
        nwV: VmnmV,
        Nwn: NvWnv,
        nvW: mwNMv,
        vVM: MwVWm,
        MVWnM: Nvnnv,
        mVvMn: 0,
        NmMmM: 0,
        scale: 0,
        VnNVW: VnNVW,
        VmMNm: VmMNm,
        VnVWm: VnVWm,
        nMvvv: nMvvv,
        VnWwv: VnWwv,
        wVw: wVw,
        Vvn: Vvn,
        wVWmW: 0,
        vWV: WnVvv,
        MwM: NVnMV,
        wnm: mwwNM,
        WwmNM: nVvWV,
        VnMMN: wnMvv,
        WVVMm: Wwvmv,
        nMMNv: VVwnN,
        Wvmwv: mwVNv,
        NWNwV: Vmwwn,
        vVvwW: wMvMV,
        WwnNv: VVmnv,
        NVWwv: WmnMv,
        nnNMN: MNMNv,
        vnNnv: Nwvwm,
        NMwNN: mWVNV,
        nwnnM: mNVNv,
        MnMvN: VWvVM,
        wMmNW: nNMwn,
        wvvMm: nNWwV,
        mVVnW: VmwVw,
        NwMwN: vnNmw,
        wNWwM: WmMNV,
        nMMnM: vNnnM,
        MWVvW: mNVMV,
        NNn: mmwMw,
        nMvvW: NvNNv,
        wNwvm: MMNMW,
        mwNwW: vWmNm,
        MWvwN: NvNVm,
        nNNWw: mwWwv,
        MnVVw: wvwvV,
        mVmWW: mMvnm
      };
    }();
    var wmW = function () {
      var WwW = 0;
      var nVN = 1;
      var wMw = 2;
      var mMN = 4;
      var NWvMV = 0;
      var nwnVm = 0;
      var MNmMW = 4;
      var WvM = null;
      var VVMwv = -1;
      var vmWwv = 0;
      var mwM = [];
      var MVnmn = [];
      var WNwmn = [];
      var NWMvW = {
        Wv: 0,
        mM: 0
      };
      function MNWvv() {
        for (var Wv = 0; Wv < nwnVm; Wv++) {
          mwM[Wv] = [];
          for (var mM = 0; mM < NWvMV; mM++) {
            mwM[Wv][mM] = 0;
          }
        }
      }
      ;
      ;
      function vNnvM(mwVnV, MN, ww) {
        WvM = new WWVNV.WVvvw(mwVnV);
        NWvMV = MN;
        nwnVm = ww;
        wmW[VM[255]] = MN;
        wmW[VM[104]] = ww;
        mwM = [];
        wmW.mwM = mwM;
        MVnmn = [];
        WNwmn = [];
        wmW.WNwmn = WNwmn;
        VVMwv = -1;
        NWMvW.Wv = 0;
        NWMvW.mM = 0;
        vmWwv = 0;
      }
      ;
      ;
      function nvM(mwVnV, MN, ww, vMwWM) {
        console[VM[250]]("Town generation");
        vNnvM(mwVnV, MN, ww);
        MNWvv();
        if (vMwWM !== undefined) {
          vMwWM();
        }
        console[VM[11]]("Town generation");
      }
      ;
      ;
      return {
        seed: 0,
        nvM: nvM,
        mwM: mwM,
        WNwmn: null,
        width: 0,
        height: 0
      };
    }();
    nwN = 0;
    var wWm = nwN++;
    var nnWNV = nwN++;
    var VMvWN = nwN++;
    var nvNvV = nwN++;
    var VwvMV = nwN++;
    var VVNmM = nwN++;
    var MmNvm = nwN++;
    var vnWWw = nwN++;
    var MvNVm = nwN++;
    var VwMWm = nwN++;
    var mnVnn = nwN++;
    var VVv = nwN++;
    var NMnVw = Wm.Math[VM[234]];
    Wm.Math[VM[234]] = Wm.Math[VM[245]];
    Wm.Math[VM[245]] = NMnVw;
    var mNvwn = nwN++;
    var NmWWn = nwN++;
    nWw[wWm][VM[109]] = function MWNWW(vw, nN, wn) {
      if (vVV.nMW(vw[VM[232]], vw[VM[249]], nN, wn) > 66) {
        vw[VM[150]] = nN;
        vw[VM[169]] = wn;
        var VW = vVV[VM[246]](vw[VM[150]], vw[VM[169]], vw.NWN, vw.vVw);
        vw.VnwnV = Math[VM[178]](VW);
        vw.Wvnmw = Math[VM[142]](VW);
      }
      vw.mMw = (vw[VM[102]] >> 8) / 100;
    };
    nWw[wWm].nvM = function MVNNV(vw) {
      var nW = Mv.wwW[vw.nMV];
      for (var Wv = 0; Wv < nW.vWNnw[VM[126]]; Wv++) {
        nW.vWNnw[Wv].mVw = 0;
      }
      for (var Wv = 0; Wv < nW.WMNWv[VM[126]]; Wv++) {
        nW.WMNWv[Wv].mVw = 0;
      }
      vw[VM[246]] = vw.nvnNW;
      if (nW.NNn > 0) {
        vw.wNV = 1;
        vw.wvv = 1;
      }
    };
    nWw[NmWWn][VM[109]] = nWw[wWm][VM[109]];
    nWw[NmWWn].nvM = function MMvNN(vw) {
      vw.wNV = 1;
      vw.wvv = 1;
      vw[VM[246]] = vw.nvnNW;
      vw.mMw = (vw[VM[102]] >> 8) / 100;
    };
    nWw[nnWNV].nvM = function wNwnv(vw) {
      if (vw[VM[232]] !== vw[VM[150]] || vw[VM[249]] !== vw[VM[169]]) {
        vw[VM[246]] = vVV[VM[246]](vw[VM[232]], vw[VM[249]], vw[VM[150]], vw[VM[169]]);
        vw.nvnNW = vw[VM[246]];
      } else {
        vw[VM[246]] += Math[VM[99]] / 2;
        vw.nvnNW = vw[VM[246]];
      }
    };
    nWw[nnWNV][VM[109]] = function vMWVw(vw, nN, wn) {
      vw.wnn = vw[VM[102]] >> 8;
    };
    nWw[VMvWN].nvM = function NVNVM(vw) {
      vw.NNw = vVV[VM[246]](vw[VM[150]], vw[VM[169]], vw.NWN, vw.vVw);
      var MV = vw.MNM;
      vw.mMw = (vw[VM[102]] >> 8) / 100;
      switch (MV) {
        case 4:
        case 8:
          var Mm = nNV.NvNmW(wWm, vw.nMV, 0);
          if (Mm !== null) {
            Mm.MNM = Mm.MNM & 255;
            Mm.wnn = 0;
          }
          break;
        case 3:
          var Mm = nNV.NvNmW(wWm, vw.nMV, 0);
          if (Mm !== null) {
            Mm.wnn = 0;
          }
          break;
      }
    };
    nWw[VMvWN][VM[109]] = function wvVMNwn(vw, nN, wn) {
      var VW = vVV[VM[246]](vw[VM[232]], vw[VM[249]], vw.NWN, vw.vVw);
      var VnVvv = Math[VM[99]] * 2;
      var vVMWW = ((VW + VnVvv) % VnVvv - (vw.NNw + VnVvv) % VnVvv) % VnVvv;
      if (Math[VM[0]](vVMWW) > 0.1) {
        vw[VM[150]] = vw[VM[232]];
        vw[VM[169]] = vw[VM[249]];
        vw.NWN = vw[VM[232]];
        vw.vVw = vw[VM[249]];
      }
    };
    nWw[MvNVm][VM[109]] = function mwvMv(vw, nN, wn) {
      vw.MvwWn = vw[VM[232]];
      vw.vNwwv = vw[VM[249]];
    };
    nWw[VwMWm][VM[109]] = nWw[MvNVm][VM[109]];
    nWw[mnVnn][VM[109]] = nWw[MvNVm][VM[109]];
    nWw[VVv][VM[109]] = nWw[MvNVm][VM[109]];
    nWw[nvNvV][VM[109]] = function mwvMv(vw, nN, wn) {
      var Wn = vw.MNM >> 5 & 3;
      vw.nvm = vw[VM[102]] >> 5 & 63;
      vw.WnN = vw[VM[102]] >> 14;
      vw[VM[102]] = vw[VM[102]] & 16383;
      var mV = wWw[vw.MNM >> 7];
      vw[VM[232]] = Math[VM[61]](nN / Vw.wVw) * Vw.wVw + Vw.Vvn + mV.mWN[Wn];
      vw[VM[249]] = Math[VM[61]](wn / Vw.wVw) * Vw.wVw + Vw.Vvn + mV.wVW[Wn];
      vw[VM[150]] = vw[VM[232]];
      vw[VM[169]] = vw[VM[249]];
      vw.NWN = vw[VM[232]];
      vw.vVw = vw[VM[249]];
      vw.MvwWn = vw[VM[232]];
      vw.vNwwv = vw[VM[249]];
      if (mV.wnm === 1 && (vw[VM[102]] & 16) === 16) {
        vw.MvwWn = Math[VM[61]](vw.mM + mV.WMNvW[Wn]) * Vw.wVw + Vw.Vvn + mV.mWN[(Wn + 1) % 4];
        vw.vNwwv = Math[VM[61]](vw.Wv + mV.VWNnM[Wn]) * Vw.wVw + Vw.Vvn + mV.wVW[(Wn + 1) % 4];
      }
    };
    nWw[VwvMV][VM[109]] = nWw[nvNvV][VM[109]];
    nWw[VVNmM][VM[109]] = nWw[nvNvV][VM[109]];
    nWw[MmNvm][VM[109]] = nWw[nvNvV][VM[109]];
    try {
      Vw.mVvMn;
    } catch (VWn) {
      var Vw = {};
    }
    var VVVnn = 1;
    var vVNnn = 2;
    var NMNwv = 3;
    var vm = 0;
    var Mn = {
      MWm: vm++,
      nwm: vm++,
      vWv: vm++,
      Wvw: vm++,
      mmn: vm++,
      WNm: vm++,
      vMM: vm++,
      MVV: vm++,
      VmW: vm++,
      MNw: vm++,
      vMW: vm++,
      wNW: vm++,
      nNW: vm++
    };
    vm = 0;
    var Vm = {
      MMM: vm++,
      wvW: vm++,
      nWvwn: vm++,
      NnvNv: vm++,
      wNw: vm++,
      wMn: vm++,
      VWm: vm++,
      vNW: vm++,
      NnM: vm++,
      wVm: vm++
    };
    var WNVnV = [];
    WNVnV[Vm.wvW] = "audio/wood-impact.mp3";
    WNVnV[Vm.nWvwn] = "audio/stone-impact2.mp3";
    WNVnV[Vm.NnvNv] = "audio/stone-impact.mp3";
    WNVnV[Vm.wNw] = "audio/metal-impact2.mp3";
    WNVnV[Vm.NnM] = "audio/pillow-impact.mp3";
    WNVnV[Vm.wMn] = "audio/wood-destroy3.mp3";
    WNVnV[Vm.VWm] = "audio/stone-destroy.mp3";
    WNVnV[Vm.vNW] = "audio/metal-destroy2.mp3";
    WNVnV[Vm.wVm] = "audio/pillow-destroy.mp3";
    var MMvvw = WNVnV[VM[126]];
    vm = 0;
    var WmN = {
      Wmm: vm++,
      WWmNN: vm++,
      VVVnw: vm++,
      nWV: vm++,
      vVvNw: vm++
    };
    vm = 0;
    var nnn = {
      VVMNW: vm++,
      VvNMm: vm++,
      wmVwv: vm++,
      vNNWv: vm++,
      VvNnN: vm++,
      nmNWM: vm++,
      nmWVV: vm++,
      MWWww: vm++,
      wVnmM: vm++
    };
    vm = 0;
    var vn = {
      NmVMV: vm++,
      WWW: vm++,
      VmM: vm++,
      VMv: vm++,
      wVnMM: vm++,
      MnM: vm++,
      wwwNW: vm++,
      WnMWm: vm++,
      NvWVw: vm++,
      nWV: vm++
    };
    vm = 1;
    var vM = {
      wvw: vm++,
      mmW: vm++,
      Wvn: vm++,
      mNw: vm++,
      MVVMM: vm++,
      mvn: vm++,
      nVW: vm++,
      vvw: vm++,
      Wwv: vm++,
      vNMNW: vm++,
      wNVnv: vm++,
      wnV: vm++,
      MWNmV: vm++,
      NMNwW: vm++,
      Vnn: vm++,
      wwn: vm++,
      vwV: vm++,
      mvw: vm++,
      vWv: vm++,
      WmnWw: vm++,
      nNMWW: vm++,
      VNV: vm++,
      VWMwv: vm++,
      Nmnmv: vm++,
      nvmnn: vm++,
      mwnvN: vm++,
      vwW: vm++,
      VVw: vm++,
      Mnm: vm++,
      nWvMM: vm++,
      VNn: vm++,
      nnwWn: vm++,
      vNWMW: vm++,
      vvm: vm++,
      wvVnm: vm++,
      wnNnv: vm++,
      MmNvW: vm++,
      WVnVm: vm++,
      mvmMn: vm++,
      vmMWm: vm++,
      VwV: vm++,
      WNN: vm++,
      VWNnv: vm++,
      wmVWn: vm++,
      VNWnn: vm++,
      NMMnV: vm++,
      NMNVM: vm++,
      WNV: vm++,
      vMM: vm++,
      MmMmn: vm++,
      mnnvN: vm++,
      vmWVv: vm++,
      wvm: vm++,
      WnV: vm++,
      WNm: vm++,
      vnm: vm++,
      mmn: vm++,
      MMwNn: vm++,
      Mmm: vm++,
      WvW: vm++,
      VVMnm: vm++,
      nNwMM: vm++,
      mWMVn: vm++,
      NMnNN: vm++,
      WVvwN: vm++,
      WVNWM: vm++,
      vWmnN: vm++,
      vWVnW: vm++,
      nmVvv: vm++,
      wnmvV: vm++,
      VnMNM: vm++,
      mMNWW: vm++,
      nWM: vm++,
      VVm: vm++,
      MmwVm: vm++,
      NMNVW: vm++,
      NMN: vm++,
      nNNwW: vm++,
      VnvWn: vm++,
      mWwWW: vm++,
      NMvVw: vm++,
      nVvwW: vm++,
      mvnmn: vm++,
      vnvWm: vm++,
      VNnVn: vm++,
      mmmwm: vm++,
      MWMnW: vm++,
      nnmmN: vm++,
      nvv: vm++,
      mwv: vm++,
      www: vm++,
      NVV: vm++,
      MvNvm: vm++,
      MVV: vm++,
      WMW: vm++,
      Mvv: vm++,
      MwmNN: vm++,
      nMVMv: vm++,
      vNwvM: vm++,
      Nwnwm: vm++,
      VmW: vm++,
      MVNvN: vm++,
      nMWWm: vm++,
      wVmWV: vm++,
      mVWmN: vm++,
      wWVNv: vm++,
      MmwWv: vm++,
      NnWNv: vm++,
      WVWnv: vm++,
      vvWNM: vm++,
      wVvNv: vm++,
      VWMWm: vm++,
      Mnvnn: vm++,
      wNVvm: vm++,
      Wmwmn: vm++,
      NmVwV: vm++,
      MNw: vm++,
      mMVVV: vm++,
      wwnNm: vm++,
      NnvwN: vm++,
      MVVMV: vm++,
      wmnWV: vm++,
      Wmnww: vm++,
      wWVWn: vm++,
      mWmWW: vm++,
      nmWVV: vm++,
      Nnm: vm++,
      VNWmm: vm++,
      mvWWN: vm++,
      wVmmn: vm++,
      vMW: vm++,
      nMvmv: vm++,
      wnMwV: vm++,
      vmMwv: vm++,
      nWvVw: vm++,
      vVwwn: vm++,
      NWVMn: vm++,
      MWWww: vm++,
      wVnmM: vm++,
      mMvwv: vm++,
      NNVwm: vm++,
      mMMnv: vm++,
      wWwmM: vm++,
      WMvMV: vm++,
      WwnMn: vm++,
      wvnWv: vm++,
      vMNnn: vm++,
      WMMmV: vm++,
      MMWvM: vm++,
      vNVvV: vm++,
      VnnVn: vm++,
      mVVVW: vm++,
      VNnvM: vm++,
      mVmvN: vm++,
      nmvNm: vm++,
      wNW: vm++,
      NmwnW: vm++,
      MvVVm: vm++,
      WnMmv: vm++,
      MnvmN: vm++,
      wwMwV: vm++,
      vNnvV: vm++,
      mNvnw: vm++,
      NVMMn: vm++,
      NNVww: vm++,
      nVwNV: vm++,
      mnWvm: vm++,
      nNW: vm++
    };
    vm = 0;
    var mW = {
      MMvvV: vm++,
      vwVvv: vm++,
      nnVvw: vm++,
      wnWNV: vm++,
      NmMmm: vm++,
      wwNVn: vm++,
      Wvn: vm++,
      mNw: vm++,
      MVVMM: vm++,
      mvn: vm++,
      nVW: vm++,
      vvw: vm++,
      Wwv: vm++,
      vNMNW: vm++,
      wNVnv: vm++,
      wnV: vm++,
      MWNmV: vm++,
      NMNwW: vm++,
      Vnn: vm++,
      wwn: vm++,
      vwV: vm++,
      mvw: vm++,
      vWv: vm++,
      WmnWw: vm++,
      nNMWW: vm++,
      VNV: vm++,
      VWMwv: vm++,
      Nmnmv: vm++,
      nvmnn: vm++,
      mwnvN: vm++,
      vwW: vm++,
      VVw: vm++,
      Mnm: vm++,
      nWvMM: vm++,
      VNn: vm++,
      nnwWn: vm++,
      vNWMW: vm++,
      vvm: vm++,
      wvVnm: vm++,
      wnNnv: vm++,
      MmNvW: vm++,
      WVnVm: vm++,
      mvmMn: vm++,
      vmMWm: vm++,
      VwV: vm++,
      WNN: vm++,
      VWNnv: vm++,
      wmVWn: vm++,
      VNWnn: vm++,
      NMMnV: vm++,
      NMNVM: vm++,
      WNV: vm++,
      vMM: vm++,
      MmMmn: vm++,
      mnnvN: vm++,
      vmWVv: vm++,
      wvm: vm++,
      WnV: vm++,
      WNm: vm++,
      vnm: vm++,
      mmn: vm++,
      MMwNn: vm++,
      Mmm: vm++,
      WvW: vm++,
      VVMnm: vm++,
      nNwMM: vm++,
      mWMVn: vm++,
      NMnNN: vm++,
      WVvwN: vm++,
      WVNWM: vm++,
      vWmnN: vm++,
      vWVnW: vm++,
      nmVvv: vm++,
      wnmvV: vm++,
      mMNWW: vm++,
      nWM: vm++,
      VVm: vm++,
      MmwVm: vm++,
      NMNVW: vm++,
      NMN: vm++,
      nNNwW: vm++,
      VnvWn: vm++,
      mWwWW: vm++,
      NMvVw: vm++,
      nVvwW: vm++,
      mvnmn: vm++,
      vnvWm: vm++,
      VNnVn: vm++,
      MWMnW: vm++,
      nnmmN: vm++,
      nvv: vm++,
      mwv: vm++,
      www: vm++,
      NVV: vm++,
      MvNvm: vm++,
      MVV: vm++,
      WMW: vm++,
      Mvv: vm++,
      MwmNN: vm++,
      nMVMv: vm++,
      vNwvM: vm++,
      Nwnwm: vm++,
      VmW: vm++,
      MVNvN: vm++,
      nMWWm: vm++,
      wVmWV: vm++,
      mVWmN: vm++,
      wWVNv: vm++,
      MmwWv: vm++,
      NnWNv: vm++,
      WVWnv: vm++,
      vvWNM: vm++,
      wVvNv: vm++,
      VWMWm: vm++,
      Mnvnn: vm++,
      wNVvm: vm++,
      Wmwmn: vm++,
      NmVwV: vm++,
      MNw: vm++,
      mMVVV: vm++,
      wwnNm: vm++,
      NnvwN: vm++,
      MVVMV: vm++,
      wmnWV: vm++,
      Wmnww: vm++,
      wWVWn: vm++,
      mWmWW: vm++,
      nmWVV: vm++,
      Nnm: vm++,
      VNWmm: vm++,
      mvWWN: vm++,
      wVmmn: vm++,
      vMW: vm++,
      nMvmv: vm++,
      wnMwV: vm++,
      vmMwv: vm++,
      nWvVw: vm++,
      vVwwn: vm++,
      NWVMn: vm++,
      MWWww: vm++,
      wVnmM: vm++,
      mMvwv: vm++,
      NNVwm: vm++,
      mMMnv: vm++,
      wWwmM: vm++,
      WMvMV: vm++,
      WwnMn: vm++,
      wvnWv: vm++,
      vMNnn: vm++,
      WMMmV: vm++,
      MMWvM: vm++,
      vNVvV: vm++,
      VnnVn: vm++,
      mVVVW: vm++,
      VNnvM: vm++,
      mVmvN: vm++,
      nmvNm: vm++,
      wNW: vm++,
      NmwnW: vm++,
      MvVVm: vm++,
      WnMmv: vm++,
      nNW: vm++
    };
    vm = 0;
    var Nw = {
      NnnVV: vm++,
      wvw: vm++,
      mmW: vm++,
      Wvn: vm++,
      vnm: vm++,
      wvm: vm++,
      NwWVv: vm++,
      MMWWN: vm++,
      wnV: vm++,
      mMMvv: vm++,
      nwm: vm++,
      vWWwm: vm++,
      VwnvN: vm++,
      WVvNM: vm++,
      VWV: vm++,
      MnVwW: vm++,
      mwvvV: vm++,
      MWNwV: vm++,
      VnWmN: vm++,
      nwwMN: vm++,
      MmvmV: vm++,
      VVMnm: vm++,
      NwMmV: vm++,
      wvMMm: vm++,
      nVnMn: vm++,
      wWv: vm++,
      NMN: vm++,
      nvNvm: vm++,
      mnVWW: vm++,
      NVvnn: vm++,
      NNMNv: vm++,
      wwnNm: vm++,
      NnvwN: vm++,
      MVVMV: vm++,
      MmWMW: vm++
    };
    var NvvnW = [{
      src: "img/wait-ads-1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/wait-ads-2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/wait-ads-3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/wait-ads-4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/wait-ads-5.png",
      m: {
        n: 0
      }
    }];
    var wMV = [];
    wMV[Nw.NnnVV] = [];
    wMV[Nw.wvw] = [{
      src: "img/day-particules-wood1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.mmW] = [{
      src: "img/day-particules-stone1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-stone2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-stone3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-stone4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-stone5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.Wvn] = [{
      src: "img/day-particules-steel1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-steel2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-steel3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-steel4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-steel5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.vnm] = [{
      src: "img/day-particules-uranium1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium5.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium6.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium7.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium8.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-uranium9.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.wvm] = [{
      src: "img/day-particules-sulfur1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur5.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur6.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur7.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur8.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sulfur9.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.NwWVv] = [{
      src: "img/day-particules-leaf1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.MMWWN] = [{
      src: "img/day-particules-wood1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaftree1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaftree2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaftree3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaftree4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaftree5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.nNmnV] = [{
      src: "img/day-particules-flower1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-flower2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-flower3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-flower4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-flower5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.wnV] = [{
      src: "img/day-particules-leaf1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf5.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf6.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf7.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf8.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-leaf9.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.mMMvv] = [{
      src: "img/day-particules-blood1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blood2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blood3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blood4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blood5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.nwm] = [{
      src: "img/day-particules-fire1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fire2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fire3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fire4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fire5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.vWWwm] = [{
      src: "img/day-particules-fur1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fur2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fur3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fur4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fur5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.VwnvN] = [{
      src: "img/day-particules-bed0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-bed1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-bed2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-bed6.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood3.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.WVvNM] = [{
      src: "img/day-particules-bed3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-bed4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-bed5.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-bed6.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood3.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.VWV] = [{
      src: "img/day-particules-sofa0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.MnVwW] = [{
      src: "img/day-particules-sofa0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa5.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa6.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.mwvvV] = [{
      src: "img/day-particules-sofa0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa7.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-sofa8.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.MWNwV] = [{
      src: "img/day-particules-toilet0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-toilet1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-toilet2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-toilet3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-toilet4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.VnWmN] = [{
      src: "img/day-particules-woodlight0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-woodlight1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-woodlight2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-woodlight3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-woodlight4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.nwwMN] = [{
      src: "img/day-particules-safe0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-safe1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-safe2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-safe3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-safe4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.MmvmV] = [{
      src: "img/day-particules-garbage0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-garbage1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-garbage2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-garbage3.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.VVMnm] = [{
      src: "img/day-particules-fridge0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fridge1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fridge2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fridge3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-fridge4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.NwMmV] = [{
      src: "img/day-particules-plot0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-plot1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-plot2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-plot3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-wood3.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.wvMMm] = [{
      src: "img/day-particules-barel0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-barel1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-barel2.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.nVnMn] = [{
      src: "img/day-particules-barel3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-barel4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-barel5.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.wWv] = [{
      src: "img/day-particules-metal0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-metal1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-metal2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-metal3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-metal4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.NMN] = [{
      src: "img/day-particules-tomato0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-tomato1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-tomato2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-tomato3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-tomato4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.mnVWW] = [{
      src: "img/day-particules-blue-steel0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blue-steel1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blue-steel2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blue-steel3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-blue-steel4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.nvNvm] = [{
      src: "img/day-particules-grey-steel0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-grey-steel1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-grey-steel2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-grey-steel3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-grey-steel4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.NVvnn] = [{
      src: "img/day-particules-red-steel0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-red-steel1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-red-steel2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-red-steel3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-red-steel4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.NNMNv] = [{
      src: "img/day-particules-kaki0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-kaki1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-kaki2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-kaki3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-kaki4.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.wwnNm] = [{
      src: "img/day-particules-mushroom4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-mushroom5.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-mushroom6.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.NnvwN] = [{
      src: "img/day-particules-mushroom1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-mushroom2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-mushroom3.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.MVVMV] = [{
      src: "img/day-particules-mushroom7.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-mushroom8.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-mushroom9.png",
      m: {
        n: 0
      }
    }];
    wMV[Nw.MmWMW] = [{
      src: "img/day-particules-gold0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-gold1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-particules-gold2.png",
      m: {
        n: 0
      }
    }];
    function NW(NWw, mWmvN, Mnv, nmW, wM, vVW, mvW, MVMWV, mwVNN) {
      this[VM[133]] = NWw;
      this[VM[119]] = mWmvN;
      if (nmW !== undefined) {
        this.nmW = nmW;
      }
      if (wM !== undefined) {
        this[VM[100]] = wM;
      }
      if (vVW !== undefined) {
        this.vVW = [];
        this.VnNNN = [];
        for (var Wv = 0; Wv < vVW[VM[126]]; Wv++) {
          this.vVW[Wv] = vVW[Wv][0];
          this.VnNNN[Wv] = vVW[Wv][1];
        }
      }
      if (Mnv !== undefined) {
        this.Mnv = Mnv;
      } else {
        this.Mnv = -1;
      }
      if (mvW !== undefined) {
        this[VM[112]] = mvW;
      } else {
        this[VM[112]] = -1;
      }
      if (MVMWV !== undefined) {
        this.MVMWV = MVMWV;
      } else {
        this.MVMWV = -1;
      }
      if (mwVNN !== undefined) {
        this.mwVNN = mwVNN;
      } else {
        this.mwVNN = 1;
      }
    }
    ;
    ;
    var wWw = [{
      src: [],
      m: []
    }, {
      id: vM.wvw,
      nm: {
        src: ["img/inv-wood-out.png", "img/inv-wood-in.png", "img/inv-wood-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood", "Found in trees, or on the ground."),
      stack: 255,
      nw: mW.nnVvw,
      vV: 10
    }, {
      id: vM.mmW,
      nm: {
        src: ["img/inv-stone-out.png", "img/inv-stone-in.png", "img/inv-stone-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone", "Find it on the ground or on the rock.", vn.NvWVw, [], 0, [[Mn.vMW, 80000]]),
      wnvWw: 50,
      MvMvV: 200,
      stack: 255,
      nw: mW.wwNVn,
      vV: 14
    }, {
      id: vM.Wvn,
      nm: {
        src: ["img/inv-steel-out.png", "img/inv-steel-in.png", "img/inv-steel-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Iron", "Melt it on a Firepit or a Smelter", vn.NvWVw, [], 0, [[Mn.vMW, 120000]]),
      wnvWw: 4,
      MvMvV: 8,
      stack: 255,
      nw: mW.Wvn,
      vV: 28
    }, {
      id: vM.mNw,
      nm: {
        src: ["img/inv-animal-fat-out.png", "img/inv-animal-fat-in.png", "img/inv-animal-fat-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Animal Fat", "Useful to craft bullet and clothes"),
      stack: 255,
      nw: mW.mNw,
      vV: 32
    }, {
      id: vM.MVVMM,
      nm: {
        src: ["img/inv-animal-tendon-out.png", "img/inv-animal-tendon-in.png", "img/inv-animal-tendon-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Animal Tendon", "Useful to make string"),
      stack: 255,
      nw: mW.MVVMM,
      vV: 100
    }, {
      id: vM.mvn,
      nm: {
        src: ["img/inv-string-out.png", "img/inv-string-in.png", "img/inv-string-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("String", "Useful to craft many items.", vn.WWW, [[vM.MVVMM, 2]], 1, [[Mn.vWv, 20000]]),
      stack: 255,
      nw: mW.mvn
    }, {
      id: vM.nVW,
      nm: {
        src: ["img/inv-leather-boar-out.png", "img/inv-leather-boar-in.png", "img/inv-leather-boar-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Leather", "Useful to make clothes"),
      stack: 255,
      nw: mW.nVW,
      vV: 32
    }, {
      id: vM.vvw,
      nm: {
        src: ["img/inv-shaped-metal-out.png", "img/inv-shaped-metal-in.png", "img/inv-shaped-metal-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Shaped Metal", "To craft improved items.", vn.NvWVw, [[vM.Wvn, 2]], 1, [[Mn.vMM, 3000], [Mn.Wvw, 30000]]),
      stack: 255,
      nw: mW.vvw
    }, {
      id: vM.Wwv,
      nm: {
        src: ["img/inv-raw-steak-out.png", "img/inv-raw-steak-in.png", "img/inv-raw-steak-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Raw Steak", "#Vegan"),
      stack: 10,
      nw: mW.Wwv,
      VwNmw: 15,
      wnvvW: vM.wNVnv,
      MnW: 12,
      wait: 5,
      vV: 28
    }, {
      id: vM.vNMNW,
      nm: {
        src: ["img/inv-cooked-steak-out.png", "img/inv-cooked-steak-in.png", "img/inv-cooked-steak-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cooked Steak", "Rare or medium?", vn.WWW, [[vM.Wwv, 1]], 1, [[Mn.nwm, 20000], [Mn.Wvw, 10000]]),
      stack: 10,
      nw: mW.vNMNW,
      wait: 5,
      VwNmw: 3,
      wnvvW: vM.wNVnv,
      MnW: 13
    }, {
      id: vM.wNVnv,
      nm: {
        src: ["img/inv-rotten-steak-out.png", "img/inv-rotten-steak-in.png", "img/inv-rotten-steak-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      stack: 10,
      nw: mW.wNVnv,
      wait: 5,
      MnW: 14,
      detail: new NW("Rotten Steak", "Don't eat that."),
      vV: 20
    }, {
      id: vM.wnV,
      nm: {
        src: ["img/inv-orange-out.png", "img/inv-orange-in.png", "img/inv-orange-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Orange", "A little hungry?"),
      stack: 20,
      nw: mW.wnV,
      wait: 5,
      VwNmw: 10,
      wnvvW: vM.MWNmV,
      MnW: 15,
      vV: 24
    }, {
      id: vM.MWNmV,
      nm: {
        src: ["img/inv-rotten-orange-out.png", "img/inv-rotten-orange-in.png", "img/inv-rotten-orange-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Orange", "Go on, have a bite!", vn.wwwNW, [[vM.wnV, 4]], 8, [[Mn.VmW, 40000]]),
      stack: 20,
      nw: mW.MWNmV,
      wait: 5,
      MnW: 16,
      vV: 20
    }, {
      id: vM.NMNwW,
      nm: {
        src: ["img/inv-orange-seed-out.png", "img/inv-orange-seed-in.png", "img/inv-orange-seed-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Orange Seed", "Fill up on Vitame C?", vn.wwwNW, [[vM.wnV, 4]], 1, [[Mn.nwm, 20000], [Mn.Wvw, 15000]]),
      stack: 40,
      nw: mW.NMNwW,
      nWWMn: mW.wnV,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/day-clear-blue-plant2-orange.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-plant2-orange.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.WWmNN,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.vnNnv,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      Vv: [{
        src: "img/day-plant0-orange.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant1-orange.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant2-orange.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant3-orange.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant4-orange.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wnV,
      mnM: 68,
      VWw: 2400000,
      WW: 250,
      vV: 0
    }, {
      id: vM.Vnn,
      nm: {
        src: ["img/inv-hachet-out.png", "img/inv-hachet-in.png", "img/inv-hachet-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Hatchet", "Harvest Wood and Stone.", vn.wVnMM, [[vM.wvw, 10], [vM.mmW, 2]], 1, [[Mn.MWm, 5000], [Mn.vWv, 10000]]),
      MnW: 3,
      stack: 1,
      nw: mW.Vnn,
      wait: 10
    }, {
      id: vM.wwn,
      nm: {
        src: ["img/inv-stone-pickaxe-out.png", "img/inv-stone-pickaxe-in.png", "img/inv-stone-pickaxe-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone Pickaxe", "Mine Stone and Iron.", vn.wVnMM, [[vM.wvw, 100], [vM.mmW, 30]], 1, [[Mn.vWv, 30000]]),
      MnW: 1,
      stack: 1,
      nw: mW.wwn,
      wait: 10
    }, {
      id: vM.vwV,
      nm: {
        src: ["img/inv-steel-pickaxe-out.png", "img/inv-steel-pickaxe-in.png", "img/inv-steel-pickaxe-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Pickaxe", "Mine also Sulfur", vn.wVnMM, [[vM.mmW, 150], [vM.vvw, 6]], 1, [[Mn.WNm, 60000]], 6),
      MnW: 2,
      stack: 1,
      nw: mW.vwV,
      wait: 10
    }, {
      id: vM.mvw,
      nm: {
        src: ["img/inv-stone-axe-out.png", "img/inv-stone-axe-in.png", "img/inv-stone-axe-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Axe", "Harvest a lot of Wood", vn.wVnMM, [[vM.wvw, 150], [vM.vvw, 7]], 1, [[Mn.WNm, 80000]], 5),
      MnW: 4,
      stack: 1,
      nw: mW.mvw,
      wait: 10
    }, {
      id: vM.vWv,
      nm: {
        src: ["img/inv-workbench-out.png", "img/inv-workbench-in.png", "img/inv-workbench-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Workbench", "Allow you to make new items.", vn.WWW, [[vM.wvw, 40], [vM.mmW, 20]], 1, [[Mn.MWm, 15000], [Mn.vWv, 15000]]),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 1,
      vVW: Mn.vWv,
      stack: 255,
      nw: mW.vWv,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-workbench.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-workbench.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.WwmNM,
      MMw: 16,
      nnv: {
        src: "img/e-workbench.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-workbench.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.WmnWw,
      nm: {
        src: ["img/inv-wood-spear-out.png", "img/inv-wood-spear-in.png", "img/inv-wood-spear-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood Spear", "Don't forget to pick it up.", vn.MnM, [[vM.wvw, 70]], 1, [[Mn.MWm, 15000], [Mn.vWv, 20000]]),
      MnW: 5,
      stack: 1,
      nw: mW.WmnWw,
      wait: 10
    }, {
      id: vM.nNMWW,
      nm: {
        src: ["img/inv-wood-bow-out.png", "img/inv-wood-bow-in.png", "img/inv-wood-bow-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood Bow", "Where are the cowboys?", vn.MnM, [[vM.wvw, 60], [vM.MVVMM, 2]], 1, [[Mn.MWm, 35000], [Mn.vWv, 50000]]),
      vvM: vM.NMNVM,
      wNNnV: 1,
      MnW: 6,
      stack: 1,
      nw: mW.nNMWW,
      wait: 10
    }, {
      id: vM.VNV,
      nm: {
        src: ["img/inv-9mm-out.png", "img/inv-9mm-in.png", "img/inv-9mm-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("9MM", "I hope you know how to aim.", vn.MnM, [[vM.mwv, 6], [vM.vvw, 9]], 1, [[Mn.WNm, 160000]], 7),
      MnW: 8,
      vvM: vM.vvm,
      stack: 1,
      nw: mW.VNV,
      wait: 10
    }, {
      id: vM.VWMwv,
      nm: {
        src: ["img/inv-desert-eagle-out.png", "img/inv-desert-eagle-in.png", "img/inv-desert-eagle-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Desert Eagle", "Pretty useful for self-defense.", vn.MnM, [[vM.WMW, 4], [vM.vvw, 2]], 1, [[Mn.WNm, 180000]], 9, vM.VNV),
      MnW: 9,
      vvM: vM.vvm,
      stack: 1,
      nw: mW.VWMwv,
      wait: 10
    }, {
      id: vM.Nmnmv,
      nm: {
        src: ["img/inv-shotgun-out.png", "img/inv-shotgun-in.png", "img/inv-shotgun-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Shotgun", "He's dead now, don't you think?", vn.MnM, [[vM.WMW, 6], [vM.vvw, 6]], 1, [[Mn.WNm, 200000]], 11),
      MnW: 7,
      vvM: vM.wvVnm,
      stack: 1,
      nw: mW.Nmnmv,
      wait: 10
    }, {
      id: vM.nvmnn,
      nm: {
        src: ["img/inv-ak47-out.png", "img/inv-ak47-in.png", "img/inv-ak47-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("AK47", "Revolution time", vn.MnM, [[vM.WMW, 14], [vM.vvw, 8]], 1, [[Mn.WNm, 180000]], 12, vM.vmMWm),
      MnW: 10,
      vvM: vM.wnNnv,
      stack: 1,
      nw: mW.nvmnn,
      wait: 10
    }, {
      id: vM.mwnvN,
      nm: {
        src: ["img/inv-sniper-out.png", "img/inv-sniper-in.png", "img/inv-sniper-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Sniper", "For the very angry shy", vn.MnM, [[vM.WMW, 10], [vM.vvw, 8]], 1, [[Mn.WNm, 180000]], 13),
      MnW: 11,
      vvM: vM.wnNnv,
      stack: 1,
      nw: mW.mwnvN,
      wait: 10
    }, {
      id: vM.vwW,
      nm: {
        src: ["img/inv-wood-wall-out.png", "img/inv-wood-wall-in.png", "img/inv-wood-wall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wooden Wall", "Protected from the wind.", vn.VMv, [[vM.wvw, 20]], 1, [[Mn.vWv, 10000]]),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.vwW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-wood-wall.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-wood-wall.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.vwW,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.vWV,
      wWnmn: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      Nnv: [{
        src: "img/day-wood-wall-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: [{
        src: "img/day-wood-wall0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-wall46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 3000,
      vV: 0
    }, {
      id: vM.VVw,
      nm: {
        src: ["img/inv-stone-wall-out.png", "img/inv-stone-wall-in.png", "img/inv-stone-wall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone Wall", "Saved the 3 little pigs.", vn.VMv, [[vM.mmW, 20]], 1, [[Mn.vWv, 15000]], 3),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.VVw,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-wall.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-wall.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.VVw,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.vWV,
      wWnmn: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      Nnv: [{
        src: "img/day-stone-wall-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.nWvwn,
      mmM: Vm.VWm,
      Vv: [{
        src: "img/day-stone-wall0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-wall46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.mmW,
      mnM: 80,
      VWw: 315360000000,
      WW: 7000,
      vV: 0
    }, {
      id: vM.Mnm,
      nm: {
        src: ["img/inv-steel-wall-out.png", "img/inv-steel-wall-in.png", "img/inv-steel-wall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Wall", "Afraid we'll find you?", vn.VMv, [[vM.vvw, 3]], 1, [[Mn.WNm, 20000]], 6, vM.VVw),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.Mnm,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-wall.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-wall.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.Mnm,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.vWV,
      wWnmn: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      Nnv: [{
        src: "img/day-steel-wall-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-steel-wall0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-wall46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.Wvn,
      mnM: 80,
      VWw: 315360000000,
      WW: 15000,
      vV: 0
    }, {
      id: vM.nWvMM,
      nm: {
        src: ["img/inv-wood-door-out.png", "img/inv-wood-door-in.png", "img/inv-wood-door-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wooden Low Door", "You can shoot through it.", vn.VMv, [[vM.wvw, 40]], 1, [[Mn.vWv, 15000]]),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.nWvMM,
      wait: 10,
      mVw: 600,
      width: [100, 35, 100, 35],
      height: [35, 100, 35, 100],
      mWN: [0, -30, 0, 30],
      wVW: [30, 0, -30, 0],
      Vnm: [0, 0, 0, 65],
      vNV: [65, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-wood-door.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-wood-door.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 1,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      VWNnM: [1, 0, -1, 0],
      WMNvW: [0, -1, 0, 1],
      VmWVV: [0, 0, 65, 0],
      NMmMM: [0, 0, 0, 65],
      wMwmn: [35, 100, 35, 100],
      Nvwmm: [100, 35, 100, 35],
      VnWWn: 6,
      WwVMm: 46,
      Mw: Vw.wnm,
      MMw: 15,
      nnv: {
        src: "img/e-opendoor.png",
        m: {
          n: 0
        }
      },
      vwMwN: {
        src: "img/e-closedoor.png",
        m: {
          n: 0
        }
      },
      Nnv: [{
        src: "img/day-wood-door-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-door-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-door-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-wood-door.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 55,
      VWw: 315360000000,
      WW: 2000,
      vV: 0
    }, {
      id: vM.VNn,
      nm: {
        src: ["img/inv-stone-door-out.png", "img/inv-stone-door-in.png", "img/inv-stone-door-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone Low Door", "You can shoot through it.", vn.VMv, [[vM.mmW, 40]], 1, [[Mn.vWv, 15000]], 3),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.VNn,
      wait: 10,
      mVw: 600,
      width: [100, 35, 100, 35],
      height: [35, 100, 35, 100],
      mWN: [0, -30, 0, 30],
      wVW: [30, 0, -30, 0],
      Vnm: [0, 0, 0, 65],
      vNV: [65, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-door.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-door.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 1,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      VWNnM: [1, 0, -1, 0],
      WMNvW: [0, -1, 0, 1],
      VmWVV: [0, 0, 65, 0],
      NMmMM: [0, 0, 0, 65],
      wMwmn: [35, 100, 35, 100],
      Nvwmm: [100, 35, 100, 35],
      VnWWn: 6,
      WwVMm: 46,
      Mw: Vw.wnm,
      MMw: 15,
      nnv: {
        src: "img/e-opendoor.png",
        m: {
          n: 0
        }
      },
      vwMwN: {
        src: "img/e-closedoor.png",
        m: {
          n: 0
        }
      },
      Nnv: [{
        src: "img/day-stone-door-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-door-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-door-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.nWvwn,
      mmM: Vm.VWm,
      Vv: {
        src: "img/day-stone-door.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.mmW,
      mnM: 55,
      VWw: 315360000000,
      WW: 5000,
      vV: 0
    }, {
      id: vM.nnwWn,
      nm: {
        src: ["img/inv-steel-door-out.png", "img/inv-steel-door-in.png", "img/inv-steel-door-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Low Door", "Killing at home, for more comfort.", vn.VMv, [[vM.vvw, 6]], 1, [[Mn.WNm, 30000]], 6, vM.VNn),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.nnwWn,
      wait: 10,
      mVw: 600,
      width: [100, 35, 100, 35],
      height: [35, 100, 35, 100],
      mWN: [0, -30, 0, 30],
      wVW: [30, 0, -30, 0],
      Vnm: [0, 0, 0, 65],
      vNV: [65, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-door.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-door.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 1,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      VWNnM: [1, 0, -1, 0],
      WMNvW: [0, -1, 0, 1],
      VmWVV: [0, 0, 65, 0],
      NMmMM: [0, 0, 0, 65],
      wMwmn: [35, 100, 35, 100],
      Nvwmm: [100, 35, 100, 35],
      VnWWn: 6,
      WwVMm: 46,
      Mw: Vw.wnm,
      MMw: 15,
      nnv: {
        src: "img/e-opendoor.png",
        m: {
          n: 0
        }
      },
      vwMwN: {
        src: "img/e-closedoor.png",
        m: {
          n: 0
        }
      },
      Nnv: [{
        src: "img/day-steel-door-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-door-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-door-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-steel-door.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.Wvn,
      mnM: 55,
      VWw: 315360000000,
      WW: 10000,
      vV: 0
    }, {
      id: vM.vNWMW,
      nm: {
        src: ["img/inv-campfire-out.png", "img/inv-campfire-in.png", "img/inv-campfire-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Campfire", "Warm you when you're cold.", vn.WWW, [[vM.wvw, 30], [vM.mmW, 5]], 1, [[Mn.MWm, 8000], [Mn.vWv, 15000]]),
      MnW: 21,
      NVW: 15000,
      VvN: -1,
      z: 0,
      vVW: Mn.nwm,
      stack: 255,
      nw: mW.vNWMW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-campfire.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-campfire.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: VVVnn,
      Mw: Vw.VnMMN,
      MWnVv: Vw.WVVMm,
      MMw: 16,
      nnv: {
        src: "img/e-campfire.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-campfire.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 600000,
      WW: 150,
      vV: 0
    }, {
      id: vM.vvm,
      nm: {
        src: ["img/inv-bullet-9mm-out.png", "img/inv-bullet-9mm-in.png", "img/inv-bullet-9mm-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Bullet", "For 9MM, Desert Eagle, and MP5 ", vn.MnM, [[vM.wvm, 3], [vM.vvw, 3], [vM.mNw, 3]], 30, [[Mn.WNm, 10000]], 6),
      stack: 255,
      nw: mW.vvm
    }, {
      id: vM.wvVnm,
      nm: {
        src: ["img/inv-bullet-shotgun-out.png", "img/inv-bullet-shotgun-in.png", "img/inv-bullet-shotgun-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cartridge", "For Shotgun", vn.MnM, [[vM.WMW, 1], [vM.vvw, 4], [vM.mNw, 4]], 15, [[Mn.WNm, 10000]], 10),
      stack: 255,
      nw: mW.wvVnm
    }, {
      id: vM.wnNnv,
      nm: {
        src: ["img/inv-bullet-sniper-out.png", "img/inv-bullet-sniper-in.png", "img/inv-bullet-sniper-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Heavy Bullet", "For Sniper, and AK47", vn.MnM, [[vM.WMW, 1], [vM.vvw, 4], [vM.mNw, 4]], 30, [[Mn.WNm, 10000]], 11),
      stack: 255,
      nw: mW.wnNnv
    }, {
      id: vM.MmNvW,
      nm: {
        src: ["img/inv-medikit-out.png", "img/inv-medikit-in.png", "img/inv-medikit-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Medkit", "Regenerate your life.", vn.WnMWm, [[vM.mvn, 2], [vM.WVnVm, 1], [vM.nVW, 2], [vM.vvw, 2]], 1, [[Mn.WNm, 80000]], 10),
      MnW: 17,
      stack: 2,
      nw: mW.MmNvW,
      wait: 10
    }, {
      id: vM.WVnVm,
      nm: {
        src: ["img/inv-bandage-out.png", "img/inv-bandage-in.png", "img/inv-bandage-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Bandage", "To heal the boo-boos.", vn.WnMWm, [[vM.mvn, 1], [vM.nVW, 2]], 1, [[Mn.mmn, 20000]]),
      MnW: 18,
      stack: 5,
      nw: mW.WVnVm,
      wait: 10
    }, {
      id: vM.mvmMn,
      nm: {
        src: ["img/inv-soda-out.png", "img/inv-soda-in.png", "img/inv-soda-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Soda", "Give energy.", vn.WWW, [[vM.Wmwmn, 1], [vM.VVm, 1], [vM.VnvWn, 1]], 1, [[Mn.nwm, 40000], [Mn.Wvw, 40000]], 5),
      MnW: 19,
      stack: 5,
      nw: mW.mvmMn,
      VwNmw: 2,
      wnvvW: vM.VnvWn,
      wait: 10
    }, {
      id: vM.vmMWm,
      nm: {
        src: ["img/inv-MP5-out.png", "img/inv-MP5-in.png", "img/inv-MP5-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("MP5", "Not bad.", vn.MnM, [[vM.WMW, 6], [vM.vvw, 6]], 1, [[Mn.WNm, 200000]], 10),
      MnW: 20,
      vvM: vM.vvm,
      stack: 1,
      nw: mW.vmMWm,
      wait: 10
    }, {
      id: vM.VwV,
      nm: {
        src: ["img/inv-headscarf-out.png", "img/inv-headscarf-in.png", "img/inv-headscarf-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Headscarf", "Warm you up.", vn.VmM, [[vM.mvn, 1], [vM.nVW, 1]], 1, [[Mn.mmn, 60000]]),
      MvN: 1,
      stack: 1,
      nw: mW.VwV,
      wait: 10,
      vwm: 0.00085,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.WNN,
      nm: {
        src: ["img/inv-chapka-out.png", "img/inv-chapka-in.png", "img/inv-chapka-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Chapka", "You look like a real woodcutter.", vn.VmM, [[vM.mvn, 6], [vM.nVW, 8], [vM.VwV, 1]], 1, [[Mn.mmn, 120000]], 7),
      MvN: 2,
      stack: 1,
      nw: mW.WNN,
      wait: 10,
      vwm: 0.0017,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.VWNnv,
      nm: {
        src: ["img/inv-coat-out.png", "img/inv-coat-in.png", "img/inv-coat-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Winter Coat", "Is the weather really that cold?", vn.VmM, [[vM.mvn, 15], [vM.nVW, 20], [vM.WNN, 1]], 1, [[Mn.mmn, 180000]], 9, vM.WNN),
      MvN: 3,
      stack: 1,
      nw: mW.VWNnv,
      wait: 10,
      vwm: 0.0026,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.wmVWn,
      nm: {
        src: ["img/inv-gaz-mask-out.png", "img/inv-gaz-mask-in.png", "img/inv-gaz-mask-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Radiation Mask", "Protect you from Radioactivity.", vn.VmM, [[vM.vvw, 1], [vM.mvn, 1], [vM.nVW, 2]], 1, [[Mn.mmn, 60000]]),
      MvN: 4,
      stack: 1,
      nw: mW.wmVWn,
      wait: 10,
      vwm: 0,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0.009,
      mMw: 0
    }, {
      id: vM.VNWnn,
      nm: {
        src: ["img/inv-gaz-protection-out.png", "img/inv-gaz-protection-in.png", "img/inv-gaz-protection-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Min. Radiation Suit", "Previously, on Breaking Bad.", vn.VmM, [[vM.WMW, 2], [vM.vvw, 2], [vM.mvn, 4], [vM.nVW, 4], [vM.wmVWn, 1]], 1, [[Mn.mmn, 90000]], 8),
      MvN: 5,
      stack: 1,
      nw: mW.VNWnn,
      wait: 10,
      vwm: 0.0006,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0.016,
      mMw: 0
    }, {
      id: vM.NMMnV,
      nm: {
        src: ["img/inv-radiation-suit-out.png", "img/inv-radiation-suit-in.png", "img/inv-radiation-suit-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Radiation Suit", "Let's not grow a second head.", vn.VmM, [[vM.WMW, 6], [vM.vvw, 4], [vM.mvn, 8], [vM.nVW, 20], [vM.VNWnn, 1]], 1, [[Mn.mmn, 180000]], 10, vM.VNWnn),
      MvN: 6,
      stack: 1,
      nw: mW.NMMnV,
      wait: 10,
      vwm: 0,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0.022,
      mMw: -0.01
    }, {
      id: vM.NMNVM,
      nm: {
        src: ["img/inv-wood-arrow-out.png", "img/inv-wood-arrow-in.png", "img/inv-wood-arrow-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood Arrow", "Needed to use bow.", vn.MnM, [[vM.wvw, 40]], 5, [[Mn.MWm, 15000], [Mn.vWv, 10000]]),
      stack: 255,
      nw: mW.NMNVM
    }, {
      id: vM.WNV,
      nm: {
        src: ["img/inv-campfire-bbq-out.png", "img/inv-campfire-bbq-in.png", "img/inv-campfire-bbq-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Firepit", "Warm up and melt iron slowly.", vn.WWW, [[vM.wvw, 120], [vM.mmW, 20], [vM.Wvn, 4]], 1, [[Mn.vWv, 20000]], 3),
      MnW: 21,
      NVW: 20000,
      VvN: -1,
      z: 0,
      vVW: Mn.Wvw,
      stack: 255,
      nw: mW.WNV,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-campfire-bbq.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-campfire-bbq.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: VVVnn,
      Mw: Vw.VnMMN,
      MWnVv: Vw.WVVMm,
      MMw: 16,
      nnv: {
        src: "img/e-campfire-bbq.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-campfire-bbq.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.vMM,
      nm: {
        src: ["img/inv-smelter-out.png", "img/inv-smelter-in.png", "img/inv-smelter-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Smelter", "Melt iron, uranium and alloys", vn.WWW, [[vM.vvw, 6], [vM.nvv, 1]], 1, [[Mn.WNm, 100000]], 10),
      MnW: 21,
      NVW: 42000,
      VvN: 1,
      z: 1,
      vVW: Mn.vMM,
      stack: 255,
      nw: mW.vMM,
      wait: 10,
      mVw: 1000,
      width: [100, 260, 100, 260],
      height: [260, 100, 260, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, -80, 0, -80],
      vNV: [-80, 0, -80, 0],
      VMwMM: [-1, 0, -1, 0],
      WwNmM: [0, -1, 0, -1],
      Nnw: {
        src: "img/day-clear-blue-smelter.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-smelter.png",
        m: {
          n: 0
        }
      },
      wvnmn: [-20.5, -101.5, 20.5, 101.5],
      WmmmM: [101.5, -20.5, -101, 20.5],
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.nMMNv,
      MMw: 16,
      nnv: {
        src: "img/e-smelter.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-smelter-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-smelter-on.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-smelter-light-up.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-smelter-light-down.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 3000,
      vV: 0
    }, {
      id: vM.MmMmn,
      nm: {
        src: ["img/inv-wood-door1-out.png", "img/inv-wood-door1-in.png", "img/inv-wood-door1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wooden Door", "Let's hope it holds.", vn.VMv, [[vM.wvw, 60]], 1, [[Mn.vWv, 20000]]),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.MmMmn,
      wait: 10,
      mVw: 600,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-wood-door1.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-wood-door1.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 1,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]],
      VWNnM: [1, -1, -1, 1],
      WMNvW: [-1, -1, 1, 1],
      VmWVV: [0, 0, 0, 0],
      NMmMM: [0, 0, 0, 0],
      wMwmn: [100, 100, 100, 100],
      Nvwmm: [100, 100, 100, 100],
      VnWWn: 17,
      WwVMm: 113,
      Mw: Vw.wnm,
      MMw: 15,
      nnv: {
        src: "img/e-opendoor.png",
        m: {
          n: 0
        }
      },
      vwMwN: {
        src: "img/e-closedoor.png",
        m: {
          n: 0
        }
      },
      Nnv: [{
        src: "img/day-wood-door1-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-door1-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-door1-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-wood-door1.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 2500,
      vV: 0
    }, {
      id: vM.mnnvN,
      nm: {
        src: ["img/inv-stone-door1-out.png", "img/inv-stone-door1-in.png", "img/inv-stone-door1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone Door", "Not too heavy to open, I hope.", vn.VMv, [[vM.mmW, 60]], 1, [[Mn.vWv, 20000]], 3),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.mnnvN,
      wait: 10,
      mVw: 600,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-door1.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-door1.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 1,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]],
      VWNnM: [1, -1, -1, 1],
      WMNvW: [-1, -1, 1, 1],
      VmWVV: [0, 0, 0, 0],
      NMmMM: [0, 0, 0, 0],
      wMwmn: [100, 100, 100, 100],
      Nvwmm: [100, 100, 100, 100],
      VnWWn: 17,
      WwVMm: 113,
      Mw: Vw.wnm,
      MMw: 15,
      nnv: {
        src: "img/e-opendoor.png",
        m: {
          n: 0
        }
      },
      vwMwN: {
        src: "img/e-closedoor.png",
        m: {
          n: 0
        }
      },
      Nnv: [{
        src: "img/day-stone-door1-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-door1-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-door1-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.nWvwn,
      mmM: Vm.VWm,
      Vv: {
        src: "img/day-stone-door1.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.mmW,
      mnM: 80,
      VWw: 315360000000,
      WW: 6000,
      vV: 0
    }, {
      id: vM.vmWVv,
      nm: {
        src: ["img/inv-steel-door1-out.png", "img/inv-steel-door1-in.png", "img/inv-steel-door1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Door", "I guess you're safe.", vn.VMv, [[vM.vvw, 9]], 1, [[Mn.WNm, 40000]], 6, vM.mnnvN),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.vmWVv,
      wait: 10,
      mVw: 600,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-door1.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-door1.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 1,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]],
      VWNnM: [1, -1, -1, 1],
      WMNvW: [-1, -1, 1, 1],
      VmWVV: [0, 0, 0, 0],
      NMmMM: [0, 0, 0, 0],
      wMwmn: [100, 100, 100, 100],
      Nvwmm: [100, 100, 100, 100],
      VnWWn: 17,
      WwVMm: 113,
      Mw: Vw.wnm,
      MMw: 15,
      nnv: {
        src: "img/e-opendoor.png",
        m: {
          n: 0
        }
      },
      vwMwN: {
        src: "img/e-closedoor.png",
        m: {
          n: 0
        }
      },
      Nnv: [{
        src: "img/day-steel-door1-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-door1-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-door1-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-steel-door1.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.Wvn,
      mnM: 80,
      VWw: 315360000000,
      WW: 12500,
      vV: 0
    }, {
      id: vM.wvm,
      nm: {
        src: ["img/inv-sulfur-out.png", "img/inv-sulfur-in.png", "img/inv-sulfur-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Sulfur", "Sulfur in such a cold landscape?", vn.NvWVw, [], 0, [[Mn.vMW, 240000]]),
      wnvWw: 4,
      MvMvV: 8,
      stack: 255,
      nw: mW.wvm,
      vV: 32
    }, {
      id: vM.WnV,
      nm: {
        src: ["img/inv-shaped-uranium-out.png", "img/inv-shaped-uranium-in.png", "img/inv-shaped-uranium-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Shaped Uranium", "Are you out of your mind?", vn.NvWVw, [[vM.vnm, 1]], 1, [[Mn.vMM, 20000]]),
      stack: 255,
      nw: mW.WnV,
      vV: 0
    }, {
      id: vM.WNm,
      nm: {
        src: ["img/inv-workbench2-out.png", "img/inv-workbench2-in.png", "img/inv-workbench2-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Research Bench", "Allow you to make new items", vn.WWW, [[vM.vvw, 6], [vM.nvv, 1]], 1, [[Mn.vWv, 50000]], 6),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 1,
      vVW: Mn.WNm,
      stack: 255,
      nw: mW.WNm,
      wait: 10,
      mVw: 1000,
      width: [100, 290, 100, 280],
      height: [280, 100, 280, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, -90, 0, -90],
      vNV: [-90, 0, -90, 0],
      VMwMM: [-1, 0, -1, 0],
      WwNmM: [0, -1, 0, -1],
      Nnw: {
        src: "img/day-clear-blue-workbench2.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-workbench2.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.NVWwv,
      MMw: 16,
      nnv: {
        src: "img/e-workbench2.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-workbench2.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 400,
      vV: 0
    }, {
      id: vM.vnm,
      nm: {
        src: ["img/inv-uranium-out.png", "img/inv-uranium-in.png", "img/inv-uranium-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Uranium", "Do you want to end up as Marie Curie?", vn.NvWVw, [], 0, [[Mn.vMW, 240000]]),
      wnvWw: 2,
      MvMvV: 4,
      stack: 255,
      nw: mW.vnm,
      vV: 45
    }, {
      id: vM.mmn,
      nm: {
        src: ["img/inv-weaving-machine-out.png", "img/inv-weaving-machine-in.png", "img/inv-weaving-machine-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Weaving Machine", "Allow you to sew clothes", vn.WWW, [[vM.wvw, 80], [vM.mmW, 20], [vM.mvn, 2]], 1, [[Mn.vWv, 60000]]),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 1,
      vVW: Mn.mmn,
      stack: 255,
      nw: mW.mmn,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-weaving-machine.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-weaving-machine.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.WwmNM,
      MMw: 16,
      nnv: {
        src: "img/e-weaving-machine.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-weaving-machine.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.MMwNn,
      nm: {
        src: ["img/inv-gasoline-out.png", "img/inv-gasoline-in.png", "img/inv-gasoline-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gasoline", "Fuel for Smelter", vn.WWW, [[vM.MWNmV, 4], [vM.wvm, 1]], 1, [[Mn.WNm, 20000]]),
      stack: 255,
      nw: mW.MMwNn
    }, {
      id: vM.Mmm,
      nm: {
        src: ["img/inv-sulfur-pickaxe-out.png", "img/inv-sulfur-pickaxe-in.png", "img/inv-sulfur-pickaxe-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Sulfur Pickaxe", "Mine also Uranium", vn.wVnMM, [[vM.WMW, 2], [vM.vvw, 6], [vM.wvm, 6]], 1, [[Mn.WNm, 90000]], 9, vM.vwV),
      MnW: 22,
      stack: 1,
      nw: mW.Mmm,
      wait: 10
    }, {
      id: vM.WvW,
      nm: {
        src: ["img/inv-chest-out.png", "img/inv-chest-in.png", "img/inv-chest-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood chest", "You can't store food in.", vn.VMv, [[vM.wvw, 50], [vM.mmW, 20]], 1, [[Mn.vWv, 30000]], 8),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.WvW,
      wait: 10,
      Nwn: 1,
      mVw: 600,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-chest.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-chest.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      Mw: Vw.WwmNM,
      MMw: 25,
      nnv: {
        src: "img/e-chest.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: {
        src: "img/day-chest.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvw,
      mnM: 55,
      VWw: 315360000000,
      WW: 300,
      vV: 0
    }, {
      id: vM.VVMnm,
      nm: {
        src: ["img/inv-fridge-out.png", "img/inv-fridge-in.png", "img/inv-fridge-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Fridge", "Save your food.", vn.VMv, [[vM.vvw, 5], [vM.NVV, 4]], 1, [[Mn.WNm, 90000]], 9),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.VVMnm,
      wait: 10,
      Nwn: 1,
      VvVnN: 1,
      mVw: 600,
      width: [50, 100, 50, 100],
      height: [100, 50, 100, 50],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 50, 0],
      vNV: [0, 0, 0, 50],
      Nnw: {
        src: "img/day-clear-blue-fridge.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-fridge.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      Mw: Vw.WwmNM,
      MMw: 25,
      nnv: {
        src: "img/e-fridge.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-fridge.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 55,
      VWw: 315360000000,
      WW: 300,
      vV: 0
    }, {
      id: vM.nNwMM,
      nm: {
        src: ["img/inv-wood-floor-out.png", "img/inv-wood-floor-in.png", "img/inv-wood-floor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood floor", "Players can't spawn on it", vn.VMv, [[vM.wvw, 15]], 2, [[Mn.vWv, 15000]]),
      stack: 255,
      nw: mW.nNwMM,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 2,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-wood-floor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-wood-floor.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.nNwMM,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nwnnM,
      Nnv: [{
        src: "img/day-wood-floor-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.MMM,
      mmM: Vm.wMn,
      Vv: [{
        src: "img/day-wood-floor-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 4000,
      vV: 0
    }, {
      id: vM.mWMVn,
      nm: {
        src: ["img/inv-hammer-out.png", "img/inv-hammer-in.png", "img/inv-hammer-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Hammer", "Destroy walls quickly.", vn.wVnMM, [[vM.wvw, 100], [vM.vvw, 10]], 1, [[Mn.WNm, 30000]], 7),
      MnW: 23,
      stack: 1,
      nw: mW.mWMVn,
      wait: 10
    }, {
      id: vM.NMnNN,
      nm: {
        src: ["img/inv-sleeping-bag-out.png", "img/inv-sleeping-bag-in.png", "img/inv-sleeping-bag-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Sleeping Bag", "Once dead, you keep your base", vn.WWW, [[vM.nVW, 7], [vM.mNw, 7], [vM.mvn, 7]], 1, [[Mn.mmn, 20000]], 9),
      stack: 255,
      nw: mW.NMnNN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-sleeping-bag.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-sleeping-bag.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.MnMvN,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-sleeping-bag.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.vWWwm,
      mnM: 80,
      VWw: 315360000000,
      WW: 500,
      vV: 0
    }, {
      id: vM.WVvwN,
      nm: {
        src: ["img/inv-repair-hammer-out.png", "img/inv-repair-hammer-in.png", "img/inv-repair-hammer-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Repair Hammer", "Repair walls but require nails.", vn.wVnMM, [[vM.wvw, 120], [vM.vvw, 2]], 1, [[Mn.vWv, 30000]], 5),
      MnW: 24,
      stack: 1,
      nw: mW.WVvwN,
      wait: 10
    }, {
      id: vM.WVNWM,
      nm: {
        src: ["img/inv-nails-out.png", "img/inv-nails-in.png", "img/inv-nails-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Nails", "Needed to repair walls.", vn.WWW, [[vM.vvw, 2]], 85, [[Mn.vWv, 20000]]),
      stack: 255,
      nw: mW.WVNWM
    }, {
      id: vM.vWmnN,
      nm: {
        src: ["img/inv-wood-floor-light-out.png", "img/inv-wood-floor-light-in.png", "img/inv-wood-floor-light-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Light Wood Floor", "Players can't spawn on it", vn.VMv, [[vM.wvw, 15]], 2, [[Mn.vWv, 15000]]),
      stack: 255,
      nw: mW.vWmnN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 2,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-woodlight-floor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-woodlight-floor.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.vWmnN,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nwnnM,
      Nnv: [{
        src: "img/day-wood-floor-light-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.MMM,
      mmM: Vm.wMn,
      Vv: [{
        src: "img/day-wood-floor-light-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-floor-light-46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.VnWmN,
      mnM: 80,
      VWw: 315360000000,
      WW: 4000,
      vV: 0
    }, {
      id: vM.vWVnW,
      nm: {
        src: ["img/inv-wood-smallwall-out.png", "img/inv-wood-smallwall-in.png", "img/inv-wood-smallwall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wooden Low Wall", "You can shoot through it.", vn.VMv, [[vM.wvw, 10]], 1, [[Mn.vWv, 10000]]),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.vWVnW,
      wait: 10,
      mVw: 1000,
      width: [100, 35, 100, 35],
      height: [35, 100, 35, 100],
      mWN: [0, -30, 0, 30],
      wVW: [30, 0, -30, 0],
      Vnm: [0, 0, 0, 65],
      vNV: [65, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-wood-smallwall.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-wood-smallwall.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 1,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      VWNnM: [1, 0, -1, 0],
      WMNvW: [0, -1, 0, 1],
      VmWVV: [0, 0, 65, 0],
      NMmMM: [0, 0, 0, 65],
      wMwmn: [35, 100, 35, 100],
      Nvwmm: [100, 35, 100, 35],
      VnWWn: 6,
      WwVMm: 46,
      Nmm: 0,
      Mw: Vw.MwM,
      Nnv: [{
        src: "img/day-wood-smallwalls-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: [{
        src: "img/day-wood-smallwalls-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-smallwalls-39.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 3000,
      vV: 0
    }, {
      id: vM.nmVvv,
      nm: {
        src: ["img/inv-stone-smallwall-out.png", "img/inv-stone-smallwall-in.png", "img/inv-stone-smallwall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone Low Wall", "You can shoot through it.", vn.VMv, [[vM.mmW, 10]], 1, [[Mn.vWv, 15000]], 3),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.nmVvv,
      wait: 10,
      mVw: 1000,
      width: [100, 35, 100, 35],
      height: [35, 100, 35, 100],
      mWN: [0, -30, 0, 30],
      wVW: [30, 0, -30, 0],
      Vnm: [0, 0, 0, 65],
      vNV: [65, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-smallwalls.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-smallwalls.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 1,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      VWNnM: [1, 0, -1, 0],
      WMNvW: [0, -1, 0, 1],
      VmWVV: [0, 0, 65, 0],
      NMmMM: [0, 0, 0, 65],
      wMwmn: [35, 100, 35, 100],
      Nvwmm: [100, 35, 100, 35],
      VnWWn: 6,
      WwVMm: 46,
      Nmm: 0,
      Mw: Vw.MwM,
      Nnv: [{
        src: "img/day-stone-smallwalls-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.nWvwn,
      mmM: Vm.VWm,
      Vv: [{
        src: "img/day-stone-smallwalls-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-smallwalls-39.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.mmW,
      mnM: 80,
      VWw: 315360000000,
      WW: 7000,
      vV: 0
    }, {
      id: vM.wnmvV,
      nm: {
        src: ["img/inv-steel-smallwall-out.png", "img/inv-steel-smallwall-in.png", "img/inv-steel-smallwall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Low Wall", "You can shoot through it.", vn.VMv, [[vM.vvw, 2]], 1, [[Mn.WNm, 20000]], 6, vM.nmVvv),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 0,
      stack: 255,
      nw: mW.wnmvV,
      wait: 10,
      mVw: 1000,
      width: [100, 35, 100, 35],
      height: [35, 100, 35, 100],
      mWN: [0, -30, 0, 30],
      wVW: [30, 0, -30, 0],
      Vnm: [0, 0, 0, 65],
      vNV: [65, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-smallwalls.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-smallwalls.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 1,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      angle: Math[VM[99]] / 2,
      VWNnM: [1, 0, -1, 0],
      WMNvW: [0, -1, 0, 1],
      VmWVV: [0, 0, 65, 0],
      NMmMM: [0, 0, 0, 65],
      wMwmn: [35, 100, 35, 100],
      Nvwmm: [100, 35, 100, 35],
      VnWWn: 6,
      WwVMm: 46,
      Nmm: 0,
      Mw: Vw.MwM,
      Nnv: [{
        src: "img/day-steel-smallwalls-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-steel-smallwalls-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-steel-smallwalls-39.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.Wvn,
      mnM: 55,
      VWw: 315360000000,
      WW: 15000,
      vV: 0
    }, {
      id: vM.VnMNM,
      VvN: 0,
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: [],
      detail: {
        Mnv: undefined
      },
      NNW: -1,
      Mw: Vw.mVVnW
    }, {
      id: vM.mMNWW,
      nm: {
        src: ["img/inv-tomato-soup-out.png", "img/inv-tomato-soup-in.png", "img/inv-tomato-soup-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tomato Soup", "Has not yet been opened.", vn.WWW, [[vM.VnvWn, 1], [vM.NMN, 2]], 1, [[Mn.nwm, 15000], [Mn.Wvw, 7000]]),
      MnW: 25,
      stack: 5,
      nw: mW.mMNWW,
      VwNmw: 2,
      wnvvW: vM.VnvWn,
      wait: 10
    }, {
      id: vM.nWM,
      nm: {
        src: ["img/inv-syringe-out.png", "img/inv-syringe-in.png", "img/inv-syringe-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Syringe", "Useful to make drugs.", vn.WnMWm, [[vM.mwv, 1]], 1, [[Mn.WNm, 30000]]),
      stack: 20,
      nw: mW.nWM,
      vV: 50
    }, {
      id: vM.VVm,
      nm: {
        src: ["img/inv-chemical-component-out.png", "img/inv-chemical-component-in.png", "img/inv-chemical-component-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Chemical Component", "Useful to make a drugs."),
      stack: 20,
      nw: mW.VVm,
      vV: 50
    }, {
      id: vM.MmwVm,
      nm: {
        src: ["img/inv-radaway-out.png", "img/inv-radaway-in.png", "img/inv-radaway-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("RadAway", "Reduce your radioactivity a lot.", vn.WnMWm, [[vM.nWM, 1], [vM.VVm, 1], [vM.NnvwN, 1]], 1, [[Mn.MNw, 45000]]),
      MnW: 26,
      stack: 5,
      nw: mW.MmwVm,
      wait: 10
    }, {
      id: vM.NMNVW,
      nm: {
        src: ["img/inv-tomato-seed-out.png", "img/inv-tomato-seed-in.png", "img/inv-tomato-seed-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tomato Seed", "A fruit or vegetable?", vn.wwwNW, [[vM.NMN, 4]], 1, [[Mn.nwm, 30000], [Mn.Wvw, 20000]]),
      stack: 40,
      nw: mW.NMNVW,
      nWWMn: mW.NMN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/day-clear-blue-tomato.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-tomato.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.WWmNN,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.vnNnv,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      Vv: [{
        src: "img/day-plant0-tomato.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant1-tomato.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant2-tomato.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant3-tomato.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant4-tomato.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.NMN,
      mnM: 68,
      VWw: 2400000,
      WW: 250,
      vV: 0
    }, {
      id: vM.NMN,
      nm: {
        src: ["img/inv-tomato-out.png", "img/inv-tomato-in.png", "img/inv-tomato-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tomato", "Why did the tomato blush?"),
      stack: 20,
      nw: mW.NMN,
      wait: 5,
      VwNmw: 10,
      wnvvW: vM.nNNwW,
      MnW: 27,
      vV: 24
    }, {
      id: vM.nNNwW,
      nm: {
        src: ["img/inv-rotten-tomato-out.png", "img/inv-rotten-tomato-in.png", "img/inv-rotten-tomato-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Tomato", "Go on, have a bite!"),
      stack: 20,
      nw: mW.nNNwW,
      wait: 5,
      MnW: 28,
      vV: 20
    }, {
      id: vM.VnvWn,
      nm: {
        src: ["img/inv-can-out.png", "img/inv-can-in.png", "img/inv-can-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Can", "Useful to craft food can.", vn.WWW, [[vM.vvw, 1]], 1, [[Mn.vWv, 20000]]),
      MnW: 0,
      stack: 255,
      nw: mW.VnvWn
    }, {
      id: vM.mWwWW,
      nm: {
        src: ["img/inv-wood-crossbow-out.png", "img/inv-wood-crossbow-in.png", "img/inv-wood-crossbow-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wood Crossbow", "Shoot faster, reload slower", vn.MnM, [[vM.wvw, 200], [vM.mvn, 2], [vM.vvw, 1]], 1, [[Mn.vWv, 50000]], 6),
      MnW: 29,
      vvM: vM.NMvVw,
      stack: 1,
      nw: mW.mWwWW,
      wait: 10
    }, {
      id: vM.NMvVw,
      nm: {
        src: ["img/inv-wood-crossarrow-out.png", "img/inv-wood-crossarrow-in.png", "img/inv-wood-crossarrow-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Crossbow Arrows", "Needed to use crossbow.", vn.MnM, [[vM.wvw, 40], [vM.vvw, 1]], 10, [[Mn.vWv, 30000]]),
      stack: 255,
      nw: mW.NMvVw
    }, {
      id: vM.nVvwW,
      nm: {
        src: ["img/inv-nail-gun-out.png", "img/inv-nail-gun-in.png", "img/inv-nail-gun-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Nail Gun", "Repair walls from a distance", vn.wVnMM, [[vM.vvw, 3], [vM.Nnm, 1], [vM.mwv, 1], [vM.NVV, 4]], 1, [[Mn.WNm, 30000]], 7),
      MnW: 30,
      vvM: vM.WVNWM,
      stack: 1,
      nw: mW.nVvwW,
      wait: 10
    }, {
      id: vM.mvnmn,
      nm: {
        src: ["img/inv-sawed-off-shotgun-out.png", "img/inv-sawed-off-shotgun-in.png", "img/inv-sawed-off-shotgun-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Sawed Off", "Shoot less far, do more damages", vn.MnM, [[vM.Nmnmv, 1], [vM.WMW, 6], [vM.vvw, 6]], 1, [[Mn.WNm, 200000]], 13, vM.Nmnmv),
      MnW: 31,
      vvM: vM.wvVnm,
      stack: 1,
      nw: mW.mvnmn,
      wait: 10
    }, {
      id: vM.vnvWm,
      nm: {
        src: ["img/inv-stone-floor-out.png", "img/inv-stone-floor-in.png", "img/inv-stone-floor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone floor", "Players can't spawn on it", vn.VMv, [[vM.mmW, 15]], 2, [[Mn.vWv, 15000]], 4),
      stack: 255,
      nw: mW.vnvWm,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 2,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-floor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-floor.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.vnvWm,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nwnnM,
      Nnv: [{
        src: "img/day-stone-floor-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.MMM,
      mmM: Vm.VWm,
      Vv: [{
        src: "img/day-stone-floor-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-floor-46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.mmW,
      mnM: 80,
      VWw: 315360000000,
      WW: 8000,
      vV: 0
    }, {
      id: vM.VNnVn,
      nm: {
        src: ["img/inv-tiling-floor-out.png", "img/inv-tiling-floor-in.png", "img/inv-tiling-floor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tiling floor", "Players can't spawn on it", vn.VMv, [[vM.mmW, 15]], 2, [[Mn.vWv, 15000]], 4),
      stack: 255,
      nw: mW.VNnVn,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 2,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-tiling-floor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-tiling-floor.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.VNnVn,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nwnnM,
      Nnv: [{
        src: "img/day-tiling-floor-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.MMM,
      mmM: Vm.VWm,
      Vv: [{
        src: "img/day-tiling-floor-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tiling-floor-46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.mmW,
      mnM: 80,
      VWw: 315360000000,
      WW: 8000,
      vV: 0
    }, {
      id: vM.mmmwm,
      VvN: 0,
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: [],
      wMm: [],
      detail: {
        Mnv: undefined
      },
      NNW: -1,
      Mw: Vw.NwMwN
    }, {
      id: vM.MWMnW,
      nm: {
        src: ["img/inv-chips-out.png", "img/inv-chips-in.png", "img/inv-chips-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Crisps", "You salty?"),
      MnW: 32,
      stack: 5,
      nw: mW.MWMnW,
      VwNmw: 2,
      wnvvW: vM.nnmmN,
      wait: 10
    }, {
      id: vM.nnmmN,
      nm: {
        src: ["img/inv-rotten-chips-out.png", "img/inv-rotten-chips-in.png", "img/inv-rotten-chips-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Expired Crisps", "Go on, have a bite!"),
      stack: 5,
      nw: mW.nnmmN,
      wait: 5,
      MnW: 33,
      vV: 20
    }, {
      id: vM.nvv,
      nm: {
        src: ["img/inv-electronic-part-out.png", "img/inv-electronic-part-in.png", "img/inv-electronic-part-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Electronic Parts", "Break TV's and Computers to find it"),
      stack: 255,
      nw: mW.nvv,
      vV: 100
    }, {
      id: vM.mwv,
      nm: {
        src: ["img/inv-junk-out.png", "img/inv-junk-in.png", "img/inv-junk-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Junk", "Find it in houses"),
      stack: 255,
      nw: mW.mwv,
      vV: 40
    }, {
      id: vM.www,
      nm: {
        src: ["img/inv-wires-out.png", "img/inv-wires-in.png", "img/inv-wires-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Big Wire", "Break big computers in power station (in the city)"),
      stack: 255,
      nw: mW.www,
      vV: 40
    }, {
      id: vM.NVV,
      nm: {
        src: ["img/inv-small-energy-cells-out.png", "img/inv-small-energy-cells-in.png", "img/inv-small-energy-cells-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Energy Cells", "Used for energy weapons/buildings", vn.WWW, [[vM.WMW, 1], [vM.WnV, 1]], 30, [[Mn.MVV, 28000]], 6),
      stack: 255,
      nw: mW.NVV
    }, {
      id: vM.MvNvm,
      nm: {
        src: ["img/inv-laser-pistol-out.png", "img/inv-laser-pistol-in.png", "img/inv-laser-pistol-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Laser Pistol", "Bullets are faster.", vn.MnM, [[vM.WnV, 2], [vM.www, 1], [vM.nvv, 2], [vM.WMW, 1], [vM.vvw, 4]], 1, [[Mn.MVV, 180000]], 14),
      MnW: 34,
      vvM: vM.NVV,
      stack: 1,
      nw: mW.MvNvm,
      wait: 10
    }, {
      id: vM.MVV,
      nm: {
        src: ["img/inv-workbench3-out.png", "img/inv-workbench3-in.png", "img/inv-workbench3-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tesla Bench", "Allow you to make powerful items", vn.WWW, [[vM.WMW, 4], [vM.vvw, 6], [vM.nvv, 3], [vM.www, 4], [vM.WnV, 2]], 1, [[Mn.WNm, 120000]], 10, vM.WNm),
      MnW: 21,
      NVW: 60000,
      VvN: 0,
      z: 1,
      vVW: Mn.MVV,
      stack: 255,
      nw: mW.MVV,
      wait: 10,
      mVw: 1000,
      width: [100, 260, 100, 260],
      height: [260, 100, 260, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, -80, 0, -80],
      vNV: [-80, 0, -80, 0],
      VMwMM: [-1, 0, -1, 0],
      WwNmM: [0, -1, 0, -1],
      Nnw: {
        src: "img/day-clear-blue-workbench3.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-workbench3.png",
        m: {
          n: 0
        }
      },
      wvnmn: [-20.5, -101.5, 20.5, 101.5],
      WmmmM: [101.5, -20.5, -101, 20.5],
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.vVvNw,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.nnNMN,
      MMw: 16,
      nnv: {
        src: "img/e-workbench3.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-workbench3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-workbench3-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-workbench3-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-workbench3-3.png",
        m: {
          n: 0
        }
      }],
      VVN: [{
        src: "img/day-tesla-light0.png",
        m: {
          n: 0
        }
      }, 0, {
        src: "img/day-tesla-light1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tesla-light2.png",
        m: {
          n: 0
        }
      }, 0, {
        src: "img/day-tesla-light3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tesla-light4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-tesla-light5.png",
        m: {
          n: 0
        }
      }, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 3000,
      vV: 0
    }, {
      id: vM.WMW,
      nm: {
        src: ["img/inv-alloys-out.png", "img/inv-alloys-in.png", "img/inv-alloys-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Alloys", "To craft powerful items", vn.NvWVw, [[vM.Wvn, 1], [vM.mwv, 1], [vM.wvm, 1]], 1, [[Mn.vMM, 10000]]),
      stack: 255,
      nw: mW.WMW
    }, {
      id: vM.Mvv,
      nm: {
        src: ["img/inv-sulfur-axe-out.png", "img/inv-sulfur-axe-in.png", "img/inv-sulfur-axe-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Sulfur Axe", "You look cool with it.", vn.wVnMM, [[vM.mvw, 1], [vM.WMW, 8], [vM.vvw, 10], [vM.wvm, 20]], 1, [[Mn.WNm, 200000]], 10, vM.mvw),
      MnW: 35,
      stack: 1,
      nw: mW.Mvv,
      wait: 10
    }, {
      id: vM.MwmNN,
      nm: {
        src: ["img/inv-landmine-out.png", "img/inv-landmine-in.png", "img/inv-landmine-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Landmine", "When you feel it, it's too late", vn.MnM, [[vM.vvw, 4], [vM.mwv, 1], [vM.wvm, 2], [vM.mNw, 2]], 1, [[Mn.WNm, 40000]], 9),
      stack: 20,
      nw: mW.MwmNN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [50, 50, 50, 50],
      height: [50, 50, 50, 50],
      Vnm: [25, 25, 25, 25],
      vNV: [25, 25, 25, 25],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-landmine.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-landmine.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 1,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      wmw: 200,
      vWM: 400,
      Nmm: 0,
      Mw: Vw.wNWwM,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-landmine-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-landmine-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-landmine-2.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.NNMNv,
      mnM: 80,
      VWw: 315360000000,
      WW: 5,
      vV: 0
    }, {
      id: vM.nMVMv,
      nm: {
        src: ["img/inv-dynamite-out.png", "img/inv-dynamite-in.png", "img/inv-dynamite-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Dynamite", "Get out of here, it gonna blow!", vn.MnM, [[vM.mvn, 1], [vM.mNw, 2], [vM.wvm, 2], [vM.mwv, 1]], 1, [[Mn.WNm, 40000]], 9),
      stack: 10,
      nw: mW.nMVMv,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-dynamite.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-dynamite.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 1,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      wmw: 180,
      vWM: 1400,
      Nmm: 0,
      Mw: Vw.nMMnM,
      Vvm: Vm.NnM,
      mmM: Vm.MMM,
      Vv: [{
        src: "img/day-dynamite.png",
        m: {
          n: 0
        }
      }, {
        src: "img/dynamite-yellow.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.NVvnn,
      mnM: 80,
      VWw: 5000,
      WW: 100,
      vV: 0
    }, {
      id: vM.vNwvM,
      nm: {
        src: ["img/inv-C4-out.png", "img/inv-C4-in.png", "img/inv-C4-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("C4", "Explode when you hit the trigger!", vn.MnM, [[vM.nMVMv, 2], [vM.Nnm, 1], [vM.WMW, 2], [vM.nvv, 1]], 1, [[Mn.WNm, 60000]], 16, vM.nMVMv),
      stack: 5,
      nw: mW.vNwvM,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-C4.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-C4.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 1,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      wmw: 255,
      vWM: 6000,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nMMnM,
      Vvm: Vm.NnM,
      mmM: Vm.MMM,
      Vv: [{
        src: "img/day-C4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/C4-red.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.NNMNv,
      mnM: 80,
      VWw: 315360000000,
      WW: 100,
      vV: 0
    }, {
      id: vM.Nwnwm,
      nm: {
        src: ["img/inv-joystick-out.png", "img/inv-joystick-in.png", "img/inv-joystick-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("C4 Trigger", "Don't press the button or else...", vn.MnM, [[vM.vvw, 5], [vM.nvv, 1], [vM.NVV, 8], [vM.Nnm, 1]], 1, [[Mn.WNm, 100000]], 16, vM.vNwvM),
      stack: 1,
      nw: mW.Nwnwm,
      wait: 10,
      MnW: 36,
      vV: 0
    }, {
      id: vM.VmW,
      nm: {
        src: ["img/inv-composter-out.png", "img/inv-composter-in.png", "img/inv-composter-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Compost", "Allows to accelerate rotting", vn.WWW, [[vM.vvw, 4], [vM.nvv, 1]], 1, [[Mn.WNm, 100000]], 8),
      MnW: 21,
      NVW: 10000,
      VvN: 0,
      z: 1,
      vVW: Mn.VmW,
      stack: 255,
      nw: mW.VmW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-composter.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-composter.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.Wvmwv,
      MMw: 16,
      nnv: {
        src: "img/e-composter.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-composter-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-composter.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 500,
      vV: 0
    }, {
      id: vM.MVNvN,
      nm: {
        src: ["img/inv-metal-helmet-out.png", "img/inv-metal-helmet-in.png", "img/inv-metal-helmet-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Metal Helmet", "Protects you from melee weapons", vn.VmM, [[vM.vvw, 3], [vM.MVVMM, 3], [vM.nVW, 3], [vM.WVNWM, 80]], 1, [[Mn.vWv, 70000]]),
      MvN: 7,
      stack: 1,
      nw: mW.MVNvN,
      wait: 10,
      vwm: 0,
      WmV: 0.15,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: -0.01
    }, {
      id: vM.nMWWm,
      nm: {
        src: ["img/inv-welding-helmet-out.png", "img/inv-welding-helmet-in.png", "img/inv-welding-helmet-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Welding Helmet", "Protects you from melee weapons", vn.VmM, [[vM.vvw, 10], [vM.WMW, 2], [vM.nVW, 3], [vM.WVNWM, 160], [vM.MVNvN, 1]], 1, [[Mn.WNm, 140000]], 7),
      MvN: 8,
      stack: 1,
      nw: mW.nMWWm,
      wait: 10,
      vwm: 0,
      WmV: 0.4,
      mNW: 0,
      vnN: 0,
      nvw: 0.05,
      wNn: 0,
      mMw: -0.02
    }, {
      id: vM.wVmWV,
      nm: {
        src: ["img/inv-gladiator-helmet-out.png", "img/inv-gladiator-helmet-in.png", "img/inv-gladiator-helmet-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gladiator Helmet", "Strength and honor.", vn.VmM, [[vM.vvw, 12], [vM.WMW, 6], [vM.nVW, 4], [vM.WVNWM, 255], [vM.nMWWm, 1]], 1, [[Mn.WNm, 300000]], 17, vM.nMWWm),
      MvN: 9,
      stack: 1,
      nw: mW.wVmWV,
      wait: 10,
      vwm: 0,
      WmV: 0.6,
      mNW: 0.1,
      vnN: 0,
      nvw: 0.2,
      wNn: 0,
      mMw: -0.03
    }, {
      id: vM.mVWmN,
      nm: {
        src: ["img/inv-leather-jacket-out.png", "img/inv-leather-jacket-in.png", "img/inv-leather-jacket-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Leather Jacket", "Protects you from guns", vn.VmM, [[vM.mvn, 2], [vM.nVW, 4]], 1, [[Mn.mmn, 70000]]),
      MvN: 10,
      stack: 1,
      nw: mW.mVWmN,
      wait: 10,
      vwm: 0.0006,
      WmV: 0,
      mNW: 0.2,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.wWVNv,
      nm: {
        src: ["img/inv-kevlar-suit-out.png", "img/inv-kevlar-suit-in.png", "img/inv-kevlar-suit-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Kevlar Suit", "Protects you from guns", vn.VmM, [[vM.vvw, 6], [vM.mvn, 4], [vM.nVW, 6], [vM.WMW, 2], [vM.mVWmN, 1]], 1, [[Mn.mmn, 100000]], 12),
      MvN: 11,
      stack: 1,
      nw: mW.wWVNv,
      wait: 10,
      vwm: 0,
      WmV: 0,
      mNW: 0.4,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.MmwWv,
      nm: {
        src: ["img/inv-SWAT-suit-out.png", "img/inv-SWAT-suit-in.png", "img/inv-SWAT-suit-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("SWAT Suit", "Protects you from guns", vn.VmM, [[vM.vvw, 10], [vM.mvn, 10], [vM.nVW, 10], [vM.WMW, 4], [vM.wWVNv, 1]], 1, [[Mn.mmn, 200000]], 18, vM.wWVNv),
      MvN: 12,
      stack: 1,
      nw: mW.MmwWv,
      wait: 10,
      vwm: 0,
      WmV: 0.1,
      mNW: 0.7,
      vnN: 0,
      nvw: 0.1,
      wNn: 0,
      mMw: -0.01
    }, {
      id: vM.NnWNv,
      nm: {
        src: ["img/inv-protective-suit-out.png", "img/inv-protective-suit-in.png", "img/inv-protective-suit-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Protective Suit", "Protects you from explosives", vn.VmM, [[vM.vvw, 6], [vM.mvn, 6], [vM.nVW, 6], [vM.WMW, 2]], 1, [[Mn.mmn, 200000]], 12, vM.mnWvm),
      MvN: 13,
      stack: 1,
      nw: mW.NnWNv,
      wait: 10,
      vwm: 0.00085,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0.9,
      wNn: 0,
      mMw: -0.03
    }, {
      id: vM.WVWnv,
      nm: {
        src: ["img/inv-tesla-0-out.png", "img/inv-tesla-0-in.png", "img/inv-tesla-0-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Power Armor", "Protects you from energy weapons", vn.VmM, [[vM.vvw, 20], [vM.WnV, 2], [vM.nvv, 1], [vM.www, 2], [vM.WMW, 2]], 1, [[Mn.MVV, 150000]], 10),
      MvN: 14,
      stack: 1,
      nw: mW.WVWnv,
      wait: 10,
      vwm: 0,
      WmV: 0,
      mNW: 0,
      vnN: 0.3,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.vvWNM,
      nm: {
        src: ["img/inv-tesla-armor-out.png", "img/inv-tesla-armor-in.png", "img/inv-tesla-armor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tesla Armor", "Protects you from energy weapons", vn.VmM, [[vM.WVWnv, 1], [vM.WnV, 10], [vM.nvv, 5], [vM.www, 5], [vM.WMW, 10]], 1, [[Mn.MVV, 300000]], 18, vM.WVWnv, 3),
      MvN: 15,
      stack: 1,
      nw: mW.vvWNM,
      wait: 10,
      vwm: 0.00085,
      WmV: 0.2,
      mNW: 0.2,
      vnN: 0.75,
      nvw: 0.2,
      wNn: 0.01,
      mMw: -0.02
    }, {
      id: vM.wVvNv,
      nm: {
        src: ["img/inv-wood-spike-out.png", "img/inv-wood-spike-in.png", "img/inv-wood-spike-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Wooden Spike", "Hurt and slow down", vn.VMv, [[vM.wvw, 80]], 1, [[Mn.vWv, 25000]]),
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      stack: 40,
      nw: mW.wVvNv,
      wait: 10,
      mVw: 1000,
      width: [50, 50, 50, 50],
      height: [50, 50, 50, 50],
      Vnm: [25, 25, 25, 25],
      vNV: [25, 25, 25, 25],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-wood-spike.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-wood-spike.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.MWVvW,
      hidden: [{
        src: "img/day-wood-spike-cover1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-spike-cover2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-spike-cover3.png",
        m: {
          n: 0
        }
      }],
      MnmMv: [{
        src: "img/day-wood-spike-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-spike-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-wood-spike-3.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wvw,
      mnM: 80,
      VWw: 315360000000,
      WW: 200,
      vV: 0
    }, {
      id: vM.VWMWm,
      nm: {
        src: ["img/inv-laser-submachine-out.png", "img/inv-laser-submachine-in.png", "img/inv-laser-submachine-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Laser Submachine", "It's the best weapon", vn.MnM, [[vM.WMW, 10], [vM.vvw, 6], [vM.WnV, 6], [vM.www, 2], [vM.nvv, 3]], 1, [[Mn.MVV, 180000]], 14, vM.MvNvm, 2),
      MnW: 37,
      vvM: vM.NVV,
      stack: 1,
      nw: mW.VWMWm,
      wait: 10
    }, {
      id: vM.Mnvnn,
      nm: {
        src: ["img/inv-grenade-out.png", "img/inv-grenade-in.png", "img/inv-grenade-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Grenade", "Explodes when you throw it away.", vn.MnM, [[vM.vvw, 2], [vM.mwv, 2], [vM.wvm, 2], [vM.mNw, 2]], 2, [[Mn.WNm, 30000]], 10),
      MnW: 38,
      wmw: 130,
      vWM: 400,
      stack: 10,
      nw: mW.Mnvnn,
      wait: 10
    }, {
      id: vM.wNVvm,
      nm: {
        src: ["img/inv-super-hammer-out.png", "img/inv-super-hammer-in.png", "img/inv-super-hammer-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Super Hammer", "Destroy indestructible walls."),
      MnW: 39,
      stack: 1,
      nw: mW.wNVvm,
      wait: 10
    }, {
      id: vM.Wmwmn,
      nm: {
        src: ["img/inv-ghoul-blood-out.png", "img/inv-ghoul-blood-in.png", "img/inv-ghoul-blood-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Ghoul Blood", "Find it on speedy ghouls"),
      stack: 255,
      nw: mW.Wmwmn,
      vV: 100
    }, {
      id: vM.NmVwV,
      nm: {
        src: ["img/inv-camouflage-gear-out.png", "img/inv-camouflage-gear-in.png", "img/inv-camouflage-gear-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Camouflage Gear", "Hide you in the forest", vn.VmM, [[vM.wvw, 90], [vM.mvn, 2], [vM.nVW, 2]], 1, [[Mn.mmn, 40000]]),
      MvN: 16,
      stack: 1,
      nw: mW.NmVwV,
      wait: 10,
      vwm: 0,
      WmV: 0,
      mNW: 0,
      vnN: 0,
      nvw: 0,
      wNn: 0,
      mMw: 0
    }, {
      id: vM.MNw,
      nm: {
        src: ["img/inv-agitator-out.png", "img/inv-agitator-in.png", "img/inv-agitator-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Agitator", "Allows to craft drugs", vn.WWW, [[vM.vvw, 6], [vM.nvv, 1]], 1, [[Mn.WNm, 100000]], 8),
      MnW: 21,
      NVW: 100000,
      VvN: 0,
      z: 1,
      vVW: Mn.MNw,
      stack: 255,
      nw: mW.MNw,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-agitator.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-agitator.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.NWNwV,
      MMw: 16,
      nnv: {
        src: "img/e-agitator.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-agitator1-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-agitator1-on.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-agitator-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-agitator-2.png",
        m: {
          n: 0
        }
      }],
      NWvmn: [[-25.5, 21], [-21, -25.5], [25.5, -21], [21, 25.5]],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 500,
      vV: 0
    }, {
      id: vM.mMVVV,
      nm: {
        src: ["img/inv-ghoul-drug-out.png", "img/inv-ghoul-drug-in.png", "img/inv-ghoul-drug-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Ghoul Drug", "Ghouls does not attack you.", vn.WnMWm, [[vM.nWM, 1], [vM.VVm, 1], [vM.NnvwN, 1], [vM.MVVMV, 1], [vM.Wmwmn, 1]], 1, [[Mn.MNw, 30000]], 10),
      MnW: 40,
      stack: 5,
      nw: mW.mMVVV,
      wait: 10
    }, {
      id: vM.wwnNm,
      nm: {
        src: ["img/inv-mushroom1-out.png", "img/inv-mushroom1-in.png", "img/inv-mushroom1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Amanita", "Poisoned, really dangerous"),
      stack: 20,
      nw: mW.wwnNm,
      wait: 5,
      VwNmw: 10,
      wnvvW: vM.wmnWV,
      MnW: 41,
      vV: 24
    }, {
      id: vM.NnvwN,
      nm: {
        src: ["img/inv-mushroom2-out.png", "img/inv-mushroom2-in.png", "img/inv-mushroom2-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Boletus", "Can be eaten."),
      stack: 20,
      nw: mW.NnvwN,
      wait: 5,
      VwNmw: 10,
      wnvvW: vM.Wmnww,
      MnW: 42,
      vV: 24
    }, {
      id: vM.MVVMV,
      nm: {
        src: ["img/inv-mushroom3-out.png", "img/inv-mushroom3-in.png", "img/inv-mushroom3-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Russula", "Can be eaten."),
      stack: 20,
      nw: mW.MVVMV,
      wait: 5,
      VwNmw: 10,
      wnvvW: vM.wWVWn,
      MnW: 43,
      vV: 24
    }, {
      id: vM.wmnWV,
      nm: {
        src: ["img/inv-rotten-mushroom1-out.png", "img/inv-rotten-mushroom1-in.png", "img/inv-rotten-mushroom1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Mushroom", "Go on, have a bite!"),
      stack: 20,
      nw: mW.wmnWV,
      wait: 5,
      MnW: 44,
      vV: 20
    }, {
      id: vM.Wmnww,
      nm: {
        src: ["img/inv-rotten-mushroom2-out.png", "img/inv-rotten-mushroom2-in.png", "img/inv-rotten-mushroom2-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Mushroom", "Go on, have a bite!"),
      stack: 20,
      nw: mW.Wmnww,
      wait: 5,
      MnW: 45,
      vV: 20
    }, {
      id: vM.wWVWn,
      nm: {
        src: ["img/inv-rotten-mushroom3-out.png", "img/inv-rotten-mushroom3-in.png", "img/inv-rotten-mushroom3-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Mushroom", "Go on, have a bite!"),
      stack: 20,
      nw: mW.wWVWn,
      wait: 5,
      MnW: 46,
      vV: 20
    }, {
      id: vM.mWmWW,
      nm: {
        src: ["img/inv-lapadoine-out.png", "img/inv-lapadoine-in.png", "img/inv-lapadoine-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Lapadone", "You are faster a certain time.", vn.WnMWm, [[vM.nWM, 1], [vM.VVm, 1], [vM.wwnNm, 1], [vM.Wmwmn, 1]], 1, [[Mn.MNw, 45000]], 14),
      MnW: 47,
      stack: 5,
      nw: mW.mWmWW,
      wait: 10
    }, {
      id: vM.nmWVV,
      nm: {
        src: ["img/inv-lapabot-out.png", "img/inv-lapabot-in.png", "img/inv-lapabot-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("LapaBot", "Repair your base for you", vn.WWW, [[vM.vvw, 6], [vM.nvv, 1], [vM.Nnm, 1], [vM.WMW, 1]], 1, [[Mn.WNm, 100000]], 8),
      stack: 5,
      nw: mW.nmWVV,
      nWWMn: mW.NMN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/clear-blue-lapabot.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-lapabot.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.vVvNw,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nMvvW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/lapabot0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/lapabot1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/lapabot2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/lapabot3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/lapabot4.png",
        m: {
          n: 0
        }
      }],
      vvMVW: {
        src: "img/day-lapabot-builder.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 68,
      VWw: 2400000,
      WW: 250,
      vV: 0,
      vvwWn: 315360000000,
      vMWMw: nnn.nmWVV,
      VWmNW: 20000,
      nVMVW: 4,
      nnnVm: 1
    }, {
      id: vM.Nnm,
      nm: {
        src: ["img/inv-small-wire-out.png", "img/inv-small-wire-in.png", "img/inv-small-wire-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Small Wire", "Find it on TV's and computers in abandonned houses"),
      stack: 255,
      nw: mW.Nnm,
      vV: 40
    }, {
      id: vM.VNWmm,
      nm: {
        src: ["img/inv-pumpkin-out.png", "img/inv-pumpkin-in.png", "img/inv-pumpkin-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Pumpkin", "Eat it or craft a pumpkin ghoul"),
      stack: 20,
      nw: mW.VNWmm,
      wait: 5,
      VwNmw: 10,
      wnvvW: vM.mvWWN,
      MnW: 48,
      vV: 24
    }, {
      id: vM.mvWWN,
      nm: {
        src: ["img/inv-rotten-pumpkin-out.png", "img/inv-rotten-pumpkin-in.png", "img/inv-rotten-pumpkin-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Pumpkin", "You should not click"),
      stack: 20,
      nw: mW.mvWWN,
      wait: 5,
      MnW: 49,
      vV: 20
    }, {
      id: vM.wVmmn,
      nm: {
        src: ["img/inv-ghoul5-out.png", "img/inv-ghoul5-in.png", "img/inv-ghoul5-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Ghoul Seed", "Plant your pumpkin pet", -1, [[vM.VNWmm, 1], [vM.Wmwmn, 1]], 1, [[Mn.nwm, 30000], [Mn.Wvw, 20000]], 99),
      stack: 40,
      nw: mW.wVmmn,
      nWWMn: mW.NMN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/clear-blue-root.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-root.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.vVvNw,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.vnNnv,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: [{
        src: "img/day-root0-ghoul.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-root1-ghoul.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-root2-ghoul.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-root3-ghoul.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-root4-ghoul.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wnV,
      mnM: 68,
      VWw: 2400000,
      WW: 250,
      vV: 0,
      vvwWn: 120000,
      vMWMw: nnn.nmNWM,
      VWmNW: 15000,
      nVMVW: 3,
      nnnVm: 0
    }, {
      id: vM.vMW,
      nm: {
        src: ["img/inv-extractor-out.png", "img/inv-extractor-in.png", "img/inv-extractor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Extractor", "Allows you to extract minerals from the ground", vn.WWW, [[vM.WMW, 2], [vM.vvw, 10], [vM.WnV, 2], [vM.Nnm, 2], [vM.nvv, 1]], 1, [[Mn.WNm, 100000]], 12),
      MnW: 21,
      NVW: 740000,
      VvN: 0,
      z: 1,
      vVW: Mn.vMW,
      stack: 255,
      nw: mW.vMW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-extractor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-extractor.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.vVvwW,
      MMw: 16,
      nnv: {
        src: "img/e-extractor.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-extractor.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-extractor-rotate.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-extractor-off.png",
        m: {
          n: 0
        }
      }],
      NWvmn: [[0, 0], [0, 0], [0, 0], [0, 0]],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 500,
      vV: 0
    }, {
      id: vM.nMvmv,
      nm: {
        src: ["img/inv-antidote-out.png", "img/inv-antidote-in.png", "img/inv-antidote-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Antidote", "Remove the withdrawal effects (pink skin)", vn.WnMWm, [[vM.nWM, 1], [vM.VVm, 1], [vM.wwnNm, 1], [vM.wnMwV, 1]], 1, [[Mn.MNw, 45000]], 14),
      MnW: 50,
      stack: 5,
      nw: mW.nMvmv,
      wait: 10
    }, {
      id: vM.wnMwV,
      nm: {
        src: ["img/inv-antidote-flower-out.png", "img/inv-antidote-flower-in.png", "img/inv-antidote-flower-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rare Flower", "Use it to make an antidote"),
      stack: 5,
      nw: mW.wnMwV,
      vV: 400
    }, {
      id: vM.vmMwv,
      nm: {
        src: ["img/inv-seed-tree-out.png", "img/inv-seed-tree-in.png", "img/inv-seed-tree-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tree Seed", "Plant your forest", vn.wwwNW, [[vM.nWvVw, 1]], 5, [[Mn.nwm, 60000], [Mn.Wvw, 40000]]),
      stack: 100,
      nw: mW.vmMwv,
      nWWMn: mW.wnV,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/clear-blue-plant-tree.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-plant-tree.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.VVVnw,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.NMwNN,
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      Vv: [{
        src: "img/day-plant-tree0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant-tree1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant-tree2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant-tree3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-plant4-orange.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wvw,
      mnM: 68,
      VWw: 2400000,
      WW: 150,
      vV: 0
    }, {
      id: vM.nWvVw,
      nm: {
        src: ["img/inv-acorn-out.png", "img/inv-acorn-in.png", "img/inv-acorn-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Acorn", "Eat it or plant a tree"),
      stack: 20,
      nw: mW.nWvVw,
      wait: 5,
      VwNmw: 3,
      wnvvW: vM.vVwwn,
      MnW: 51,
      vV: 24
    }, {
      id: vM.vVwwn,
      nm: {
        src: ["img/inv-rotten-acorn-out.png", "img/inv-rotten-acorn-in.png", "img/inv-rotten-acorn-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Rotten Acorn", "Not really good"),
      stack: 20,
      nw: mW.vVwwn,
      wait: 5,
      MnW: 52,
      vV: 20
    }, {
      id: vM.NWVMn,
      nm: {
        src: ["img/inv-laser-sniper-out.png", "img/inv-laser-sniper-in.png", "img/inv-laser-sniper-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Laser Sniper", "Faster than a sniper", vn.MnM, [[vM.WMW, 8], [vM.vvw, 6], [vM.WnV, 5], [vM.www, 3], [vM.nvv, 3]], 1, [[Mn.MVV, 180000]], 14, vM.MvNvm, 2),
      MnW: 53,
      vvM: vM.NVV,
      stack: 1,
      nw: mW.NWVMn,
      wait: 10
    }, {
      id: vM.MWWww,
      nm: {
        src: ["img/inv-hal-bot-out.png", "img/inv-hal-bot-in.png", "img/inv-hal-bot-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("HAL Bot", "Protect you", vn.WWW, [[vM.vvw, 6], [vM.nvv, 1], [vM.Nnm, 1], [vM.WMW, 1]], 1, [[Mn.WNm, 100000]], 8),
      stack: 5,
      nw: mW.MWWww,
      nWWMn: mW.NMN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/clear-blue-hal-bot.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-hal-bot.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.vVvNw,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nMvvW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/hal-bot0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/hal-bot1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/hal-bot2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/hal-bot3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/hal-bot4.png",
        m: {
          n: 0
        }
      }],
      vvMVW: {
        src: "img/day-hal-bot-builder.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 68,
      VWw: 2400000,
      WW: 400,
      vV: 0,
      vvwWn: 315360000000,
      vMWMw: nnn.MWWww,
      VWmNW: 8000,
      nVMVW: 4,
      nnnVm: 1
    }, {
      id: vM.wVnmM,
      nm: {
        src: ["img/inv-tesla-bot-out.png", "img/inv-tesla-bot-in.png", "img/inv-tesla-bot-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Tesla Bot", "Protect you", vn.WWW, [[vM.WnV, 3], [vM.nvv, 1], [vM.Nnm, 3], [vM.www, 3], [vM.WMW, 3]], 1, [[Mn.MVV, 200000]], 16),
      stack: 5,
      nw: mW.wVnmM,
      nWWMn: mW.NMN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [30, 30, 30, 30],
      height: [30, 30, 30, 30],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [35, 35, 35, 35],
      vNV: [35, 35, 35, 35],
      Nnw: {
        src: "img/clear-blue-tesla-bot.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-tesla-bot.png",
        m: {
          n: 0
        }
      },
      wnm: 0,
      WVW: 0,
      behavior: WmN.vVvNw,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nMvvW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/tesla-bot0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/tesla-bot1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/tesla-bot2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/tesla-bot3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/tesla-bot4.png",
        m: {
          n: 0
        }
      }],
      vvMVW: {
        src: "img/day-lapabot-builder.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 68,
      VWw: 2400000,
      WW: 500,
      vV: 0,
      vvwWn: 315360000000,
      vMWMw: nnn.wVnmM,
      VWmNW: 20000,
      nVMVW: 4,
      nnnVm: 1
    }, {
      id: vM.mMvwv,
      nm: {
        src: ["img/inv-wire0-out.png", "img/inv-wire0-in.png", "img/inv-wire0-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cable", "Create automatic mechanisms", vn.nWV, [[vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.mMvwv,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-wire0.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-wire0.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[1, 1, 0, 0], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-wire0.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvMMm,
      mnM: 40,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.NNVwm,
      nm: {
        src: ["img/inv-wire1-out.png", "img/inv-wire1-in.png", "img/inv-wire1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cable", "Create automatic mechanisms", vn.nWV, [[vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.NNVwm,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-wire1.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-wire1.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-wire1.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvMMm,
      mnM: 40,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.mMMnv,
      nm: {
        src: ["img/inv-wire2-out.png", "img/inv-wire2-in.png", "img/inv-wire2-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cable", "Create automatic mechanisms", vn.nWV, [[vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.mMMnv,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-wire2.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-wire2.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[0, 1, 0, 1], [0, 1, 1, 0], [1, 0, 1, 0], [1, 0, 0, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-wire2.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvMMm,
      mnM: 40,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.wWwmM,
      nm: {
        src: ["img/inv-wire3-out.png", "img/inv-wire3-in.png", "img/inv-wire3-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cable", "Create automatic mechanisms", vn.nWV, [[vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.wWwmM,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-wire3.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-wire3.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[0, 1, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1], [1, 1, 0, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-wire3.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvMMm,
      mnM: 40,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.WMvMV,
      nm: {
        src: ["img/inv-switch-out.png", "img/inv-switch-in.png", "img/inv-switch-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Switch", "Turn on/off mechanisms", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.WMvMV,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-switch.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-switch.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.MWvwN,
      MMw: 37,
      nnv: {
        src: "img/e-turnon.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-switch-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-switch-on.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.WwnMn,
      nm: {
        src: ["img/inv-switch-or-out.png", "img/inv-switch-or-in.png", "img/inv-switch-or-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gate OR", "Activate only if an entry is on.", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.WwnMn,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-switch-or.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-switch-or.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 0, 0, 0], [0, 0, 0, 1], [0, 1, 0, 0], [0, 0, 1, 0]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-switch-or.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.wvnWv,
      nm: {
        src: ["img/inv-switch-and-out.png", "img/inv-switch-and-in.png", "img/inv-switch-and-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gate AND", "Activate only if all entries are on.", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.wvnWv,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-switch-and.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-switch-and.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 0, 0, 0], [0, 0, 0, 1], [0, 1, 0, 0], [0, 0, 1, 0]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-switch-and.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.vMNnn,
      nm: {
        src: ["img/inv-switch-reverse-out.png", "img/inv-switch-reverse-in.png", "img/inv-switch-reverse-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gate NOT", "Activate only if no entry is on.", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.vMNnn,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-switch-reverse.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-switch-reverse.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 1], [1, 1, 1, 0]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-switch-reverse.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.WMMmV,
      nm: {
        src: ["img/inv-lamp-white-out.png", "img/inv-lamp-white-in.png", "img/inv-lamp-white-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Lamp", "Turn on when connected, damage ghoul", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.WMMmV,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-lamp.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-lamp.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
      nvm: 0,
      vVN: 2,
      NnV: 22,
      Nmm: 0,
      Mw: Vw.wNwvm,
      MWnVv: Vw.mwNwW,
      MMw: 36,
      nnv: {
        src: "img/e-light.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-lamp-off.png",
        m: {
          n: 0
        }
      },
      vWMMM: [{
        src: "img/day-lamp-white.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-yellow.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-green.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-clear-blue.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-purple.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-pink.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-orange.png",
        m: {
          n: 0
        }
      }],
      mNvvm: [{
        src: "img/day-lamp-light-white.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-light-yellow.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-light-green.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-light-clear-blue.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-light-purple.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-light-pink.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-lamp-light-orange.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 600,
      vV: 0
    }, {
      id: vM.MMWvM,
      nm: {
        src: ["img/inv-cable-wall-out.png", "img/inv-cable-wall-in.png", "img/inv-cable-wall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cable - Wall", "Wall that can be connected to a cable", vn.nWV, [[vM.vvw, 8], [vM.Nnm, 1]], 1, [[Mn.wNW, 15000]], 7),
      stack: 255,
      nw: mW.MMWvM,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 1,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-cable-wall.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-cable-wall.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[1, 1, 0, 0], [0, 0, 1, 1], [1, 1, 0, 0], [0, 0, 1, 1]],
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.wvvMm,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-cable-wall.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-cable-wall1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-cable-wall2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-cable-wall3.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wWv,
      mnM: 40,
      VWw: 315360000000,
      WW: 15000,
      vV: 0
    }, {
      id: vM.vNVvV,
      nm: {
        src: ["img/inv-automatic-door-out.png", "img/inv-automatic-door-in.png", "img/inv-automatic-door-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Automatic Door", "Connect it to a switch to open and close it.", vn.nWV, [[vM.vvw, 8], [vM.Nnm, 2], [vM.nvv, 1]], 1, [[Mn.wNW, 15000]], 7),
      stack: 255,
      nw: mW.vNVvV,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 1,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-automatic-door.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-automatic-door.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[0, 1, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1], [1, 1, 0, 1]],
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.MnVVw,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [[{
        src: "img/day-automatic-door-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-automatic-door1-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-automatic-door2-off.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-automatic-door3-off.png",
        m: {
          n: 0
        }
      }], [{
        src: "img/day-automatic-door-on.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-automatic-door1-on.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-automatic-door2-on.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-automatic-door3-on.png",
        m: {
          n: 0
        }
      }]],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 15000,
      vV: 0
    }, {
      id: vM.VnnVn,
      nm: {
        src: ["img/inv-platform-out.png", "img/inv-platform-in.png", "img/inv-platform-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Platform", "Weight detector", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.VnnVn,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-platform-off.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-platform-off.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.MnMvN,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-platform-off.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.VVMnm,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.mVVVW,
      nm: {
        src: ["img/inv-stone-cave-out.png", "img/inv-stone-cave-in.png", "img/inv-stone-cave-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Stone Cave", "Build mountains.", -1, [[vM.mmW, 140]], 1, [[Mn.vWv, 30000]], 99),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.mVVVW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-stone-cave.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-stone-cave.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.mVVVW,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.vWV,
      wWnmn: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      Nnv: [{
        src: "img/day-stone-cave-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.nWvwn,
      mmM: Vm.VWm,
      Vv: [{
        src: "img/day-stone-cave0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-stone-cave46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.mmW,
      mnM: 80,
      VWw: 315360000000,
      WW: 300,
      vV: 0
    }, {
      id: vM.VNnvM,
      nm: {
        src: ["img/inv-bunker-wall-out.png", "img/inv-bunker-wall-in.png", "img/inv-bunker-wall-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Bunker Wall", "Good old memory of the wasteland.", -1, [[vM.mmW, 150], [vM.vvw, 12]], 1, [[Mn.vWv, 30000]], 99),
      MnW: 21,
      NVW: -1,
      VvN: 1,
      z: 1,
      stack: 255,
      nw: mW.VNnvM,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-bunker-wall.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-bunker-wall.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.mVVVW,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.vWV,
      wWnmn: [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      Nnv: [{
        src: "img/day-bunker-wall-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-bunker-wall0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-bunker-wall46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.Wvn,
      mnM: 80,
      VWw: 315360000000,
      WW: 10000,
      vV: 0
    }, {
      id: vM.mVmvN,
      nm: {
        src: ["img/inv-mustard-floor-out.png", "img/inv-mustard-floor-in.png", "img/inv-mustard-floor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Golden Floor", "Players can't spawn on it", vn.VMv, [[vM.nVW, 2]], 2, [[Mn.vWv, 15000]]),
      stack: 255,
      nw: mW.mVmvN,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 2,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-floor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-floor.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.mVmvN,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nwnnM,
      Nnv: [{
        src: "img/day-mustard-floor-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.MMM,
      mmM: Vm.wVm,
      Vv: [{
        src: "img/day-mustard-floor-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-mustard-floor-46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.MmWMW,
      mnM: 80,
      VWw: 315360000000,
      WW: 3000,
      vV: 0
    }, {
      id: vM.nmvNm,
      nm: {
        src: ["img/inv-red-floor-out.png", "img/inv-red-floor-in.png", "img/inv-red-floor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Red floor", "Players can't spawn on it", vn.VMv, [[vM.nVW, 2]], 2, [[Mn.vWv, 15000]]),
      stack: 255,
      nw: mW.nmvNm,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: 2,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/day-clear-blue-stone-floor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/day-redprint-stone-floor.png",
        m: {
          n: 0
        }
      },
      vWV: 1,
      mwmVn: vM.nmvNm,
      MwM: 0,
      wnm: 0,
      WnN: 1,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nwnnM,
      Nnv: [{
        src: "img/day-red-floor-broken0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-broken1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-broken2.png",
        m: {
          n: 0
        }
      }],
      Vvm: Vm.MMM,
      mmM: Vm.wVm,
      Vv: [{
        src: "img/day-red-floor-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-3.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-4.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-5.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-6.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-7.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-8.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-9.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-10.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-11.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-12.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-13.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-14.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-15.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-16.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-17.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-18.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-19.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-20.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-21.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-22.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-23.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-24.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-25.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-26.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-27.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-28.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-29.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-30.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-31.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-32.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-33.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-34.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-35.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-36.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-37.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-38.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-39.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-40.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-41.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-42.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-43.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-44.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-45.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-red-floor-46.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wwnNm,
      mnM: 80,
      VWw: 315360000000,
      WW: 3000,
      vV: 0
    }, {
      id: vM.wNW,
      nm: {
        src: ["img/inv-welding-machine-out.png", "img/inv-welding-machine-in.png", "img/inv-welding-machine-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Welding Machine", "Allow you to make logic gates", vn.WWW, [[vM.mwv, 2], [vM.vvw, 4], [vM.nvv, 1]], 1, [[Mn.vWv, 50000]]),
      MnW: 21,
      NVW: -1,
      VvN: 0,
      z: 1,
      vVW: Mn.wNW,
      stack: 255,
      nw: mW.wNW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-welding-machine.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-welding-machine.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 1,
      Nmm: 0,
      Mw: Vw.WwmNM,
      MMw: 16,
      nnv: {
        src: "img/e-welding-machine.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-welding-machine.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 500,
      vV: 0
    }, {
      id: vM.NmwnW,
      nm: {
        src: ["img/inv-wire4-out.png", "img/inv-wire4-in.png", "img/inv-wire4-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Cable - Bridge", "Create automatic mechanisms", vn.nWV, [[vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.NmwnW,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-wire4.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-wire4.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 0,
      Mnn: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-wire4.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wvMMm,
      mnM: 40,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.MvVVm,
      nm: {
        src: ["img/inv-timer-out.png", "img/inv-timer-in.png", "img/inv-timer-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gate Timer", "Emit a signal regularly.", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.MvVVm,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-timer.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-timer.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.nNNWw,
      MMw: 38,
      nnv: {
        src: "img/e-light.png",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-timer-0.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-timer-1.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-timer-2.png",
        m: {
          n: 0
        }
      }, {
        src: "img/day-timer-3.png",
        m: {
          n: 0
        }
      }],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.WnMmv,
      nm: {
        src: ["img/inv-xor-out.png", "img/inv-xor-in.png", "img/inv-xor-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Gate Xor", "Activate only if only one entry is on.", vn.nWV, [[vM.vvw, 1], [vM.Nnm, 1]], 3, [[Mn.wNW, 15000]]),
      stack: 255,
      nw: mW.WnMmv,
      wait: 10,
      MnW: 21,
      NVW: -1,
      VvN: -1,
      z: 0,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-xor.png",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-xor.png",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.nWV,
      vMv: 1,
      Mnn: [[1, 0, 0, 0], [0, 0, 0, 1], [0, 1, 0, 0], [0, 0, 1, 0]],
      nvm: 0,
      vVN: 0,
      Nmm: 0,
      Mw: Vw.wMmNW,
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: {
        src: "img/day-xor.png",
        m: {
          n: 0
        }
      },
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }, {
      id: vM.MnvmN,
      nm: {
        src: ["img/skill-builder1-out.png", "img/skill-builder1-in.png", "img/skill-builder1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Builder 1", "Multiplies some craft by two", vn.NmVMV, undefined, undefined, undefined, 6, undefined, 2)
    }, {
      id: vM.wwMwV,
      nm: {
        src: ["img/skill-builder2-out.png", "img/skill-builder2-in.png", "img/skill-builder2-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Builder 2", "Repair much faster", vn.NmVMV, undefined, undefined, undefined, 18, vM.MnvmN)
    }, {
      id: vM.vNnvV,
      nm: {
        src: ["img/skill-inv1-out.png", "img/skill-inv1-in.png", "img/skill-inv1-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Inventory 1", "Add a slot in your inventory", vn.NmVMV, undefined, undefined, undefined, 0),
      MmNwm: 1
    }, {
      id: vM.mNvnw,
      nm: {
        src: ["img/skill-inv2-out.png", "img/skill-inv2-in.png", "img/skill-inv2-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Inventory 2", "Add a slot in your inventory", vn.NmVMV, undefined, undefined, undefined, 5, vM.vNnvV),
      MmNwm: 1
    }, {
      id: vM.NVMMn,
      nm: {
        src: ["img/skill-inv3-out.png", "img/skill-inv3-in.png", "img/skill-inv3-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Inventory 3", "Add a slot in your bag", vn.NmVMV, undefined, undefined, undefined, 7, vM.mNvnw),
      MmNwm: 1
    }, {
      id: vM.NNVww,
      nm: {
        src: ["img/skill-inv4-out.png", "img/skill-inv4-in.png", "img/skill-inv4-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Inventory 4", "Add two slots in your bag", vn.NmVMV, undefined, undefined, undefined, 10, vM.NVMMn, 2),
      MmNwm: 2
    }, {
      id: vM.nVwNV,
      nm: {
        src: ["img/skill-inv5-out.png", "img/skill-inv5-in.png", "img/skill-inv5-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Inventory 5", "Add three slots in your bag", vn.NmVMV, undefined, undefined, undefined, 12, vM.NNVww, 3),
      MmNwm: 3
    }, {
      id: vM.mnWvm,
      nm: {
        src: ["img/skill-lightweight-out.png", "img/skill-lightweight-in.png", "img/skill-lightweight-click.png"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Light Weight", "Less likely to trigger traps.", vn.NmVMV, undefined, undefined, undefined, 8)
    }, {
      id: vM.nNW,
      nm: {
        src: ["img/inv-feeder-out.png?2", "img/inv-feeder-in.png?2", "img/inv-feeder-click.png?2"],
        m: [{
          n: 0
        }, {
          n: 0
        }, {
          n: 0
        }]
      },
      detail: new NW("Feeder", "Allows you to feed automatically", vn.WWW, [[vM.WMW, 4], [vM.vvw, 20], [vM.WnV, 8], [vM.Nnm, 4], [vM.nvv, 2]], 1, [[Mn.MVV, 100000]], 12),
      MnW: 21,
      NVW: 180000,
      VvN: 0,
      z: 1,
      vVW: Mn.nNW,
      stack: 255,
      nw: mW.nNW,
      wait: 10,
      mVw: 1000,
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      mWN: [0, 0, 0, 0],
      wVW: [0, 0, 0, 0],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Nnw: {
        src: "img/clear-blue-feeder.png?2",
        m: {
          n: 0
        }
      },
      MNW: {
        src: "img/redprint-feeder.png?2",
        m: {
          n: 0
        }
      },
      vWV: 0,
      MwM: 0,
      wnm: 0,
      WnN: 0,
      WVW: 0,
      behavior: WmN.Wmm,
      Mnn: 0,
      nvm: 0,
      vVN: 0,
      Nmm: NMNwv,
      Mw: Vw.WwnNv,
      MMw: 16,
      nnv: {
        src: "img/e-feeder.png?2",
        m: {
          n: 0
        }
      },
      Vvm: Vm.wNw,
      mmM: Vm.vNW,
      Vv: [{
        src: "img/day-feeder.png?2",
        m: {
          n: 0
        }
      }, {
        src: "img/day-feeder-rotate.png?2",
        m: {
          n: 0
        }
      }, {
        src: "img/day-feeder-off.png?2",
        m: {
          n: 0
        }
      }],
      NWvmn: [[0, 0], [0, 0], [0, 0], [0, 0]],
      NNW: Nw.wWv,
      mnM: 80,
      VWw: 315360000000,
      WW: 250,
      vV: 0
    }];
    vm = 0;
    var wv = {
      VWV: vm++,
      MnVwW: vm++,
      mwvvV: vm++,
      vMmww: vm++,
      mmNMv: vm++,
      VwnvN: vm++,
      WVvNM: vm++,
      nwVmv: vm++,
      vvNnN: vm++,
      mWmMV: vm++,
      wVWWv: vm++,
      WWwNW: vm++,
      Vwv: vm++,
      vWVWM: vm++,
      nVM: vm++,
      WNwnm: vm++,
      wmNvM: vm++,
      WNVmn: vm++,
      nwwMN: vm++,
      VmMvN: vm++,
      mNvnn: vm++,
      vVv: vm++,
      vnMvm: vm++,
      nnMwW: vm++,
      nmN: vm++,
      vnV: vm++,
      MmvmV: vm++,
      Vnvnw: vm++,
      wvvVN: vm++,
      WNVwN: vm++,
      NwmVM: vm++,
      vWVNV: vm++,
      vNVvm: vm++,
      VWMnm: vm++,
      wmMvN: vm++,
      nnM: vm++,
      NMnnn: vm++,
      WmVNN: vm++,
      MvnNN: vm++,
      nnwnm: vm++,
      VWmVm: vm++,
      vwwwm: vm++,
      MWnMw: vm++,
      MNVNw: vm++,
      VMMVm: vm++,
      NMMvw: vm++,
      nVmwn: vm++,
      vwMmw: vm++,
      WvvMn: vm++,
      WvNnv: vm++,
      NWwww: vm++,
      VVmwm: vm++,
      NnnWM: vm++,
      WmVvN: vm++,
      NVmvv: vm++,
      nMnVw: vm++,
      NWMVm: vm++,
      Mvvwm: vm++,
      MvwmN: vm++
    };
    vm = 0;
    var VWnvw = wWw[vM.mmmwm].nvm;
    VWnvw[vm] = {
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      Vv: {
        src: "img/day-road0.png",
        m: {
          n: 0
        }
      },
      detail: new NW("", "", -1, [[vM.mmW, 100]]),
      WW: 100000000,
      vV: 0,
      NNW: Nw.NnnVV,
      mnM: 70,
      angle: Math[VM[99]],
      wNVWw: 0,
      VvVnN: 0,
      nw: null,
      vVN: 0,
      z: 0,
      VvN: 2,
      Nmm: 0,
      VWw: 315360000000
    };
    for (var Wv = 0; Wv < 45; Wv++) {
      vm++;
      VWnvw[vm] = JSON[VM[71]](JSON[VM[18]](VWnvw[0]));
      VWnvw[vm].Vv[VM[58]] = "img/day-road" + vm + ".png";
    }
    var Nm = wWw[vM.VnMNM].nvm;
    Nm[wv.VWV] = {
      width: [100, 100, 100, 100],
      height: [100, 100, 100, 100],
      Vnm: [0, 0, 0, 0],
      vNV: [0, 0, 0, 0],
      Vvm: Vm.NnM,
      mmM: Vm.wVm,
      Vv: {
        src: "img/day-sofa0.png",
        m: {
          n: 0
        }
      },
      detail: new NW("", "", -1, [[vM.wvw, 99], [vM.nVW, 9], [vM.mvn, 6]]),
      WW: 450,
      vV: 0,
      NNW: Nw.VWV,
      mnM: 70,
      angle: Math[VM[99]],
      wNVWw: 0,
      VvVnN: 0,
      nw: null,
      vVN: 1,
      z: 1,
      VvN: 0,
      Nmm: 0,
      MMw: 25,
      WVW: 0,
      wmw: 0,
      vWM: 0,
      VWw: 315360000000
    };
    Nm[wv.MnVwW] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.MnVwW].Vv[VM[58]] = "img/day-sofa1.png";
    Nm[wv.MnVwW].NNW = Nw.MnVwW;
    Nm[wv.mwvvV] = JSON[VM[71]](JSON[VM[18]](Nm[wv.MnVwW]));
    Nm[wv.mwvvV].Vv[VM[58]] = "img/day-sofa2.png";
    Nm[wv.vMmww] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    var wVWMm = 644;
    Nm[wv.vMmww].Vv[VM[58]] = "img/day-sofa3.png";
    Nm[wv.vMmww].NNW = Nw.mwvvV;
    Nm[wv.mmNMv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.vMmww]));
    Nm[wv.mmNMv].Vv[VM[58]] = "img/day-sofa4.png";
    Nm[wv.MWnMw] = JSON[VM[71]](JSON[VM[18]](Nm[wv.vMmww]));
    Nm[wv.MWnMw].Vv[VM[58]] = "img/day-sofa6.png";
    Nm[wv.vwwwm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.vwwwm].Vv[VM[58]] = "img/day-renforced-door.png";
    Nm[wv.vwwwm].NNW = Nw.Wvn;
    Nm[wv.vwwwm][VM[213]] = new NW("", "", -1, [[vM.vvw, 40]]);
    Nm[wv.vwwwm].WW = 7000;
    Nm[wv.VWMnm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.VWMnm].Vv[VM[58]] = "img/day-electronic-box0.png";
    Nm[wv.VWMnm].Vvm = Vm.wNw;
    Nm[wv.VWMnm].mmM = Vm.vNW;
    Nm[wv.VWMnm].NNW = Nw.Wvn;
    Nm[wv.VWMnm][VM[213]] = new NW("", "", -1, [[vM.NVV, 8], [vM.nvv, 4], [vM.vvw, 4], [vM.mwv, 12]]);
    Nm[wv.VWMnm][VM[255]] = [100, 100, 100, 100];
    Nm[wv.VWMnm][VM[104]] = [100, 100, 100, 100];
    Nm[wv.VWMnm].Vnm = [0, 0, 0, 0];
    Nm[wv.VWMnm].vNV = [0, 0, 0, 0];
    Nm[wv.VWMnm].WW = 800;
    Nm[wv.wmMvN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWMnm]));
    Nm[wv.wmMvN].Vv[VM[58]] = "img/day-electronic-box1.png";
    Nm[wv.wmMvN][VM[255]] = [120, 120, 120, 120];
    Nm[wv.wmMvN][VM[104]] = [120, 120, 120, 120];
    Nm[wv.wmMvN].Vnm = [-10, -10, -10, -10];
    Nm[wv.wmMvN].vNV = [-10, -10, -10, -10];
    Nm[wv.wmMvN][VM[213]] = new NW("", "", -1, [[vM.NVV, 16], [vM.nvv, 16], [vM.www, 8], [vM.vvw, 16]]);
    Nm[wv.wmMvN].WW = 1400;
    Nm[wv.VwnvN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.VwnvN].Vv[VM[58]] = "img/day-bed0.png";
    Nm[wv.VwnvN].NNW = Nw.VwnvN;
    Nm[wv.VwnvN][VM[213]] = new NW("", "", -1, [[vM.wvw, 200], [vM.nVW, 20]]);
    Nm[wv.WVvNM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VwnvN]));
    Nm[wv.WVvNM].Vv[VM[58]] = "img/day-bed1.png";
    Nm[wv.WVvNM].NNW = Nw.WVvNM;
    Nm[wv.WvvMn] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VwnvN]));
    Nm[wv.WvvMn].Vv[VM[58]] = "img/day-bed2.png";
    Nm[wv.WvvMn].NNW = Nw.nvNvm;
    Nm[wv.WvvMn][VM[213]] = new NW("", "", -1, [[vM.vvw, 12], [vM.nVW, 20], [vM.mNw, 12]]);
    Nm[wv.nwVmv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.nwVmv].Vv[VM[58]] = "img/day-table0.png";
    Nm[wv.nwVmv].Vvm = Vm.wvW;
    Nm[wv.nwVmv].mmM = Vm.wMn;
    Nm[wv.nwVmv].NNW = Nw.wvw;
    Nm[wv.nwVmv][VM[213]] = new NW("", "", -1, [[vM.wvw, 200]]);
    Nm[wv.nVmwn] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nwVmv]));
    Nm[wv.nVmwn].Vv[VM[58]] = "img/day-table1.png";
    Nm[wv.nVmwn][VM[255]] = [100, 290, 100, 280];
    Nm[wv.nVmwn][VM[104]] = [280, 100, 280, 100];
    Nm[wv.nVmwn].VMwMM = [-1, 0, -1, 0];
    Nm[wv.nVmwn].WwNmM = [0, -1, 0, -1];
    Nm[wv.nVmwn].Vnm = [0, -90, 0, -90];
    Nm[wv.nVmwn].vNV = [-90, 0, -90, 0];
    Nm[wv.NWMVm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nwVmv]));
    Nm[wv.NWMVm].Vv[VM[58]] = "img/day-table2.png";
    Nm[wv.NWMVm].Vvm = Vm.wNw;
    Nm[wv.NWMVm].mmM = Vm.vNW;
    Nm[wv.NWMVm].NNW = Nw.Wvn;
    Nm[wv.NWMVm][VM[213]] = new NW("", "", -1, [[vM.vvw, 8]]);
    Nm[wv.vvNnN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.vvNnN].Vv[VM[58]] = "img/day-tv0.png";
    Nm[wv.vvNnN].Vvm = Vm.wNw;
    Nm[wv.vvNnN].mmM = Vm.vNW;
    Nm[wv.vvNnN].NNW = Nw.nwwMN;
    Nm[wv.vvNnN][VM[213]] = new NW("", "", -1, [[vM.nvv, 4], [vM.vvw, 16], [vM.Nnm, 4], [vM.mwv, 12]]);
    Nm[wv.mWmMV] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.mWmMV].Vv[VM[58]] = "img/day-computer0.png";
    Nm[wv.mWmMV].Vvm = Vm.wNw;
    Nm[wv.mWmMV].mmM = Vm.vNW;
    Nm[wv.mWmMV].NNW = Nw.wWv;
    Nm[wv.mWmMV][VM[213]] = new NW("", "", -1, [[vM.Nnm, 4], [vM.vvw, 16], [vM.mwv, 12], [vM.nvv, 4]]);
    Nm[wv.wVWWv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.mWmMV]));
    Nm[wv.wVWWv].Vv[VM[58]] = "img/day-chair0.png";
    Nm[wv.wVWWv][VM[213]] = new NW("", "", -1, [[vM.nVW, 8], [vM.vvw, 8]]);
    Nm[wv.NnnWM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.mWmMV]));
    Nm[wv.NnnWM].Vv[VM[58]] = "img/day-chair1.png";
    Nm[wv.NnnWM][VM[213]] = new NW("", "", -1, [[vM.nVW, 8], [vM.vvw, 8]]);
    Nm[wv.WmVvN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.mWmMV]));
    Nm[wv.WmVvN].Vv[VM[58]] = "img/day-chair2.png";
    Nm[wv.WmVvN][VM[213]] = new NW("", "", -1, [[vM.nVW, 8], [vM.vvw, 8]]);
    Nm[wv.WWwNW] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VWV]));
    Nm[wv.WWwNW].Vv[VM[58]] = "img/day-washbasin0.png";
    Nm[wv.WWwNW].Vvm = Vm.wvW;
    Nm[wv.WWwNW].mmM = Vm.wMn;
    Nm[wv.WWwNW].NNW = Nw.VnWmN;
    Nm[wv.WWwNW][VM[213]] = new NW("", "", -1, [[vM.wvw, 150], [vM.vvw, 8]]);
    Nm[wv.wvvVN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.WWwNW]));
    Nm[wv.wvvVN].Vv[VM[58]] = "img/day-pharma0.png";
    Nm[wv.wvvVN][VM[213]] = new NW("", "", -1, [[vM.vvw, 8], [vM.mmW, 60]]);
    Nm[wv.wvvVN].Vvm = Vm.nWvwn;
    Nm[wv.wvvVN].mmM = Vm.VWm;
    Nm[wv.wvvVN].NNW = Nw.MWNwV;
    Nm[wv.wvvVN].wNVWw = 1;
    Nm[wv.wvvVN].nw = [[vM.WVnVm, 1, 0.1], [vM.MmNvW, 1, 0.03], [vM.MmwVm, 1, 0.05], [vM.VVm, 2, 0.2], [vM.nWM, 1, 0.1]];
    Nm[wv.nMnVw] = JSON[VM[71]](JSON[VM[18]](Nm[wv.WWwNW]));
    Nm[wv.nMnVw].Vv[VM[58]] = "img/day-shower0.png";
    Nm[wv.nMnVw][VM[213]] = new NW("", "", -1, [[vM.vvw, 8], [vM.mmW, 60]]);
    Nm[wv.nMnVw].Vvm = Vm.nWvwn;
    Nm[wv.nMnVw].mmM = Vm.VWm;
    Nm[wv.nMnVw].NNW = Nw.MWNwV;
    Nm[wv.nMnVw][VM[255]] = [70, 100, 70, 100];
    Nm[wv.nMnVw][VM[104]] = [100, 70, 100, 70];
    Nm[wv.nMnVw].Vnm = [0, 0, 30, 0];
    Nm[wv.nMnVw].vNV = [0, 0, 0, 30];
    Nm[wv.Vwv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.WWwNW]));
    Nm[wv.Vwv].Vv[VM[58]] = "img/day-furniture0.png";
    Nm[wv.Vwv][VM[255]] = [50, 100, 50, 100];
    Nm[wv.Vwv][VM[104]] = [100, 50, 100, 50];
    Nm[wv.Vwv].Vnm = [0, 0, 50, 0];
    Nm[wv.Vwv].vNV = [0, 0, 0, 50];
    Nm[wv.Vwv][VM[213]] = new NW("", "", -1, [[vM.wvw, 200]]);
    Nm[wv.Vwv].wNVWw = 1;
    Nm[wv.Vwv].nw = [[vM.VwV, 1, 0.004], [vM.wmVWn, 1, 0.004], [vM.VNV, 1, 0.005], [vM.vvm, 30, 0.02], [vM.WVnVm, 1, 0.05], [vM.NMNVW, 1, 0.08], [vM.WVNWM, 40, 0.1], [vM.NMNwW, 2, 0.1], [vM.NMnNN, 1, 0.01], [vM.NVV, 4, 0.05], [vM.mwv, 1, 0.2], [vM.mvn, 2, 0.1]];
    Nm[wv.vWVWM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.vWVWM].Vv[VM[58]] = "img/day-furniture1.png";
    Nm[wv.vWVWM][VM[255]] = [70, 100, 70, 100];
    Nm[wv.vWVWM][VM[104]] = [100, 70, 100, 70];
    Nm[wv.vWVWM].Vnm = [0, 0, 30, 0];
    Nm[wv.vWVWM].vNV = [0, 0, 0, 30];
    Nm[wv.nVM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.nVM].Vv[VM[58]] = "img/day-furniture2.png";
    Nm[wv.nVM][VM[255]] = [70, 70, 70, 70];
    Nm[wv.nVM][VM[104]] = [70, 70, 70, 70];
    Nm[wv.nVM].Vnm = [15, 15, 15, 15];
    Nm[wv.nVM].vNV = [15, 15, 15, 15];
    Nm[wv.nVM][VM[213]] = new NW("", "", -1, [[vM.wvw, 100]]);
    Nm[wv.WNwnm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.WNwnm].Vv[VM[58]] = "img/day-furniture3.png";
    Nm[wv.WvNnv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.vWVWM]));
    Nm[wv.WvNnv].Vv[VM[58]] = "img/day-furniture4.png";
    Nm[wv.WvNnv].Vvm = Vm.wNw;
    Nm[wv.WvNnv].mmM = Vm.vNW;
    Nm[wv.WvNnv].NNW = Nw.nvNvm;
    Nm[wv.WvNnv].nw = [[vM.VwV, 1, 0.004], [vM.wmVWn, 1, 0.004], [vM.VNV, 1, 0.005], [vM.vvm, 30, 0.02], [vM.WVnVm, 1, 0.05], [vM.Nnm, 4, 0.1], [vM.WMMmV, 1, 0.08], [vM.VnnVn, 1, 0.08], [vM.NMnNN, 1, 0.01], [vM.NVV, 8, 0.05], [vM.mwv, 2, 0.2], [vM.mvn, 2, 0.1]];
    Nm[wv.NWwww] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.NWwww].Vv[VM[58]] = "img/day-furniture5.png";
    Nm[wv.NWwww].Vvm = Vm.wNw;
    Nm[wv.NWwww].mmM = Vm.vNW;
    Nm[wv.NWwww].NNW = Nw.nvNvm;
    Nm[wv.NWwww].nw = JSON[VM[71]](JSON[VM[18]](Nm[wv.WvNnv].nw));
    Nm[wv.VVmwm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.NWwww]));
    Nm[wv.VVmwm].Vv[VM[58]] = "img/day-furniture6.png";
    Nm[wv.wmNvM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.wmNvM].Vvm = Vm.NnM;
    Nm[wv.wmNvM].mmM = Vm.wVm;
    Nm[wv.wmNvM].Vv[VM[58]] = "img/day-carton-box0.png";
    Nm[wv.wmNvM][VM[213]] = new NW("", "", -1, []);
    Nm[wv.wmNvM].wNVWw = 1;
    Nm[wv.wmNvM].nw = [[vM.VnvWn, 1, 0.1], [vM.mwv, 2, 0.2], [vM.VwV, 1, 0.003], [vM.wmVWn, 1, 0.003], [vM.nVvwW, 1, 0.01], [vM.VNV, 1, 0.005], [vM.vvm, 30, 0.02], [vM.WVnVm, 1, 0.08], [vM.NMNVW, 1, 0.1], [vM.WVNWM, 40, 0.02], [vM.NMNwW, 2, 0.1], [vM.NVV, 4, 0.08], [vM.nvv, 1, 0.1]];
    Nm[wv.WNVmn] = JSON[VM[71]](JSON[VM[18]](Nm[wv.wmNvM]));
    Nm[wv.WNVmn].Vv[VM[58]] = "img/day-carton-box1.png";
    Nm[wv.MNVNw] = JSON[VM[71]](JSON[VM[18]](Nm[wv.wmNvM]));
    Nm[wv.MNVNw].Vv[VM[58]] = "img/day-gold-chair0.png";
    Nm[wv.MNVNw][VM[213]] = new NW("", "", -1, [[vM.wvw, 40]]);
    Nm[wv.MNVNw].wNVWw = 0;
    Nm[wv.MNVNw].NNW = Nw.MmWMW;
    Nm[wv.VMMVm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.MNVNw]));
    Nm[wv.VMMVm].Vv[VM[58]] = "img/day-green-chair0.png";
    Nm[wv.VMMVm].NNW = Nw.NNMNv;
    Nm[wv.NMMvw] = JSON[VM[71]](JSON[VM[18]](Nm[wv.MNVNw]));
    Nm[wv.NMMvw].Vv[VM[58]] = "img/day-wood-chair0.png";
    Nm[wv.NMMvw].Vvm = Vm.wvW;
    Nm[wv.NMMvw].mmM = Vm.wMn;
    Nm[wv.NMMvw].NNW = Nw.VnWmN;
    Nm[wv.nnMwW] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.nnMwW].Vv[VM[58]] = "img/day-plot0.png";
    Nm[wv.nnMwW].NNW = Nw.NwMmV;
    Nm[wv.nnMwW].vVN = 2;
    Nm[wv.nnMwW].NnV = 30;
    var mvwMw = Wm[VM[137]];
    mvwMw[VM[172]] = mvwMw[VM[156]] = mvwMw[VM[164]] = mvwMw[VM[148]] = mvwMw[VM[124]] = mvwMw.nMmWNmN = mvwMw[VM[6]] = mvwMw[VM[250]] = mvwMw[VM[11]] = function () {};
    Nm[wv.nnMwW][VM[213]] = new NW("", "", -1, [[vM.mmW, 40], [vM.wvw, 40]]);
    Nm[wv.nnMwW].wNVWw = 0;
    Nm[wv.Mvvwm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nnMwW]));
    Nm[wv.Mvvwm].Vvm = Vm.wNw;
    Nm[wv.Mvvwm].mmM = Vm.vNW;
    Nm[wv.Mvvwm].Vv[VM[58]] = "img/day-blood-transfusion.png";
    Nm[wv.Mvvwm].NNW = Nw.nvNvm;
    Nm[wv.Mvvwm][VM[213]] = new NW("", "", -1, [[vM.mwv, 2], [vM.vvw, 1], [vM.nWM, 1]]);
    Nm[wv.nmN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.nmN].Vv[VM[58]] = "img/day-barel0.png";
    Nm[wv.nmN].Vvm = Vm.wNw;
    Nm[wv.nmN].mmM = Vm.MMM;
    Nm[wv.nmN].NNW = Nw.wvMMm;
    Nm[wv.nmN].WVW = 1;
    Nm[wv.nmN].wmw = 250;
    Nm[wv.nmN].vWM = 5000;
    Nm[wv.nmN].vVN = 2;
    Nm[wv.nmN].NnV = 30;
    Nm[wv.nmN][VM[213]] = new NW("", "", -1, [[vM.vvw, 8]]);
    Nm[wv.nmN].wNVWw = 1;
    Nm[wv.nmN].WW = 100;
    Nm[wv.nmN].nw = [[vM.MMwNn, 1, 0.2]];
    Nm[wv.vnV] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.vnV].Vv[VM[58]] = "img/day-barel1.png";
    Nm[wv.vnV].Vvm = Vm.wNw;
    Nm[wv.vnV].mmM = Vm.MMM;
    Nm[wv.vnV].NNW = Nw.nVnMn;
    Nm[wv.vnV].WVW = 1;
    Nm[wv.vnV].wmw = 300;
    Nm[wv.vnV].vWM = 10000;
    Nm[wv.vnV].vVN = 2;
    Nm[wv.vnV].NnV = 30;
    Nm[wv.vnV].WW = 300;
    Nm[wv.vnV][VM[213]] = new NW("", "", -1, [[vM.vnm, 8], [vM.vvw, 8]]);
    Nm[wv.vnV].wNVWw = 0;
    Nm[wv.vnV].Nmm = vVNnn;
    Nm[wv.MmvmV] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.MmvmV].Vv[VM[58]] = "img/day-garbage-bag0.png";
    Nm[wv.MmvmV].Vvm = Vm.NnM;
    Nm[wv.MmvmV].mmM = Vm.wVm;
    Nm[wv.MmvmV].NNW = Nw.MmvmV;
    Nm[wv.MmvmV].vVN = 2;
    Nm[wv.MmvmV].NnV = 30;
    Nm[wv.MmvmV][VM[213]] = new NW("", "", -1, []);
    Nm[wv.MmvmV].nw = [[vM.VnvWn, 1, 0.08], [vM.nWM, 1, 0.05], [vM.wmVWn, 1, 0.02], [vM.VNV, 1, 0.01], [vM.vvm, 30, 0.02], [vM.WVNWM, 40, 0.1], [vM.NMNwW, 2, 0.1], [vM.NMNVW, 1, 0.1], [vM.nNNwW, 1, 0.15], [vM.MWNmV, 1, 0.15], [vM.wNVnv, 1, 0.15], [vM.mwv, 3, 0.4]];
    Nm[wv.VmMvN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.VmMvN].Vv[VM[58]] = "img/day-fridge0.png";
    Nm[wv.VmMvN].Vvm = Vm.wNw;
    Nm[wv.VmMvN].mmM = Vm.vNW;
    Nm[wv.VmMvN].NNW = Nw.wWv;
    Nm[wv.VmMvN][VM[213]] = new NW("", "", -1, [[vM.vvw, 16], [vM.wvm, 16]]);
    Nm[wv.VmMvN].VvVnN = 1;
    Nm[wv.VmMvN].nw = [[vM.mvmMn, 1, 0.1], [vM.mMNWW, 1, 0.1], [vM.MWMnW, 1, 0.01], [vM.nNNwW, 1, 0.15], [vM.MWNmV, 1, 0.15], [vM.wNVnv, 1, 0.15], [vM.nnmmN, 1, 0.01]];
    Nm[wv.mNvnn] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VmMvN]));
    Nm[wv.mNvnn].Vv[VM[58]] = "img/day-fridge1.png";
    Nm[wv.mNvnn].NNW = Nw.VVMnm;
    Nm[wv.nnwnm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.nnwnm].Vv[VM[58]] = "img/day-vending-machine0.png";
    Nm[wv.nnwnm].Vvm = Vm.wNw;
    Nm[wv.nnwnm].mmM = Vm.vNW;
    Nm[wv.nnwnm].NNW = Nw.NVvnn;
    Nm[wv.nnwnm][VM[213]] = new NW("", "", -1, [[vM.vvw, 16], [vM.wvm, 16]]);
    Nm[wv.nnwnm].VvVnN = 1;
    Nm[wv.nnwnm].nw = [[vM.mvmMn, 1, 0.04], [vM.MWMnW, 1, 0.04]];
    Nm[wv.NVmvv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nnwnm]));
    Nm[wv.NVmvv].Vv[VM[58]] = "img/day-distributor0.png";
    Nm[wv.NVmvv].NNW = Nw.nvNvm;
    Nm[wv.NVmvv][VM[213]] = new NW("", "", -1, [[vM.vvw, 16], [vM.wvm, 16]]);
    Nm[wv.NVmvv].VvVnN = 1;
    Nm[wv.NVmvv].nw = [[vM.mvmMn, 1, 0.04], [vM.MWMnW, 1, 0.04], [vM.mMNWW, 1, 0.04]];
    Nm[wv.VWmVm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.vWVWM]));
    Nm[wv.VWmVm].Vv[VM[58]] = "img/day-cash-machine0.png";
    Nm[wv.VWmVm].Vvm = Vm.wNw;
    Nm[wv.VWmVm].mmM = Vm.vNW;
    Nm[wv.VWmVm].NNW = Nw.nvNvm;
    Nm[wv.VWmVm][VM[213]] = new NW("", "", -1, [[vM.vvw, 16], [vM.nvv, 4]]);
    Nm[wv.VWmVm].nw = [[vM.mwv, 1, 0.05]];
    Nm[wv.Vnvnw] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.Vnvnw].Vv[VM[58]] = "img/day-cupboard0.png";
    Nm[wv.Vnvnw].NNW = Nw.wvw;
    Nm[wv.nnM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.nnM].Vvm = Vm.wNw;
    Nm[wv.nnM].mmM = Vm.vNW;
    Nm[wv.nnM].Vv[VM[58]] = "img/day-electronic-box2.png";
    Nm[wv.nnM].NNW = Nw.Wvn;
    Nm[wv.nnM][VM[213]] = new NW("", "", -1, [[vM.vvw, 16]]);
    Nm[wv.nnM][VM[255]] = [70, 70, 70, 70];
    Nm[wv.nnM][VM[104]] = [70, 70, 70, 70];
    Nm[wv.nnM].Vnm = [15, 15, 15, 15];
    Nm[wv.nnM].vNV = [15, 15, 15, 15];
    Nm[wv.nnM].nw = [[vM.nvv, 2, 0.1], [vM.mwv, 2, 0.1], [vM.NVV, 20, 0.05], [vM.nWM, 2, 0.1], [vM.VVm, 4, 0.1], [vM.MmwVm, 1, 0.03], [vM.WMW, 1, 0.01]];
    Nm[wv.NMnnn] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nnM]));
    Nm[wv.NMnnn].Vv[VM[58]] = "img/day-electronic-box3.png";
    Nm[wv.NMnnn][VM[213]] = new NW("", "", -1, [[vM.vvw, 16], [vM.nvv, 4]]);
    Nm[wv.NMnnn].nw = [[vM.nvv, 2, 0.1], [vM.mwv, 4, 0.1], [vM.NVV, 20, 0.05], [vM.www, 1, 0.03], [vM.WnV, 5, 0.01], [vM.MmwVm, 2, 0.1], [vM.nWM, 3, 0.1], [vM.VVm, 5, 0.1], [vM.MvNvm, 1, 0.005], [vM.WMW, 2, 0.05]];
    Nm[wv.MvwmN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.NMnnn]));
    Nm[wv.MvwmN].Vv[VM[58]] = "img/day-energy-box0.png";
    Nm[wv.MvwmN].NNW = Nw.NNMNv;
    Nm[wv.MvwmN][VM[213]] = new NW("", "", -1, [[vM.vvw, 16], [vM.nvv, 4]]);
    Nm[wv.MvwmN].nw = [[vM.nvv, 2, 0.1], [vM.mwv, 4, 0.1], [vM.NVV, 20, 0.05], [vM.Nnm, 8, 0.03], [vM.WnV, 5, 0.01], [vM.MmwVm, 2, 0.1], [vM.nWM, 3, 0.1], [vM.VVm, 5, 0.1], [vM.MvNvm, 1, 0.005], [vM.WMW, 2, 0.05]];
    Nm[wv.WmVNN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nnM]));
    Nm[wv.WmVNN].Vv[VM[58]] = "img/day-electronic-box4.png";
    Nm[wv.WmVNN].nw = [[vM.nvv, 2, 0.1], [vM.mwv, 4, 0.1], [vM.NVV, 20, 0.05], [vM.www, 1, 0.03], [vM.WnV, 2, 0.01], [vM.MmwVm, 1, 0.1], [vM.nWM, 3, 0.1], [vM.VVm, 5, 0.1], [vM.WMW, 1, 0.01], [vM.nMVMv, 1, 0.008]];
    if (Wm.wVWMm) {
      var wmMmm = Wm.Math[VM[234]];
      Wm.Math[VM[234]] = Wm.Math[VM[245]];
      Wm.Math[VM[245]] = wmMmm;
    }
    ;
    Nm[wv.MvnNN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nnM]));
    Nm[wv.MvnNN].Vv[VM[58]] = "img/day-electronic-box5.png";
    Nm[wv.WNVwN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.WNVwN].Vv[VM[58]] = "img/day-ammo-box.png";
    Nm[wv.WNVwN].NNW = Nw.VnWmN;
    Nm[wv.WNVwN].nw = [[vM.vmMWm, 1, 0.001], [vM.nvmnn, 1, 0.001], [vM.Nmnmv, 1, 0.001], [vM.mvnmn, 1, 0.001], [vM.VWMwv, 1, 0.001], [vM.mwnvN, 1, 0.001], [vM.wnNnv, 50, 0.01], [vM.NVV, 20, 0.01], [vM.MvNvm, 1, 0.0008], [vM.nMVMv, 2, 0.005], [vM.vNwvM, 1, 0.001], [vM.Nwnwm, 1, 0.001], [vM.MwmNN, 3, 0.005], [vM.wvVnm, 30, 0.01], [vM.VNV, 1, 0.003], [vM.vvm, 50, 0.01], [vM.mWwWW, 1, 0.003], [vM.NMvVw, 50, 0.01], [vM.mvw, 1, 0.005], [vM.MVNvN, 1, 0.005], [vM.nMWWm, 1, 0.002], [vM.wVmWV, 1, 0.001], [vM.mVWmN, 1, 0.005], [vM.wWVNv, 1, 0.002], [vM.MmwWv, 1, 0.001], [vM.WVWnv, 1, 0.002], [vM.vvWNM, 1, 0.001], [vM.mWmWW, 1, 0.0005], [vM.VWMWm, 1, 0.0005]];
    Nm[wv.vWVNV] = JSON[VM[71]](JSON[VM[18]](Nm[wv.WNVwN]));
    Nm[wv.vWVNV].Vvm = Vm.wNw;
    Nm[wv.vWVNV].mmM = Vm.vNW;
    Nm[wv.vWVNV].Vv[VM[58]] = "img/day-ammo-locker1.png";
    Nm[wv.vWVNV].NNW = Nw.nvNvm;
    Nm[wv.vWVNV][VM[213]] = new NW("", "", -1, [[vM.vvw, 32], [vM.wvm, 12]]);
    Nm[wv.vNVvm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.WNVwN]));
    Nm[wv.vNVvm].Vvm = Vm.wNw;
    Nm[wv.vNVvm].mmM = Vm.vNW;
    Nm[wv.vNVvm].Vv[VM[58]] = "img/day-ammo-locker2.png";
    Nm[wv.vNVvm].NNW = Nw.nvNvm;
    Nm[wv.vNVvm][VM[213]] = new NW("", "", -1, [[vM.vvw, 32], [vM.wvm, 12]]);
    Nm[wv.NwmVM] = JSON[VM[71]](JSON[VM[18]](Nm[wv.WNVwN]));
    Nm[wv.NwmVM].Vvm = Vm.wNw;
    Nm[wv.NwmVM].mmM = Vm.vNW;
    Nm[wv.NwmVM].Vv[VM[58]] = "img/day-ammo-locker0.png";
    Nm[wv.NwmVM].NNW = Nw.mnVWW;
    Nm[wv.NwmVM][VM[255]] = [70, 50, 70, 50];
    Nm[wv.NwmVM][VM[104]] = [50, 70, 50, 70];
    Nm[wv.NwmVM].Vnm = [0, 25, 30, 25];
    Nm[wv.NwmVM].vNV = [25, 0, 25, 30];
    Nm[wv.NwmVM][VM[213]] = new NW("", "", -1, [[vM.vvw, 32], [vM.wvm, 12]]);
    Nm[wv.nwwMN] = JSON[VM[71]](JSON[VM[18]](Nm[wv.Vwv]));
    Nm[wv.nwwMN].Vvm = Vm.wNw;
    Nm[wv.nwwMN].mmM = Vm.vNW;
    Nm[wv.nwwMN].Vv[VM[58]] = "img/day-safe0.png";
    Nm[wv.nwwMN].NNW = Nw.nwwMN;
    Nm[wv.nwwMN][VM[213]] = new NW("", "", -1, [[vM.vvw, 32], [vM.wvm, 32]]);
    Nm[wv.nwwMN].nw = [[vM.WNN, 1, 0.008], [vM.VWNnv, 1, 0.002], [vM.NMMnV, 1, 0.002], [vM.VNWnn, 1, 0.02], [vM.mvnmn, 1, 0.002], [vM.vmMWm, 1, 0.002], [vM.nvmnn, 1, 0.002], [vM.Nmnmv, 1, 0.002], [vM.VWMwv, 1, 0.002], [vM.mwnvN, 1, 0.002], [vM.wnNnv, 50, 0.02], [vM.wvVnm, 30, 0.02], [vM.nMVMv, 1, 0.01], [vM.MwmNN, 1, 0.01], [vM.VNV, 1, 0.04], [vM.vvm, 40, 0.06], [vM.mWwWW, 1, 0.05], [vM.NMvVw, 50, 0.05]];
    Nm[wv.vnMvm] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VmMvN]));
    Nm[wv.vnMvm].Vv[VM[58]] = "img/day-little-table0.png";
    Nm[wv.vnMvm][VM[255]] = [50, 50, 50, 50];
    Nm[wv.vnMvm][VM[104]] = [50, 50, 50, 50];
    Nm[wv.vnMvm].Vnm = [25, 25, 25, 25];
    Nm[wv.vnMvm].vNV = [25, 25, 25, 25];
    Nm[wv.vnMvm][VM[213]] = new NW("", "", -1, [[vM.vvw, 8]]);
    Nm[wv.vnMvm].wNVWw = 0;
    Nm[wv.vwMmw] = JSON[VM[71]](JSON[VM[18]](Nm[wv.nVM]));
    Nm[wv.vwMmw].Vv[VM[58]] = "img/day-small-light-off.png";
    Nm[wv.vwMmw].NNW = Nw.nvNvm;
    Nm[wv.vVv] = JSON[VM[71]](JSON[VM[18]](Nm[wv.VmMvN]));
    Nm[wv.vVv].Vvm = Vm.nWvwn;
    Nm[wv.vVv].mmM = Vm.VWm;
    Nm[wv.vVv].NNW = Nw.MWNwV;
    Nm[wv.vVv].Vv[VM[58]] = "img/day-toilet0.png";
    Nm[wv.vVv][VM[255]] = [50, 70, 50, 70];
    Nm[wv.vVv][VM[104]] = [70, 50, 70, 50];
    Nm[wv.vVv].Vnm = [25, 30, 25, 0];
    Nm[wv.vVv].vNV = [0, 25, 30, 25];
    Nm[wv.vVv].NNW = Nw.MWNwV;
    Nm[wv.vVv][VM[213]] = new NW("", "", -1, [[vM.vvw, 4], [vM.mmW, 100]]);
    Nm[wv.vVv].wNVWw = 1;
    Nm[wv.vVv].nw = [[vM.nWM, 1, 0.2], [vM.VVm, 1, 0.02], [vM.Wmwmn, 1, 0.005], [vM.mWmWW, 1, 0.002]];
    var mnn = [{
      id: mW.MMvvV,
      m: {
        n: 0
      },
      src: "img/day-ground-wood0.png",
      MM: vM.wvw,
      WM: 1,
      scale: 0.85,
      angle: 0
    }, {
      id: mW.vwVvv,
      m: {
        n: 0
      },
      src: "img/day-ground-wood1.png",
      MM: vM.wvw,
      WM: 2,
      scale: 0.85,
      angle: 0
    }, {
      id: mW.nnVvw,
      m: {
        n: 0
      },
      src: "img/day-ground-wood2.png",
      MM: vM.wvw,
      WM: 3,
      scale: 0.85,
      angle: 0
    }, {
      id: mW.wnWNV,
      m: {
        n: 0
      },
      src: "img/day-ground-stone0.png",
      MM: vM.mmW,
      WM: 1,
      scale: 1.2,
      angle: 0
    }, {
      id: mW.NmMmm,
      m: {
        n: 0
      },
      src: "img/day-ground-stone1.png",
      MM: vM.mmW,
      WM: 2,
      scale: 1.2,
      angle: 0
    }, {
      id: mW.wwNVn,
      m: {
        n: 0
      },
      src: "img/day-ground-stone2.png",
      MM: vM.mmW,
      WM: 3,
      scale: 1.2,
      angle: 0
    }, {
      id: mW.Wvn,
      m: {
        n: 0
      },
      src: "img/day-ground-steel.png",
      MM: vM.Wvn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mNw,
      m: {
        n: 0
      },
      src: "img/day-ground-animal-fat.png",
      MM: vM.mNw,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.MVVMM,
      m: {
        n: 0
      },
      src: "img/day-ground-animal-tendon.png",
      MM: vM.MVVMM,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.mvn,
      m: {
        n: 0
      },
      src: "img/day-ground-string.png",
      MM: vM.mvn,
      WM: 1,
      scale: 0.7,
      angle: 0
    }, {
      id: mW.nVW,
      m: {
        n: 0
      },
      src: "img/day-ground-leather-boar.png",
      MM: vM.nVW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.vvw,
      m: {
        n: 0
      },
      src: "img/day-ground-shaped-metal.png",
      MM: vM.vvw,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.Wwv,
      m: {
        n: 0
      },
      src: "img/day-ground-raw-steak.png",
      MM: vM.Wwv,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.vNMNW,
      m: {
        n: 0
      },
      src: "img/day-ground-cooked-steak.png",
      MM: vM.vNMNW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.wNVnv,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-steak.png",
      MM: vM.wNVnv,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.wnV,
      m: {
        n: 0
      },
      src: "img/day-ground-orange.png",
      MM: vM.wnV,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.MWNmV,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-orange.png",
      MM: vM.MWNmV,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.NMNwW,
      m: {
        n: 0
      },
      src: "img/day-ground-seed-orange.png",
      MM: vM.NMNwW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.Vnn,
      m: {
        n: 0
      },
      src: "img/day-ground-hachet.png",
      MM: vM.Vnn,
      WM: 1,
      scale: 0.9,
      angle: 0.5
    }, {
      id: mW.wwn,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-pickaxe.png",
      MM: vM.wwn,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.vwV,
      m: {
        n: 0
      },
      src: "img/day-ground-steel-pickaxe.png",
      MM: vM.vwV,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.mvw,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-axe.png",
      MM: vM.mvw,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.vWv,
      m: {
        n: 0
      },
      src: "img/day-ground-workbench.png",
      MM: vM.vWv,
      WM: 1,
      scale: 0.7,
      angle: 0
    }, {
      id: mW.WmnWw,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-spear.png",
      MM: vM.WmnWw,
      WM: 1,
      scale: 0.6,
      angle: 0.6
    }, {
      id: mW.nNMWW,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-bow.png",
      MM: vM.nNMWW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VNV,
      m: {
        n: 0
      },
      src: "img/day-ground-9mm.png",
      MM: vM.VNV,
      WM: 1,
      scale: 1,
      angle: -0.1
    }, {
      id: mW.VWMwv,
      m: {
        n: 0
      },
      src: "img/day-ground-desert-eagle.png",
      MM: vM.VWMwv,
      WM: 1,
      scale: 1,
      angle: -0.1
    }, {
      id: mW.Nmnmv,
      m: {
        n: 0
      },
      src: "img/day-ground-shotgun.png",
      MM: vM.Nmnmv,
      WM: 1,
      scale: 0.7,
      angle: -0.5
    }, {
      id: mW.nvmnn,
      m: {
        n: 0
      },
      src: "img/day-ground-ak47.png",
      MM: vM.nvmnn,
      WM: 1,
      scale: 0.7,
      angle: -0.5
    }, {
      id: mW.mwnvN,
      m: {
        n: 0
      },
      src: "img/day-ground-sniper.png",
      MM: vM.mwnvN,
      WM: 1,
      scale: 0.7,
      angle: -0.5
    }, {
      id: mW.vwW,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-wall.png",
      MM: vM.vwW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.VVw,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-wall.png",
      MM: vM.VVw,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.Mnm,
      m: {
        n: 0
      },
      src: "img/day-ground-steel-wall.png",
      MM: vM.Mnm,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nWvMM,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-door.png",
      MM: vM.nWvMM,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.VNn,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-door.png",
      MM: vM.VNn,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nnwWn,
      m: {
        n: 0
      },
      src: "img/day-ground-steel-door.png",
      MM: vM.nnwWn,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.vNWMW,
      m: {
        n: 0
      },
      src: "img/day-ground-campfire.png",
      MM: vM.vNWMW,
      WM: 1,
      scale: 0.7,
      angle: 0
    }, {
      id: mW.vvm,
      m: {
        n: 0
      },
      src: "img/day-ground-bullet-9mm.png",
      MM: vM.vvm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.wvVnm,
      m: {
        n: 0
      },
      src: "img/day-ground-bullet-shotgun.png",
      MM: vM.wvVnm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.wnNnv,
      m: {
        n: 0
      },
      src: "img/day-ground-bullet-sniper.png",
      MM: vM.wnNnv,
      WM: 1,
      scale: 1.1,
      angle: 0
    }, {
      id: mW.MmNvW,
      m: {
        n: 0
      },
      src: "img/day-ground-medikit.png",
      MM: vM.MmNvW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.WVnVm,
      m: {
        n: 0
      },
      src: "img/day-ground-bandage.png",
      MM: vM.WVnVm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.mvmMn,
      m: {
        n: 0
      },
      src: "img/day-ground-soda.png",
      MM: vM.mvmMn,
      WM: 1,
      scale: 1.2,
      angle: 0
    }, {
      id: mW.vmMWm,
      m: {
        n: 0
      },
      src: "img/day-ground-MP5.png",
      MM: vM.vmMWm,
      WM: 1,
      scale: 0.8,
      angle: -0.5
    }, {
      id: mW.VwV,
      m: {
        n: 0
      },
      src: "img/day-ground-headscarf.png",
      MM: vM.VwV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WNN,
      m: {
        n: 0
      },
      src: "img/day-ground-chapka.png",
      MM: vM.WNN,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VWNnv,
      m: {
        n: 0
      },
      src: "img/day-ground-coat.png",
      MM: vM.VWNnv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wmVWn,
      m: {
        n: 0
      },
      src: "img/day-ground-gaz-mask.png",
      MM: vM.wmVWn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VNWnn,
      m: {
        n: 0
      },
      src: "img/day-ground-gaz-protection.png",
      MM: vM.VNWnn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NMMnV,
      m: {
        n: 0
      },
      src: "img/day-ground-radiation-suit.png",
      MM: vM.NMMnV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NMNVM,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-arrow.png",
      MM: vM.NMNVM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WNV,
      m: {
        n: 0
      },
      src: "img/day-ground-campfire-bbq.png",
      MM: vM.WNV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vMM,
      m: {
        n: 0
      },
      src: "img/day-ground-smelter.png",
      MM: vM.vMM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MmMmn,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-door1.png",
      MM: vM.MmMmn,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.mnnvN,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-door1.png",
      MM: vM.mnnvN,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.vmWVv,
      m: {
        n: 0
      },
      src: "img/day-ground-steel-door1.png",
      MM: vM.vmWVv,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.wvm,
      m: {
        n: 0
      },
      src: "img/day-ground-sulfur.png",
      MM: vM.wvm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.WnV,
      m: {
        n: 0
      },
      src: "img/day-ground-shaped-uranium.png",
      MM: vM.WnV,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.WNm,
      m: {
        n: 0
      },
      src: "img/day-ground-workbench2.png",
      MM: vM.WNm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.vnm,
      m: {
        n: 0
      },
      src: "img/day-ground-uranium.png",
      MM: vM.vnm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.mmn,
      m: {
        n: 0
      },
      src: "img/day-ground-weaving-machine.png",
      MM: vM.mmn,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.MMwNn,
      m: {
        n: 0
      },
      src: "img/day-ground-gasoline.png",
      MM: vM.MMwNn,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.Mmm,
      m: {
        n: 0
      },
      src: "img/day-ground-sulfur-pickaxe.png",
      MM: vM.Mmm,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.WvW,
      m: {
        n: 0
      },
      src: "img/day-ground-chest.png",
      MM: vM.WvW,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.VVMnm,
      m: {
        n: 0
      },
      src: "img/day-ground-fridge.png",
      MM: vM.VVMnm,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.nNwMM,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-floor.png",
      MM: vM.nNwMM,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.mWMVn,
      m: {
        n: 0
      },
      src: "img/day-ground-hammer.png",
      MM: vM.mWMVn,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.NMnNN,
      m: {
        n: 0
      },
      src: "img/day-ground-sleeping-bag.png",
      MM: vM.NMnNN,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.WVvwN,
      m: {
        n: 0
      },
      src: "img/day-ground-repair-hammer.png",
      MM: vM.WVvwN,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.WVNWM,
      m: {
        n: 0
      },
      src: "img/day-ground-nails.png",
      MM: vM.WVNWM,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.vWmnN,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-floor-light.png",
      MM: vM.vWmnN,
      WM: 1,
      scale: 0.7,
      angle: 0.3
    }, {
      id: mW.vWVnW,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-smallwall.png",
      MM: vM.vWVnW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nmVvv,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-smallwall.png",
      MM: vM.nmVvv,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.wnmvV,
      m: {
        n: 0
      },
      src: "img/day-ground-steel-smallwall.png",
      MM: vM.wnmvV,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.mMNWW,
      m: {
        n: 0
      },
      src: "img/day-ground-tomato-soup.png",
      MM: vM.mMNWW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nWM,
      m: {
        n: 0
      },
      src: "img/day-ground-syringe.png",
      MM: vM.nWM,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.VVm,
      m: {
        n: 0
      },
      src: "img/day-ground-chemical-component.png",
      MM: vM.VVm,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.MmwVm,
      m: {
        n: 0
      },
      src: "img/day-ground-radaway.png",
      MM: vM.MmwVm,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.NMNVW,
      m: {
        n: 0
      },
      src: "img/day-ground-seed-tomato.png",
      MM: vM.NMNVW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.NMN,
      m: {
        n: 0
      },
      src: "img/day-ground-tomato.png",
      MM: vM.NMN,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nNNwW,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-tomato.png",
      MM: vM.nNNwW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.VnvWn,
      m: {
        n: 0
      },
      src: "img/day-ground-can.png",
      MM: vM.VnvWn,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.mWwWW,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-crossbow.png",
      MM: vM.mWwWW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NMvVw,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-crossarrow.png",
      MM: vM.NMvVw,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nVvwW,
      m: {
        n: 0
      },
      src: "img/day-ground-nail-gun.png",
      MM: vM.nVvwW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mvnmn,
      m: {
        n: 0
      },
      src: "img/day-ground-sawed-off-shotgun.png",
      MM: vM.mvnmn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vnvWm,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-floor.png",
      MM: vM.vnvWm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VNnVn,
      m: {
        n: 0
      },
      src: "img/day-ground-tiling-floor.png",
      MM: vM.VNnVn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MWMnW,
      m: {
        n: 0
      },
      src: "img/day-ground-chips.png",
      MM: vM.MWMnW,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nnmmN,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-chips.png",
      MM: vM.nnmmN,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.nvv,
      m: {
        n: 0
      },
      src: "img/day-ground-electronic-part.png",
      MM: vM.nvv,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.mwv,
      m: {
        n: 0
      },
      src: "img/day-ground-junk.png",
      MM: vM.mwv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.www,
      m: {
        n: 0
      },
      src: "img/day-ground-wires.png",
      MM: vM.www,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.NVV,
      m: {
        n: 0
      },
      src: "img/day-ground-small-energy-cells.png",
      MM: vM.NVV,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.MvNvm,
      m: {
        n: 0
      },
      src: "img/day-ground-laser-pistol.png",
      MM: vM.MvNvm,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.MVV,
      m: {
        n: 0
      },
      src: "img/day-ground-workbench3.png",
      MM: vM.MVV,
      WM: 1,
      scale: 0.9,
      angle: 0
    }, {
      id: mW.WMW,
      m: {
        n: 0
      },
      src: "img/day-ground-alloys.png",
      MM: vM.WMW,
      WM: 1,
      scale: 1,
      angle: 0
    }, {
      id: mW.Mvv,
      m: {
        n: 0
      },
      src: "img/day-ground-sulfur-axe.png",
      MM: vM.Mvv,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.MwmNN,
      m: {
        n: 0
      },
      src: "img/day-ground-landmine.png",
      MM: vM.MwmNN,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.nMVMv,
      m: {
        n: 0
      },
      src: "img/day-ground-dynamite.png",
      MM: vM.nMVMv,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.vNwvM,
      m: {
        n: 0
      },
      src: "img/day-ground-C4.png",
      MM: vM.vNwvM,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.Nwnwm,
      m: {
        n: 0
      },
      src: "img/day-ground-joystick.png",
      MM: vM.Nwnwm,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.VmW,
      m: {
        n: 0
      },
      src: "img/day-ground-composter.png",
      MM: vM.VmW,
      WM: 1,
      scale: 0.7,
      angle: 0.5
    }, {
      id: mW.MVNvN,
      m: {
        n: 0
      },
      src: "img/day-ground-metal-helmet.png",
      MM: vM.MVNvN,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nMWWm,
      m: {
        n: 0
      },
      src: "img/day-ground-welding-helmet.png",
      MM: vM.nMWWm,
      WM: 1,
      scale: 0.7,
      angle: 0
    }, {
      id: mW.wVmWV,
      m: {
        n: 0
      },
      src: "img/day-ground-gladiator-helmet.png",
      MM: vM.wVmWV,
      WM: 1,
      scale: 0.7,
      angle: 0
    }, {
      id: mW.mVWmN,
      m: {
        n: 0
      },
      src: "img/day-ground-leather-jacket.png",
      MM: vM.mVWmN,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wWVNv,
      m: {
        n: 0
      },
      src: "img/day-ground-kevlar-suit.png",
      MM: vM.wWVNv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MmwWv,
      m: {
        n: 0
      },
      src: "img/day-ground-SWAT-suit.png",
      MM: vM.MmwWv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NnWNv,
      m: {
        n: 0
      },
      src: "img/day-ground-protective-suit.png",
      MM: vM.NnWNv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WVWnv,
      m: {
        n: 0
      },
      src: "img/day-ground-tesla-0.png",
      MM: vM.WVWnv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vvWNM,
      m: {
        n: 0
      },
      src: "img/day-ground-tesla-armor.png",
      MM: vM.vvWNM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wVvNv,
      m: {
        n: 0
      },
      src: "img/day-ground-wood-spike.png",
      MM: vM.wVvNv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VWMWm,
      m: {
        n: 0
      },
      src: "img/day-ground-laser-submachine.png",
      MM: vM.VWMWm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.Mnvnn,
      m: {
        n: 0
      },
      src: "img/day-ground-grenade.png",
      MM: vM.Mnvnn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wNVvm,
      m: {
        n: 0
      },
      src: "img/day-ground-super-hammer.png",
      MM: vM.wNVvm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.Wmwmn,
      m: {
        n: 0
      },
      src: "img/day-ground-ghoul-blood.png",
      MM: vM.Wmwmn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NmVwV,
      m: {
        n: 0
      },
      src: "img/day-ground-camouflage-gear.png",
      MM: vM.NmVwV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MNw,
      m: {
        n: 0
      },
      src: "img/day-ground-agitator.png",
      MM: vM.MNw,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mMVVV,
      m: {
        n: 0
      },
      src: "img/day-ground-ghoul-drug.png",
      MM: vM.mMVVV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wwnNm,
      m: {
        n: 0
      },
      src: "img/day-ground-mushroom1.png",
      MM: vM.wwnNm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NnvwN,
      m: {
        n: 0
      },
      src: "img/day-ground-mushroom2.png",
      MM: vM.NnvwN,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MVVMV,
      m: {
        n: 0
      },
      src: "img/day-ground-mushroom3.png",
      MM: vM.MVVMV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wmnWV,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-mushroom1.png",
      MM: vM.wmnWV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.Wmnww,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-mushroom2.png",
      MM: vM.Wmnww,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wWVWn,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-mushroom3.png",
      MM: vM.wWVWn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mWmWW,
      m: {
        n: 0
      },
      src: "img/day-ground-lapadoine.png",
      MM: vM.mWmWW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nmWVV,
      m: {
        n: 0
      },
      src: "img/day-ground-lapabot.png",
      MM: vM.nmWVV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.Nnm,
      m: {
        n: 0
      },
      src: "img/day-ground-small-wire.png",
      MM: vM.Nnm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VNWmm,
      m: {
        n: 0
      },
      src: "img/day-ground-pumpkin.png",
      MM: vM.VNWmm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mvWWN,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-pumpkin.png",
      MM: vM.mvWWN,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wVmmn,
      m: {
        n: 0
      },
      src: "img/day-ground-ghoul5.png",
      MM: vM.wVmmn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vMW,
      m: {
        n: 0
      },
      src: "img/day-ground-extractor.png",
      MM: vM.vMW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nMvmv,
      m: {
        n: 0
      },
      src: "img/day-ground-antidote.png",
      MM: vM.nMvmv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wnMwV,
      m: {
        n: 0
      },
      src: "img/day-ground-antidote-flower.png",
      MM: vM.wnMwV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vmMwv,
      m: {
        n: 0
      },
      src: "img/day-ground-seed-tree.png",
      MM: vM.vmMwv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nWvVw,
      m: {
        n: 0
      },
      src: "img/day-ground-acorn.png",
      MM: vM.nWvVw,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vVwwn,
      m: {
        n: 0
      },
      src: "img/day-ground-rotten-acorn.png",
      MM: vM.vVwwn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NWVMn,
      m: {
        n: 0
      },
      src: "img/day-ground-laser-sniper.png",
      MM: vM.NWVMn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MWWww,
      m: {
        n: 0
      },
      src: "img/day-ground-hal-bot.png",
      MM: vM.MWWww,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wVnmM,
      m: {
        n: 0
      },
      src: "img/day-ground-tesla-bot.png",
      MM: vM.wVnmM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mMvwv,
      m: {
        n: 0
      },
      src: "img/day-ground-wire0.png",
      MM: vM.mMvwv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NNVwm,
      m: {
        n: 0
      },
      src: "img/day-ground-wire1.png",
      MM: vM.NNVwm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mMMnv,
      m: {
        n: 0
      },
      src: "img/day-ground-wire2.png",
      MM: vM.mMMnv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wWwmM,
      m: {
        n: 0
      },
      src: "img/day-ground-wire3.png",
      MM: vM.wWwmM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WMvMV,
      m: {
        n: 0
      },
      src: "img/day-ground-switch.png",
      MM: vM.WMvMV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WwnMn,
      m: {
        n: 0
      },
      src: "img/day-ground-switch-or.png",
      MM: vM.WwnMn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wvnWv,
      m: {
        n: 0
      },
      src: "img/day-ground-switch-and.png",
      MM: vM.wvnWv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vMNnn,
      m: {
        n: 0
      },
      src: "img/day-ground-switch-reverse.png",
      MM: vM.vMNnn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WMMmV,
      m: {
        n: 0
      },
      src: "img/day-ground-lamp-white.png",
      MM: vM.WMMmV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MMWvM,
      m: {
        n: 0
      },
      src: "img/day-ground-cable-wall.png",
      MM: vM.MMWvM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.vNVvV,
      m: {
        n: 0
      },
      src: "img/day-ground-automatic-door.png",
      MM: vM.vNVvV,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VnnVn,
      m: {
        n: 0
      },
      src: "img/day-ground-platform.png",
      MM: vM.VnnVn,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mVVVW,
      m: {
        n: 0
      },
      src: "img/day-ground-stone-cave.png",
      MM: vM.mVVVW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.VNnvM,
      m: {
        n: 0
      },
      src: "img/day-ground-bunker-wall.png",
      MM: vM.VNnvM,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.mVmvN,
      m: {
        n: 0
      },
      src: "img/day-ground-mustard-floor.png",
      MM: vM.mVmvN,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nmvNm,
      m: {
        n: 0
      },
      src: "img/day-ground-red-floor.png",
      MM: vM.nmvNm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.wNW,
      m: {
        n: 0
      },
      src: "img/day-ground-welding-machine.png",
      MM: vM.wNW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.NmwnW,
      m: {
        n: 0
      },
      src: "img/day-ground-wire4.png",
      MM: vM.NmwnW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.MvVVm,
      m: {
        n: 0
      },
      src: "img/day-ground-timer.png",
      MM: vM.MvVVm,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.WnMmv,
      m: {
        n: 0
      },
      src: "img/day-ground-xor.png",
      MM: vM.WnMmv,
      WM: 1,
      scale: 0.8,
      angle: 0
    }, {
      id: mW.nNW,
      m: {
        n: 0
      },
      src: "img/day-ground-feeder.png",
      MM: vM.nNW,
      WM: 1,
      scale: 0.8,
      angle: 0
    }];
    var vm = 0;
    var mnW = {
      nVNMm: vm++,
      mVnVn: vm++,
      nWwmV: vm++,
      MwVmV: vm++,
      nVWnV: vm++,
      vMn: vm++,
      Nvvnw: vm++,
      nvNvM: vm++,
      VmmNW: vm++,
      nwnvN: vm++,
      VVwMM: vm++,
      nmvmV: vm++,
      wNMVV: vm++,
      MmNmV: vm++
    };
    var mWm = [];
    var wnVVW = 8;
    var mMM = 9;
    var nmnnw = 10;
    var Nwwmw = 11;
    mWm[mnW.nVNMm] = {
      nw: [mW.nnVvw, mW.vwVvv, mW.MMvvV],
      WNv: [0.2, 0.4, 1],
      NNN: [-1, vM.Vnn, vM.mvw, vM.Mvv],
      MNV: [1, 2, 4, 5],
      Nmm: 0,
      type: [{
        WW: 200,
        m: {
          m: {
            n: 0
          },
          src: "img/day-wood1.png"
        },
        mnM: 100,
        MNv: 5,
        wVN: 0,
        WMN: 80,
        vVN: 1,
        z: wnVVW,
        NnV: 80
      }, {
        WW: 150,
        m: {
          m: {
            n: 0
          },
          src: "img/day-wood0.png"
        },
        mnM: 75,
        MNv: 5,
        wVN: 0,
        WMN: 80,
        vVN: 1,
        z: wnVVW,
        NnV: 55
      }, {
        WW: 120,
        m: {
          m: {
            n: 0
          },
          src: "img/day-wood2.png"
        },
        mnM: 70,
        MNv: 5,
        wVN: 0,
        WMN: 80,
        vVN: 1,
        z: wnVVW,
        NnV: 48
      }, {
        WW: 100,
        m: {
          m: {
            n: 0
          },
          src: "img/day-wood3.png"
        },
        mnM: 60,
        MNv: 5,
        wVN: 0,
        WMN: 80,
        vVN: 1,
        z: wnVVW,
        NnV: 37
      }, {
        WW: 75,
        m: {
          m: {
            n: 0
          },
          src: "img/day-wood4.png"
        },
        mnM: 50,
        MNv: 5,
        wVN: 0,
        WMN: 80,
        vVN: 1,
        z: wnVVW,
        NnV: 30
      }],
      NNW: Nw.wvw,
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      vV: 5
    };
    mWm[mnW.vMn] = {
      nw: [mW.nWvVw, mW.nnVvw, mW.vwVvv, mW.MMvvV],
      WNv: [0.015, 0.2, 0.4, 1],
      NNN: [-1, vM.Vnn, vM.mvw, vM.Mvv],
      MNV: [1, 2, 4, 5],
      Nmm: 0,
      type: [{
        WW: 250,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tree0.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-treeleaf0.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tree-and-leaf0.png"
        },
        mnM: 145,
        MNv: 5,
        wVN: 0,
        WMN: 800,
        vVN: 1,
        z: Nwwmw,
        NnV: 70
      }, {
        WW: 250,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tree1.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-treeleaf1.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tree-and-leaf1.png"
        },
        mnM: 128,
        MNv: 5,
        wVN: 0,
        WMN: 800,
        vVN: 1,
        z: Nwwmw,
        NnV: 52
      }, {
        WW: 150,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tree2.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-treeleaf2.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tree-and-leaf2.png"
        },
        mnM: 114,
        MNv: 5,
        wVN: 0,
        WMN: 800,
        vVN: 1,
        z: Nwwmw,
        NnV: 42
      }, {
        WW: 75,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tree3.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-treeleaf3.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tree-and-leaf3.png"
        },
        mnM: 90,
        MNv: 5,
        wVN: 0,
        WMN: 800,
        vVN: 1,
        z: Nwwmw,
        NnV: 34
      }, {
        WW: 250,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tree4.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-treeleaf4.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tree-and-leaf4.png"
        },
        mnM: 147,
        MNv: 5,
        wVN: 0,
        WMN: 800,
        vVN: 1,
        z: Nwwmw,
        NnV: 54
      }],
      NNW: Nw.MMWWN,
      Vvm: Vm.wvW,
      mmM: Vm.wMn,
      vV: 5
    };
    mWm[mnW.mVnVn] = {
      nw: [mW.wwNVn, mW.NmMmm, mW.wnWNV],
      WNv: [0.1, 0.3, 1],
      NNN: [vM.Vnn, vM.wwn, vM.vwV, vM.Mmm],
      MNV: [1, 3, 4, 5],
      Nmm: 0,
      type: [{
        WW: 1000,
        m: {
          m: {
            n: 0
          },
          src: "img/day-stone0.png"
        },
        mnM: 80,
        MNv: 5,
        wVN: 0,
        WMN: 115,
        vVN: 1,
        z: nmnnw,
        NnV: 60
      }, {
        WW: 800,
        m: {
          m: {
            n: 0
          },
          src: "img/day-stone2.png"
        },
        mnM: 80,
        MNv: 5,
        wVN: 0,
        WMN: 115,
        vVN: 1,
        z: nmnnw,
        NnV: 58
      }, {
        WW: 600,
        m: {
          m: {
            n: 0
          },
          src: "img/day-stone1.png"
        },
        mnM: 74,
        MNv: 5,
        wVN: 0,
        WMN: 115,
        vVN: 1,
        z: nmnnw,
        NnV: 54
      }, {
        WW: 400,
        m: {
          m: {
            n: 0
          },
          src: "img/day-stone3.png"
        },
        mnM: 65,
        MNv: 5,
        wVN: 0,
        WMN: 115,
        vVN: 1,
        z: mMM,
        NnV: 45
      }, {
        WW: 200,
        m: {
          m: {
            n: 0
          },
          src: "img/day-stone4.png"
        },
        mnM: 63,
        MNv: 5,
        wVN: 0,
        WMN: 115,
        vVN: 1,
        z: mMM,
        NnV: 43
      }, {
        WW: 150,
        m: {
          m: {
            n: 0
          },
          src: "img/day-stone5.png"
        },
        mnM: 61,
        MNv: 5,
        wVN: 0,
        WMN: 115,
        vVN: 1,
        z: mMM,
        NnV: 41
      }],
      NNW: Nw.mmW,
      Vvm: Vm.NnvNv,
      mmM: Vm.VWm,
      vV: 15
    };
    mWm[mnW.nWwmV] = {
      nw: [mW.Wvn, mW.wwNVn, mW.NmMmm, mW.wnWNV],
      WNv: [0.4, 0.45, 0.6, 1],
      NNN: [vM.wwn, vM.vwV, vM.Mmm],
      MNV: [1, 2, 3],
      Nmm: 0,
      type: [{
        WW: 1200,
        m: {
          m: {
            n: 0
          },
          src: "img/day-steel0.png"
        },
        mnM: 81,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: nmnnw,
        NnV: 61
      }, {
        WW: 1000,
        m: {
          m: {
            n: 0
          },
          src: "img/day-steel1.png"
        },
        mnM: 81,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: nmnnw,
        NnV: 61
      }, {
        WW: 300,
        m: {
          m: {
            n: 0
          },
          src: "img/day-steel2.png"
        },
        mnM: 62,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: mMM,
        NnV: 42
      }, {
        WW: 500,
        m: {
          m: {
            n: 0
          },
          src: "img/day-steel3.png"
        },
        mnM: 70,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: nmnnw,
        NnV: 50
      }],
      NNW: Nw.Wvn,
      Vvm: Vm.NnvNv,
      mmM: Vm.VWm,
      vV: 40
    };
    mWm[mnW.nVWnV] = {
      nw: [mW.wvm, mW.wwNVn, mW.NmMmm, mW.wnWNV],
      WNv: [0.4, 0.45, 0.6, 1],
      NNN: [vM.vwV, vM.Mmm],
      MNV: [1, 2],
      Nmm: 0,
      type: [{
        WW: 1000,
        m: {
          m: {
            n: 0
          },
          src: "img/day-sulfur0.png"
        },
        mnM: 62,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: nmnnw,
        NnV: 42
      }, {
        WW: 400,
        m: {
          m: {
            n: 0
          },
          src: "img/day-sulfur1.png"
        },
        mnM: 70,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: mMM,
        NnV: 50
      }, {
        WW: 400,
        m: {
          m: {
            n: 0
          },
          src: "img/day-sulfur2.png"
        },
        mnM: 58,
        MNv: 5,
        wVN: 0,
        WMN: 22,
        vVN: 1,
        z: mMM,
        NnV: 38
      }],
      NNW: Nw.wvm,
      Vvm: Vm.NnvNv,
      mmM: Vm.VWm,
      vV: 70
    };
    mWm[mnW.MwVmV] = {
      nw: [mW.vnm, mW.wwNVn, mW.NmMmm, mW.wnWNV],
      WNv: [0.3, 0.45, 0.6, 1],
      NNN: [vM.Mmm],
      MNV: [1],
      Nmm: vVNnn,
      type: [{
        WW: 6000,
        m: {
          m: {
            n: 0
          },
          src: "img/day-uranium0.png"
        },
        mnM: 104,
        MNv: 5,
        wVN: 0,
        WMN: 5,
        vVN: 1,
        z: nmnnw,
        NnV: 75
      }, {
        WW: 4000,
        m: {
          m: {
            n: 0
          },
          src: "img/day-uranium1.png"
        },
        mnM: 75,
        MNv: 5,
        wVN: 0,
        WMN: 5,
        vVN: 1,
        z: nmnnw,
        NnV: 55
      }, {
        WW: 2000,
        m: {
          m: {
            n: 0
          },
          src: "img/day-uranium2.png"
        },
        mnM: 62,
        MNv: 5,
        wVN: 0,
        WMN: 5,
        vVN: 1,
        z: mMM,
        NnV: 42
      }],
      NNW: Nw.vnm,
      Vvm: Vm.NnvNv,
      mmM: Vm.VWm,
      vV: 140
    };
    mWm[mnW.Nvvnw] = {
      nw: [mW.NMNwW, mW.wnV],
      WNv: [0.05, 1],
      NNN: [-1],
      MNV: [1],
      Nmm: 0,
      type: [{
        WW: 80,
        m: {
          m: {
            n: 0
          },
          src: "img/day-orange-tree-leaf0.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-orange0.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-orange-tree0.png"
        },
        mnM: 68,
        MNv: 5,
        wVN: 0,
        WMN: 20,
        vVN: 1,
        z: mMM,
        NnV: 38
      }, {
        WW: 100,
        m: {
          m: {
            n: 0
          },
          src: "img/day-orange-tree-leaf1.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-orange1.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-orange-tree1.png"
        },
        mnM: 70,
        MNv: 5,
        wVN: 0,
        WMN: 20,
        vVN: 1,
        z: mMM,
        NnV: 37
      }, {
        WW: 120,
        m: {
          m: {
            n: 0
          },
          src: "img/day-orange-tree-leaf2.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-orange2.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-orange-tree2.png"
        },
        mnM: 78,
        MNv: 5,
        wVN: 0,
        WMN: 20,
        vVN: 1,
        z: mMM,
        NnV: 45
      }],
      NNW: Nw.wnV,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 50
    };
    mWm[mnW.nvNvM] = {
      nw: [mW.NMNVW, mW.NMN],
      WNv: [0.05, 1],
      NNN: [-1],
      MNV: [1],
      Nmm: 0,
      type: [{
        WW: 80,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tomato-tree-leaf0.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-tomato0.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tomato-tree0.png"
        },
        mnM: 68,
        MNv: 5,
        wVN: 0,
        WMN: 16,
        vVN: 1,
        z: mMM,
        NnV: 38
      }, {
        WW: 100,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tomato-tree-leaf1.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-tomato1.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tomato-tree1.png"
        },
        mnM: 70,
        MNv: 5,
        wVN: 0,
        WMN: 16,
        vVN: 1,
        z: mMM,
        NnV: 37
      }, {
        WW: 120,
        m: {
          m: {
            n: 0
          },
          src: "img/day-tomato-tree-leaf2.png"
        },
        vnw: {
          m: {
            n: 0
          },
          src: "img/day-tomato2.png"
        },
        MWnnv: {
          m: {
            n: 0
          },
          src: "img/day-tomato-tree2.png"
        },
        mnM: 78,
        MNv: 5,
        wVN: 0,
        WMN: 16,
        vVN: 1,
        z: mMM,
        NnV: 45
      }],
      NNW: Nw.NMN,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 50
    };
    mWm[mnW.VmmNW] = {
      nw: [mW.Wwv, mW.mNw, mW.nVW],
      WNv: [0.25, 0.85, 1],
      NNN: [vM.Vnn, vM.mvw, vM.Mvv],
      MNV: [1, 3, 4],
      Nmm: 0,
      type: [{
        WW: 250,
        m: {
          m: {
            n: 0
          },
          src: "img/day-boar-dead.png"
        },
        mnM: 70,
        MNv: 5,
        wVN: 0,
        WMN: 18,
        vVN: 1,
        z: mMM,
        NnV: 47
      }],
      NNW: Nw.mMMvv,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 40
    };
    mWm[mnW.nwnvN] = {
      nw: [mW.Wwv, mW.MVVMM, mW.nVW, mW.mNw],
      WNv: [0.28, 0.7, 0.85, 1],
      NNN: [vM.Vnn, vM.mvw, vM.Mvv],
      MNV: [1, 3, 4],
      Nmm: 0,
      type: [{
        WW: 200,
        m: {
          m: {
            n: 0
          },
          src: "img/day-deer-dead.png"
        },
        mnM: 73,
        MNv: 5,
        wVN: 0,
        WMN: 18,
        vVN: 1,
        z: mMM,
        NnV: 53
      }],
      NNW: Nw.mMMvv,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 40
    };
    mWm[mnW.VVwMM] = {
      nw: [mW.wwnNm],
      WNv: [1],
      NNN: [-1],
      MNV: [1],
      Nmm: 0,
      type: [{
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom1.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 2,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom2.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 2,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom3.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 2,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom4.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 2,
        vVN: 0,
        z: mMM,
        NnV: 32
      }],
      NNW: Nw.wwnNm,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 40
    };
    mWm[mnW.MmNmV] = {
      nw: [mW.wnMwV],
      WNv: [1],
      NNN: [-1],
      MNV: [1],
      Nmm: 0,
      type: [{
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-antidote-tree.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 1,
        vVN: 0,
        z: mMM,
        NnV: 32
      }],
      NNW: Nw.nNmnV,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 1000
    };
    mWm[mnW.nmvmV] = {
      nw: [mW.NnvwN],
      WNv: [1],
      NNN: [-1],
      MNV: [1],
      Nmm: 0,
      type: [{
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom5.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom6.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom7.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom8.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }],
      NNW: Nw.NnvwN,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 40
    };
    mWm[mnW.wNMVV] = {
      nw: [mW.MVVMV],
      WNv: [1],
      NNN: [-1],
      MNV: [1],
      Nmm: 0,
      type: [{
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom9.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom10.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom11.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }, {
        WW: 1,
        m: {
          m: {
            n: 0
          },
          src: "img/day-mushroom12.png"
        },
        mnM: 18,
        MNv: 2,
        wVN: 0,
        WMN: 6,
        vVN: 0,
        z: mMM,
        NnV: 32
      }],
      NNW: Nw.MVVMV,
      Vvm: Vm.MMM,
      mmM: Vm.MMM,
      vV: 40
    };
    var nNMWw = [-26, 25, -7, 0];
    var vNVVv = [-28, -15, 25, 0];
    var WnnNn = [{
      src: "img/day-campfire-light-1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-campfire-light-2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-campfire-light-3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/day-campfire-light-down.png",
      m: {
        n: 0
      }
    }];
    var nwWvn = [{
      src: "img/karma4.png",
      m: {
        n: 0
      }
    }, {
      src: "img/karma3.png",
      m: {
        n: 0
      }
    }, {
      src: "img/karma2.png",
      m: {
        n: 0
      }
    }, {
      src: "img/karma1.png",
      m: {
        n: 0
      }
    }, {
      src: "img/karma0.png",
      m: {
        n: 0
      }
    }, {
      src: "img/karma5.png",
      m: {
        n: 0
      }
    }];
    var vm = 0;
    var mWM = {
      VwWWv: vm++,
      Vmwnm: vm++,
      MMvnn: vm++,
      NMMWM: vm++,
      WVmnW: vm++,
      wWNMm: vm++,
      NWVVw: vm++,
      mnWVv: vm++,
      vvvWN: vm++,
      WnNNW: vm++,
      NMWmV: vm++,
      wnnwn: vm++
    };
    var Nvw = [];
    var MvmnwnW = {};
    try {
      if (mww !== undefined) {
        Vn = {
          v: 0,
          b: 0,
          V: -1,
          r: 0
        };
        wV = {
          v: vM.nNwMM,
          b: 0,
          V: -1,
          r: 0
        };
        nn = {
          v: vM.vWmnN,
          b: 0,
          V: -1,
          r: 0
        };
        Vmv = {
          v: vM.vnvWm,
          b: 0,
          V: -1,
          r: 0
        };
        nMv = {
          v: vM.VNnVn,
          b: 0,
          V: -1,
          r: 0
        };
        wnVNVmW = {
          v: vM.mVmvN,
          b: 0,
          V: -1,
          r: 0
        };
        vNnvnWm = {
          v: vM.nmvNm,
          b: 0,
          V: -1,
          r: 0
        };
        vNNNV = {
          v: 0,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        nvV = {
          v: vM.nNwMM,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        wWM = {
          v: vM.vWmnN,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        NVwnwnM = {
          v: vM.vnvWm,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        wnnwWmN = {
          v: vM.VNnVn,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        WmVNNMV = {
          v: vM.mVmvN,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        VVNWvWM = {
          v: vM.nmvNm,
          b: vM.vwW,
          V: -1,
          r: 0
        };
        NmN = {
          v: 0,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        mN = {
          v: vM.nNwMM,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        MmV = {
          v: vM.vWmnN,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        mVnMnmw = {
          v: vM.vnvWm,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        wnvmV = {
          v: vM.VNnVn,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        wVwMvnn = {
          v: vM.mVmvN,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        nmMwmNM = {
          v: vM.nmvNm,
          b: vM.VVw,
          V: -1,
          r: 0
        };
        mMn = {
          v: 0,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        Nwv = {
          v: vM.nNwMM,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        nWn = {
          v: vM.vWmnN,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        vWm = {
          v: vM.vnvWm,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        wNv = {
          v: vM.VNnVn,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        vnnMnmv = {
          v: vM.mVmvN,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        NWWMMwv = {
          v: vM.nmvNm,
          b: vM.Mnm,
          V: -1,
          r: 0
        };
        nV = {
          v: 0,
          b: vM.mVVVW,
          V: -1,
          r: 0
        };
        MwNvVwv = {
          v: vM.vnvWm,
          b: vM.mVVVW,
          V: -1,
          r: 0
        };
        MWwwVvv = {
          v: vM.VNnVn,
          b: vM.mVVVW,
          V: -1,
          r: 0
        };
        VWwnN = {
          v: 0,
          b: vM.VNnvM,
          V: -1,
          r: 0
        };
        WwVnM = {
          v: vM.vnvWm,
          b: vM.VNnvM,
          V: -1,
          r: 0
        };
        MVN = {
          v: vM.VNnVn,
          b: vM.VNnvM,
          V: -1,
          r: 0
        };
        Nvw[mWM.VwWWv] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, nvV, nvV, nvV, {
            v: 62,
            b: 30,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 30,
            V: -1,
            r: 2
          }, nvV, nvV], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 0,
            r: 3
          }, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 13,
            r: 1
          }, nvV], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 22,
            r: 3
          }, wV, wV, wV, wV, {
            v: 62,
            b: 30,
            V: -1,
            r: 3
          }], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 9,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 1
          }, wV, wV, wV, {
            v: 62,
            b: 30,
            V: -1,
            r: 3
          }], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 17,
            r: 0
          }, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 19,
            r: 2
          }, nvV], [Vn, nvV, nvV, nvV, nvV, nvV, nvV, nvV]]
        };
        Nvw[mWM.Vmwnm] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, MmV, MmV, {
            v: 67,
            b: 69,
            V: -1,
            r: 2
          }, MmV, MmV, MmV], [Vn, {
            v: 62,
            b: 69,
            V: -1,
            r: 1
          }, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, MmV, {
            v: 67,
            b: 71,
            V: 28,
            r: 3
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 21,
            r: 1
          }, MmV], [Vn, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, MmV, {
            v: 67,
            b: 71,
            V: 12,
            r: 0
          }, nn, {
            v: 67,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, {
            v: 62,
            b: 69,
            V: -1,
            r: 1
          }, wV, wV, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, nn, nn, nn, {
            v: 67,
            b: 71,
            V: 15,
            r: 1
          }, MmV], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, MmV, nn, {
            v: 67,
            b: 71,
            V: 23,
            r: 1
          }, nn, {
            v: 67,
            b: 71,
            V: 5,
            r: 1
          }, MmV], [Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, mN, wV, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, mN], [Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, mN, {
            v: 62,
            b: 71,
            V: 23,
            r: 2
          }, wV, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 14,
            r: 1
          }, mN], [Vn, Vn, mN, {
            v: 67,
            b: 71,
            V: 27,
            r: 0
          }, nn, nn, {
            v: 62,
            b: 71,
            V: 8,
            r: 3
          }, wV, {
            v: 62,
            b: 71,
            V: 1,
            r: 1
          }, mN], [Vn, Vn, mN, {
            v: 67,
            b: 71,
            V: 27,
            r: 0
          }, nn, {
            v: 67,
            b: 71,
            V: 7,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 2,
            r: 1
          }, mN], [Vn, Vn, mN, {
            v: 67,
            b: 71,
            V: 20,
            r: 0
          }, nn, nn, wV, wV, wV, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 1
          }, mN, mN, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, mN, mN], [Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 2
          }, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }]]
        };
        Nvw[mWM.MMvnn] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, Vn, Vn, mN, mN, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, mN, mN, MmV, MmV, MmV, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, Vn, Vn, mN, {
            v: 67,
            b: 71,
            V: 27,
            r: 0
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 23,
            r: 3
          }, mN, {
            v: 67,
            b: 71,
            V: 5,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 13,
            r: 1
          }, MmV, wV, wV, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, mN, {
            v: 67,
            b: 71,
            V: 20,
            r: 0
          }, nn, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 16,
            r: 2
          }, mN, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 3
          }, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 1
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, wV, {
            v: 62,
            b: 71,
            V: 2,
            r: 1
          }, mN, {
            v: 67,
            b: 71,
            V: 11,
            r: 3
          }, nn, nn, nn, mN, nn, {
            v: 67,
            b: 71,
            V: 12,
            r: 2
          }, MmV, MmV, MmV, NmN], [Vn, wV, wV, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, wV, wV, {
            v: 62,
            b: 31,
            V: -1,
            r: 3
          }, nn, nn, MmV, {
            v: 67,
            b: 71,
            V: 25,
            r: 2
          }, {
            v: 67,
            b: 71,
            V: 3,
            r: 1
          }, MmV], [Vn, wV, wV, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, wV, wV, mN, nn, nn, {
            v: 67,
            b: 51,
            V: -1,
            r: 1
          }, nn, {
            v: 67,
            b: 71,
            V: 18,
            r: 2
          }, MmV], [Vn, wV, wV, NmN, {
            v: 62,
            b: 71,
            V: 3,
            r: 3
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 16,
            r: 2
          }, mN, MmV, MmV, MmV, MmV, MmV, MmV], [Vn, wV, {
            v: 62,
            b: 71,
            V: 26,
            r: 0
          }, mN, {
            v: 0,
            b: 71,
            V: 4,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 22,
            r: 1
          }, wV, {
            v: 62,
            b: 71,
            V: 8,
            r: 1
          }, mN, {
            v: 0,
            b: 71,
            V: 24,
            r: 1
          }, Vn, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }], [Vn, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, mN, {
            v: 62,
            b: 71,
            V: 23,
            r: 1
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 14,
            r: 1
          }, mN, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, mN, mN, {
            v: 62,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 0
          }, mN, mN, {
            v: 0,
            b: 71,
            V: 24,
            r: 1
          }]]
        };
        Nvw[mWM.NMMWM] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, MmV, MmV, MmV, MmV], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 23,
            r: 2
          }, Vn, Vn, Vn, Vn, Vn, MmV, {
            v: 67,
            b: 71,
            V: 21,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 28,
            r: 0
          }, MmV], [Vn, mN, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, mN, mN, Vn, MmV, nn, nn, MmV], [Vn, mN, {
            v: 62,
            b: 71,
            V: 12,
            r: 0
          }, wV, wV, wV, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, MmV, {
            v: 67,
            b: 31,
            V: -1,
            r: 0
          }, MmV, MmV], [Vn, mN, wV, {
            v: 62,
            b: 71,
            V: 2,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 14,
            r: 1
          }, mN, wV, wV, wV, wV, mN], [Vn, mN, {
            v: 62,
            b: 71,
            V: 0,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 7,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 8,
            r: 1
          }, mN, wV, {
            v: 62,
            b: 71,
            V: 14,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 5,
            r: 2
          }, wV, mN], [Vn, mN, wV, {
            v: 62,
            b: 71,
            V: 1,
            r: 2
          }, wV, wV, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, mN, mN, mN, mN, MmV], [Vn, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, wV, wV, wV, wV, wV, {
            v: 62,
            b: 31,
            V: -1,
            r: 3
          }, nn, nn, MmV], [Vn, mN, wV, wV, wV, wV, wV, wV, wV, MmV, {
            v: 67,
            b: 71,
            V: 25,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 18,
            r: 3
          }, MmV], [Vn, mN, mN, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, mN, mN, mN, {
            v: 67,
            b: 31,
            V: -1,
            r: 2
          }, MmV, MmV, MmV, MmV], [Vn, mN, {
            v: 62,
            b: 71,
            V: 20,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 11,
            r: 0
          }, wV, wV, mN, {
            v: 67,
            b: 71,
            V: 24,
            r: 0
          }, nn, nn, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 3
          }], [Vn, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, wV, wV, mN, {
            v: 67,
            b: 71,
            V: 23,
            r: 0
          }, nn, nn, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 3
          }], [Vn, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, wV, wV, mN, mN, mN, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }], [Vn, mN, {
            v: 62,
            b: 71,
            V: 14,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 13,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 12,
            r: 3
          }, wV, {
            v: 67,
            b: 31,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 12,
            r: 2
          }, mN], [Vn, mN, mN, mN, mN, mN, MmV, mN, mN]]
        };
        Nvw[mWM.WVmnW] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, MmV, MmV, MmV, MmV, {
            v: 67,
            b: 31,
            V: -1,
            r: 2
          }, MmV, MmV, MmV, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, NmN], [Vn, MmV, {
            v: 67,
            b: 71,
            V: 12,
            r: 0
          }, nn, {
            v: 67,
            b: 71,
            V: 5,
            r: 0
          }, nn, {
            v: 67,
            b: 71,
            V: 11,
            r: 1
          }, MmV, {
            v: 67,
            b: 71,
            V: 13,
            r: 0
          }, nn, nn, MmV], [Vn, MmV, {
            v: 67,
            b: 71,
            V: 13,
            r: 0
          }, nn, nn, nn, {
            v: 67,
            b: 71,
            V: 19,
            r: 2
          }, MmV, nn, nn, {
            v: 67,
            b: 71,
            V: 21,
            r: 1
          }, MmV], [Vn, MmV, {
            v: 67,
            b: 71,
            V: 9,
            r: 3
          }, nn, {
            v: 67,
            b: 71,
            V: 7,
            r: 1
          }, nn, {
            v: 67,
            b: 71,
            V: 26,
            r: 3
          }, MmV, nn, nn, {
            v: 67,
            b: 71,
            V: 28,
            r: 1
          }, MmV], [Vn, MmV, {
            v: 67,
            b: 71,
            V: 13,
            r: 0
          }, nn, nn, nn, nn, MmV, nn, MmV, MmV, MmV], [Vn, MmV, {
            v: 67,
            b: 71,
            V: 9,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 10,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 12,
            r: 3
          }, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 27,
            r: 2
          }, MmV], [Vn, MmV, MmV, MmV, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, MmV, MmV, {
            v: 67,
            b: 31,
            V: -1,
            r: 0
          }, MmV, MmV, MmV], [Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 17,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 3
          }]]
        };
        Nvw[mWM.wWNMm] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN, mN], [Vn, mN, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 9,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 0
          }, wV, mN, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 1,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 2,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 1
          }, mN, {
            v: 0,
            b: 71,
            V: 17,
            r: 1
          }], [Vn, mN, nn, nn, {
            v: 62,
            b: 71,
            V: 10,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 2
          }, wV, mN, {
            v: 62,
            b: 71,
            V: 39,
            r: 0
          }, wV, wV, wV, wV, wV, mN], [Vn, mN, {
            v: 67,
            b: 71,
            V: 39,
            r: 3
          }, nn, nn, nn, nn, nn, nn, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, nn, nn, nn, nn, nn, nn, {
            v: 67,
            b: 51,
            V: -1,
            r: 1
          }], [Vn, mN, {
            v: 85,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 85,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, nn, nn, nn, nn, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, nn, nn, nn, nn, nn, nn, {
            v: 67,
            b: 51,
            V: -1,
            r: 3
          }], [Vn, mN, {
            v: 85,
            b: 71,
            V: 28,
            r: 3
          }, nMv, {
            v: 62,
            b: 69,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 10,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 40,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 7,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 7,
            r: 1
          }, mN], [Vn, mN, {
            v: 85,
            b: 71,
            V: 21,
            r: 3
          }, nMv, {
            v: 62,
            b: 69,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 8,
            r: 1
          }, mN], [Vn, mN, mN, mN, mN, mN, mN, mN, mN, wnvmV, {
            v: 0,
            b: 71,
            V: 41,
            r: 2
          }, wnvmV, wnvmV, wnvmV, mN, mN, mN], [Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 16,
            r: 3
          }, Vn, Vn, Vn, wnvmV, nMv, nMv, {
            v: 85,
            b: 71,
            V: 18,
            r: 2
          }, wnvmV, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, wnvmV, {
            v: 85,
            b: 71,
            V: 25,
            r: 1
          }, nMv, {
            v: 85,
            b: 71,
            V: 19,
            r: 2
          }, wnvmV], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, wnvmV, wnvmV, wnvmV, wnvmV, wnvmV]]
        };
        Nvw[mWM.NWVVw] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, nvV, nvV, nvV, {
            v: 67,
            b: 50,
            V: -1,
            r: 2
          }, nvV, nvV, nvV], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 9,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 8,
            r: 0
          }, nn, {
            v: 62,
            b: 71,
            V: 13,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 6,
            r: 0
          }, nvV], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 10,
            r: 2
          }, wV, nn, wV, wV, nvV], [Vn, {
            v: 67,
            b: 50,
            V: -1,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 144,
            V: -1,
            r: 0
          }, nn, {
            v: 67,
            b: 50,
            V: -1,
            r: 3
          }], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 28,
            r: 3
          }, wV, nn, wV, {
            v: 62,
            b: 71,
            V: 19,
            r: 2
          }, nvV], [Vn, nvV, {
            v: 62,
            b: 71,
            V: 21,
            r: 3
          }, wV, nn, wV, {
            v: 62,
            b: 71,
            V: 26,
            r: 2
          }, nvV], [Vn, nvV, nvV, nvV, {
            v: 67,
            b: 50,
            V: -1,
            r: 0
          }, nvV, nvV, nvV]]
        };
        Nvw[mWM.mnWVv] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, NmN, NmN, NmN, NmN, NmN, NmN, NmN, NmN], [Vn, NmN, {
            v: 62,
            b: 148,
            V: -1,
            r: 1
          }, wV, {
            v: 62,
            b: 71,
            V: 16,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 39,
            r: 1
          }, wV, {
            v: 62,
            b: 148,
            V: -1,
            r: 1
          }, NmN], [Vn, NmN, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, NmN], [Vn, NmN, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 69,
            V: -1,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, NmN], [Vn, NmN, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 69,
            V: -1,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, NmN], [Vn, NmN, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 69,
            V: -1,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, NmN], [Vn, NmN, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 0
          }, NmN], [Vn, NmN, {
            v: 62,
            b: 148,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, wV, wV, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 148,
            V: -1,
            r: 1
          }, NmN], [Vn, NmN, NmN, NmN, {
            v: 84,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 84,
            b: 31,
            V: -1,
            r: 2
          }, NmN, NmN, NmN, {
            v: 0,
            b: 71,
            V: 17,
            r: 1
          }], [Vn, NmN, {
            v: 84,
            b: 71,
            V: 8,
            r: 0
          }, {
            v: 84,
            b: 71,
            V: 8,
            r: 0
          }, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 8,
            r: 0
          }, {
            v: 84,
            b: 71,
            V: 8,
            r: 0
          }, NmN, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }], [Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }]]
        };
        Nvw[mWM.vvvWN] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, nn, {
            v: 67,
            b: 148,
            V: -1,
            r: 0
          }, nn, nn, nn, {
            v: 67,
            b: 151,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 148,
            V: -1,
            r: 3
          }, Vn, Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 3
          }], [Vn, nWn, {
            v: 67,
            b: 149,
            V: -1,
            r: 0
          }, nWn, {
            v: 67,
            b: 150,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 150,
            V: -1,
            r: 0
          }, nWn, {
            v: 67,
            b: 149,
            V: -1,
            r: 0
          }, Nwv, Nwv, mMn, mMn, mMn, mMn], [Vn, mMn, {
            v: 62,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 151,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 143,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 143,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, Nwv, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, {
            v: 84,
            b: 71,
            V: 28,
            r: 0
          }, {
            v: 84,
            b: 71,
            V: 28,
            r: 0
          }, mMn, {
            v: 0,
            b: 71,
            V: 16,
            r: 3
          }], [Vn, mMn, wV, nn, nn, nn, nn, {
            v: 62,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 146,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 32,
            V: -1,
            r: 3
          }, Vmv, Vmv, Vmv, mMn], [Vn, mMn, {
            v: 62,
            b: 71,
            V: 4,
            r: 3
          }, nn, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, nn, {
            v: 62,
            b: 71,
            V: 3,
            r: 1
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, mMn, mMn, nMv, nMv, mMn], [Vn, mMn, {
            v: 62,
            b: 71,
            V: 3,
            r: 3
          }, nn, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, nn, {
            v: 62,
            b: 71,
            V: 4,
            r: 1
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 71,
            V: 21,
            r: 3
          }, {
            v: 85,
            b: 32,
            V: -1,
            r: 3
          }, nMv, nMv, mMn], [Vn, mMn, wV, nn, nn, nn, nn, wV, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, mMn, mMn, mMn, mMn, mMn], [Vn, mMn, {
            v: 62,
            b: 71,
            V: 23,
            r: 3
          }, wV, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 3
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, mMn], [Vn, nWn, nWn, nWn, {
            v: 67,
            b: 52,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 52,
            V: -1,
            r: 2
          }, nWn, nWn, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, nWn], [Vn, nWn, {
            v: 67,
            b: 71,
            V: 27,
            r: 1
          }, nn, nn, nn, nn, {
            v: 67,
            b: 71,
            V: 16,
            r: 1
          }, {
            v: 67,
            b: 144,
            V: -1,
            r: 3
          }, nWn], [Vn, {
            v: 67,
            b: 70,
            V: -1,
            r: 1
          }, nn, wV, wV, wV, nn, {
            v: 67,
            b: 71,
            V: 13,
            r: 0
          }, nn, nWn], [Vn, {
            v: 67,
            b: 70,
            V: -1,
            r: 1
          }, nn, {
            v: 62,
            b: 71,
            V: 4,
            r: 3
          }, wV, wV, nn, {
            v: 67,
            b: 71,
            V: 9,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 10,
            r: 1
          }, nWn, {
            v: 0,
            b: 71,
            V: 17,
            r: 3
          }], [Vn, nWn, {
            v: 67,
            b: 71,
            V: 27,
            r: 0
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 3,
            r: 2
          }, nn, nn, nn, nWn, {
            v: 0,
            b: 71,
            V: 24,
            r: 2
          }], [Vn, nWn, {
            v: 67,
            b: 71,
            V: 18,
            r: 0
          }, nn, nn, nn, nn, {
            v: 67,
            b: 71,
            V: 23,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 12,
            r: 3
          }, nWn], [Vn, nWn, nWn, nWn, {
            v: 67,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 70,
            V: -1,
            r: 0
          }, nWn, nWn, nWn, nWn]]
        };
        Nvw[mWM.WnNNW] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 151,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 148,
            V: -1,
            r: 0
          }, Vn, {
            v: 0,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 151,
            V: -1,
            r: 0
          }], [Vn, vNNNV, vNNNV, {
            v: 0,
            b: 30,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 30,
            V: -1,
            r: 2
          }, wNv, wNv, {
            v: 67,
            b: 149,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 150,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 149,
            V: -1,
            r: 0
          }, wNv], [Vn, vNNNV, {
            v: 0,
            b: 71,
            V: 23,
            r: 3
          }, Vn, Vn, wNv, {
            v: 67,
            b: 71,
            V: 9,
            r: 0
          }, {
            v: 67,
            b: 143,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 146,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 143,
            V: -1,
            r: 1
          }, wNv, {
            v: 0,
            b: 71,
            V: 17,
            r: 2
          }], [Vn, vNNNV, {
            v: 0,
            b: 71,
            V: 26,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 16,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 17,
            r: 3
          }, wNv, {
            v: 67,
            b: 71,
            V: 10,
            r: 2
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 1
          }, nn, {
            v: 67,
            b: 151,
            V: -1,
            r: 1
          }, wNv, wNv, wNv], [Vn, vNNNV, {
            v: 0,
            b: 144,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 144,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 144,
            V: -1,
            r: 3
          }, wNv, nn, nn, nn, nn, {
            v: 62,
            b: 71,
            V: 20,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 11,
            r: 0
          }, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }], [Vn, wNv, {
            v: 85,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 149,
            V: -1,
            r: 0
          }, wNv, {
            v: 62,
            b: 32,
            V: -1,
            r: 2
          }, Nwv, {
            v: 67,
            b: 71,
            V: 8,
            r: 0
          }, nn, wV, wV, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }], [Vn, {
            v: 85,
            b: 70,
            V: -1,
            r: 1
          }, {
            v: 85,
            b: 147,
            V: -1,
            r: 2
          }, {
            v: 85,
            b: 146,
            V: -1,
            r: 2
          }, {
            v: 85,
            b: 140,
            V: -1,
            r: 2
          }, wNv, wV, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }, nn, nn, wV, wV, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }], [Vn, wNv, {
            v: 85,
            b: 71,
            V: 31,
            r: 0
          }, {
            v: 85,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 85,
            b: 146,
            V: -1,
            r: 1
          }, {
            v: 85,
            b: 150,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 5,
            r: 2
          }, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 0,
            r: 2
          }, nn, {
            v: 62,
            b: 71,
            V: 10,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 7,
            r: 0
          }, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }], [Vn, wNv, wNv, wNv, wNv, wNv, wNv, wNv, wNv, {
            v: 85,
            b: 32,
            V: -1,
            r: 2
          }, wNv, wNv, wNv], [Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, wNv, {
            v: 85,
            b: 71,
            V: 28,
            r: 3
          }, nMv, nMv, wNv, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }], [Vn, Vn, Vn, Vn, Vn, Vn, wNv, {
            v: 85,
            b: 71,
            V: 21,
            r: 3
          }, nMv, {
            v: 85,
            b: 71,
            V: 18,
            r: 3
          }, wNv], [Vn, Vn, Vn, Vn, Vn, Vn, wNv, wNv, wNv, wNv, wNv]]
        };
        Nvw[mWM.NMWmV] = {
          width: 0,
          height: 0,
          MVm: vVNnn,
          Vv: [[Vn], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 111,
            V: -1,
            r: 3
          }, Vn, Vn, {
            v: 0,
            b: 111,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 111,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 111,
            V: -1,
            r: 3
          }, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 24,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, wNv, wNv, wNv, wNv, wNv, wNv, wNv, wNv, wNv, wNv, wNv, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, nWn, nWn, nWn, nWn, nWn, nWn, nWn, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, wNv, {
            v: 85,
            b: 71,
            V: 37,
            r: 1
          }, {
            v: 85,
            b: 71,
            V: 28,
            r: 0
          }, nMv, {
            v: 85,
            b: 71,
            V: 31,
            r: 1
          }, {
            v: 85,
            b: 71,
            V: 32,
            r: 1
          }, wNv, {
            v: 85,
            b: 71,
            V: 37,
            r: 1
          }, nMv, nMv, wNv, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, nWn, wV, {
            v: 62,
            b: 70,
            V: -1,
            r: 3
          }, nn, nn, {
            v: 62,
            b: 71,
            V: 13,
            r: 2
          }, nWn, vWm, vWm, vWm, vWm], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, wNv, nMv, nMv, nMv, nMv, nMv, wNv, nMv, nMv, {
            v: 85,
            b: 71,
            V: 36,
            r: 1
          }, wNv, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 23,
            r: 0
          }, nWn, wV, {
            v: 62,
            b: 71,
            V: 40,
            r: 2
          }, nn, nn, {
            v: 62,
            b: 71,
            V: 12,
            r: 2
          }, nWn, {
            v: 84,
            b: 71,
            V: 26,
            r: 3
          }, {
            v: 84,
            b: 71,
            V: 17,
            r: 3
          }, Vmv, vWm], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, vWm, vWm, {
            v: 84,
            b: 52,
            V: -1,
            r: 0
          }, vWm, vWm, wNv, wNv, vWm, {
            v: 85,
            b: 71,
            V: 41,
            r: 0
          }, vWm, {
            v: 85,
            b: 71,
            V: 41,
            r: 0
          }, wNv, mMn, wNv, wNv, wNv, wNv, wNv, wNv, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 151,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 150,
            V: -1,
            r: 1
          }, nn, nn, nn, nn, wV, nWn, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 18,
            r: 2
          }, vWm], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, vWm, Vmv, Vmv, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 35,
            r: 2
          }, {
            v: 84,
            b: 71,
            V: 35,
            r: 2
          }, Vmv, Vmv, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 35,
            r: 2
          }, {
            v: 84,
            b: 71,
            V: 35,
            r: 2
          }, Vmv, Vmv, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 33,
            r: 2
          }, wNv, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 151,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 150,
            V: -1,
            r: 1
          }, nn, nn, nn, nn, wV, {
            v: 67,
            b: 71,
            V: 41,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 18,
            r: 2
          }, vWm], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, vWm, {
            v: 84,
            b: 71,
            V: 9,
            r: 0
          }, Vmv, Vmv, Vmv, Vmv, Vmv, {
            v: 84,
            b: 151,
            V: -1,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 151,
            V: -1,
            r: 1
          }, Vmv, Vmv, Vmv, Vmv, Vmv, Vmv, {
            v: 85,
            b: 71,
            V: 33,
            r: 2
          }, wNv, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 23,
            r: 0
          }, nWn, {
            v: 62,
            b: 71,
            V: 39,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 39,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 23,
            r: 3
          }, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 2
          }, nWn, {
            v: 84,
            b: 71,
            V: 26,
            r: 2
          }, Vmv, {
            v: 84,
            b: 71,
            V: 16,
            r: 2
          }, vWm, {
            v: 0,
            b: 71,
            V: 16,
            r: 1
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, vWm, {
            v: 84,
            b: 71,
            V: 10,
            r: 2
          }, Vmv, Vmv, Vmv, vWm, vWm, {
            v: 84,
            b: 149,
            V: -1,
            r: 2
          }, {
            v: 85,
            b: 150,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 150,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 149,
            V: -1,
            r: 2
          }, vWm, vWm, Vmv, Vmv, wNv, vWm, wNv, wNv, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, nWn, nWn, nWn, nWn, {
            v: 0,
            b: 52,
            V: -1,
            r: 0
          }, nWn, nWn, vWm, vWm, vWm, vWm], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, vWm, vWm, vWm, {
            v: 84,
            b: 71,
            V: 33,
            r: 0
          }, Vmv, vWm, {
            v: 84,
            b: 71,
            V: 32,
            r: 0
          }, {
            v: 84,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 84,
            b: 140,
            V: -1,
            r: 1
          }, {
            v: 85,
            b: 146,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 142,
            V: -1,
            r: 2
          }, {
            v: 84,
            b: 151,
            V: -1,
            r: 2
          }, {
            v: 84,
            b: 150,
            V: -1,
            r: 1
          }, Vmv, {
            v: 84,
            b: 71,
            V: 33,
            r: 2
          }, wNv, {
            v: 0,
            b: 71,
            V: 37,
            r: 1
          }, {
            v: 0,
            b: 71,
            V: 38,
            r: 1
          }, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, Vmv, Vmv, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, vWm, {
            v: 84,
            b: 71,
            V: 22,
            r: 0
          }, Vmv, vWm, Vmv, {
            v: 84,
            b: 71,
            V: 34,
            r: 3
          }, nMv, {
            v: 85,
            b: 140,
            V: -1,
            r: 2
          }, {
            v: 84,
            b: 71,
            V: 34,
            r: 3
          }, Vmv, vWm, Vmv, {
            v: 84,
            b: 71,
            V: 38,
            r: 0
          }, wNv, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 32,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 24,
            r: 0
          }], [Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 86,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 24,
            r: 0
          }, Vn, vWm, mMn, {
            v: 84,
            b: 32,
            V: -1,
            r: 0
          }, vWm, {
            v: 84,
            b: 142,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 146,
            V: -1,
            r: 1
          }, {
            v: 85,
            b: 146,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 142,
            V: -1,
            r: 1
          }, vWm, {
            v: 84,
            b: 32,
            V: -1,
            r: 0
          }, mMn, wNv, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 35,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 31,
            r: 0
          }], [Vn, Vn, Vn, wNv, wNv, wNv, wNv, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 0,
            b: 70,
            V: -1,
            r: 3
          }, nMv, nMv, vWm, {
            v: 84,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 71,
            V: 34,
            r: 1
          }, {
            v: 85,
            b: 140,
            V: -1,
            r: 2
          }, nMv, {
            v: 84,
            b: 71,
            V: 34,
            r: 1
          }, {
            v: 84,
            b: 140,
            V: -1,
            r: 2
          }, vWm, nMv, nMv, {
            v: 0,
            b: 70,
            V: -1,
            r: 1
          }, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 71,
            V: 23,
            r: 0
          }, Vn, Vn, Vn, wV], [Vn, Vn, Vn, wNv, {
            v: 85,
            b: 71,
            V: 33,
            r: 1
          }, {
            v: 85,
            b: 71,
            V: 33,
            r: 1
          }, wNv, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 85,
            b: 70,
            V: -1,
            r: 2
          }, Vmv, {
            v: 84,
            b: 144,
            V: -1,
            r: 1
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 1
          }, {
            v: 84,
            b: 145,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 142,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 146,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 147,
            V: -1,
            r: 3
          }, {
            v: 84,
            b: 142,
            V: -1,
            r: 1
          }, {
            v: 84,
            b: 146,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 3
          }, {
            v: 84,
            b: 144,
            V: -1,
            r: 1
          }, Vmv, {
            v: 85,
            b: 70,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 70,
            V: -1,
            r: 1
          }, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, wWM, wWM, {
            v: 67,
            b: 30,
            V: -1,
            r: 2
          }, wWM, wWM, wV, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }], [Vn, Vn, Vn, vWm, Vmv, Vmv, vWm, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 32,
            V: -1,
            r: 3
          }, nMv, nMv, nMv, vWm, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 85,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, vWm, nMv, nMv, nMv, {
            v: 0,
            b: 32,
            V: -1,
            r: 1
          }, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, wWM, nn, nn, {
            v: 67,
            b: 71,
            V: 6,
            r: 1
          }, wWM, wV, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, nn, nn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, Vn, Vn, {
            v: 84,
            b: 71,
            V: 41,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 41,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 85,
            b: 70,
            V: -1,
            r: 0
          }, Vmv, Vmv, Vmv, {
            v: 84,
            b: 144,
            V: -1,
            r: 1
          }, {
            v: 84,
            b: 144,
            V: -1,
            r: 1
          }, Vmv, Vmv, {
            v: 84,
            b: 144,
            V: -1,
            r: 1
          }, {
            v: 84,
            b: 144,
            V: -1,
            r: 1
          }, Vmv, Vmv, Vmv, {
            v: 85,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 70,
            V: -1,
            r: 1
          }, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 67,
            b: 30,
            V: -1,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 19,
            r: 2
          }, nvV, wV, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, nn, nn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, Vn, Vn, wNv, {
            v: 85,
            b: 71,
            V: 36,
            r: 2
          }, {
            v: 85,
            b: 71,
            V: 37,
            r: 3
          }, wNv, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 0,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 85,
            b: 71,
            V: 39,
            r: 0
          }, nMv, nMv, nMv, nMv, nMv, nMv, nMv, nMv, nMv, nMv, {
            v: 85,
            b: 71,
            V: 35,
            r: 1
          }, {
            v: 0,
            b: 70,
            V: -1,
            r: 1
          }, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, wWM, {
            v: 67,
            b: 71,
            V: 8,
            r: 3
          }, nn, {
            v: 67,
            b: 71,
            V: 0,
            r: 1
          }, wWM, wV, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 23,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 23,
            r: 1
          }, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }, wNv, wNv, wNv, wNv, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 0,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 32,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 32,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 70,
            V: -1,
            r: 1
          }, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 23,
            r: 0
          }, wWM, wWM, wWM, wWM, wWM, wV, MmV, MmV, MmV, MmV, Vn, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, wV, wV, wV, wV, wV, wV, wV, MmV, wV, {
            v: 62,
            b: 71,
            V: 21,
            r: 1
          }, mN, nn, nn, nn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }], [{
            v: 0,
            b: 86,
            V: 26,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 33,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 32,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 33,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 32,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 24,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 2
          }, MmV, MmV, MmV, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, mN, mN, {
            v: 67,
            b: 51,
            V: -1,
            r: 2
          }, MmV, MmV, MmV, MmV], [{
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 28,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, MmV, {
            v: 67,
            b: 71,
            V: 13,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 27,
            r: 1
          }, nn, nn, MmV, {
            v: 67,
            b: 71,
            V: 23,
            r: 3
          }, nn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }], [{
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 27,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, wV, {
            v: 67,
            b: 31,
            V: -1,
            r: 1
          }, nn, nn, nn, nn, nn, nn, MmV, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 3
          }], [{
            v: 0,
            b: 86,
            V: 30,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 42,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 43,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 34,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 62,
            b: 71,
            V: 23,
            r: 0
          }, MmV, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, nn, nn, MmV, {
            v: 67,
            b: 31,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, MmV, {
            v: 0,
            b: 71,
            V: 16,
            r: 1
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 7,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, {
            v: 84,
            b: 151,
            V: -1,
            r: 0
          }, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 0
          }, MmV, {
            v: 67,
            b: 71,
            V: 15,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 4,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 3,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 14,
            r: 0
          }, nn, nn, nn, nn, nn, MmV, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }], [Vn, Vn, nvV, {
            v: 62,
            b: 71,
            V: 26,
            r: 1
          }, wV, wV, nvV, {
            v: 62,
            b: 71,
            V: 16,
            r: 2
          }, wV, wV, nvV, {
            v: 0,
            b: 31,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 31,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, Vn, {
            v: 0,
            b: 86,
            V: 15,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, Vn, Vn, Nwv, Nwv, Nwv, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, Nwv, Nwv, Nwv, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 71,
            V: 23,
            r: 0
          }, MmV, {
            v: 67,
            b: 71,
            V: 4,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 7,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 3,
            r: 1
          }, nn, wV, wV, wV, nn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, nvV, {
            v: 62,
            b: 71,
            V: 17,
            r: 1
          }, wV, {
            v: 62,
            b: 71,
            V: 22,
            r: 1
          }, nvV, {
            v: 62,
            b: 71,
            V: 17,
            r: 2
          }, wV, {
            v: 62,
            b: 71,
            V: 15,
            r: 1
          }, nvV, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, Nwv, {
            v: 62,
            b: 71,
            V: 16,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 39,
            r: 1
          }, wV, wV, wV, Nwv, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 148,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, nn, nn, nn, nn, nn, wV, wV, wV, nn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, Vn, nvV, {
            v: 62,
            b: 71,
            V: 10,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 0,
            r: 1
          }, nvV, {
            v: 62,
            b: 71,
            V: 1,
            r: 3
          }, wV, {
            v: 62,
            b: 71,
            V: 8,
            r: 1
          }, nvV, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, mMn, vWm, vWm, Nwv, wV, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 27,
            r: 2
          }, Nwv, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 23,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 27,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 8,
            r: 2
          }, {
            v: 67,
            b: 71,
            V: 27,
            r: 3
          }, nn, nn, nn, nn, {
            v: 67,
            b: 71,
            V: 12,
            r: 2
          }, MmV], [Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, nvV, {
            v: 62,
            b: 71,
            V: 9,
            r: 2
          }, wV, wV, nvV, wV, wV, {
            v: 62,
            b: 71,
            V: 12,
            r: 2
          }, vNNNV, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 16,
            r: 2
          }, vWm, {
            v: 84,
            b: 71,
            V: 16,
            r: 1
          }, {
            v: 84,
            b: 71,
            V: 19,
            r: 1
          }, vWm, {
            v: 62,
            b: 32,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 70,
            V: -1,
            r: 0
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 39,
            r: 2
          }, Nwv, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 148,
            V: -1,
            r: 0
          }, MmV, MmV, MmV, MmV, MmV, {
            v: 67,
            b: 31,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 31,
            V: -1,
            r: 0
          }, MmV, MmV, MmV, MmV, {
            v: 0,
            b: 71,
            V: 24,
            r: 1
          }], [Vn, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }, vNNNV, nvV, nvV, nvV, nvV, nvV, nvV, vNNNV, vNNNV, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 0,
            b: 71,
            V: 17,
            r: 0
          }, vWm, Vmv, Vmv, vWm, nn, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, wV, wV, wV, Nwv, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, Vmv, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 140,
            V: -1,
            r: 0
          }, MmV, {
            v: 62,
            b: 71,
            V: 20,
            r: 1
          }, wV, {
            v: 62,
            b: 71,
            V: 28,
            r: 0
          }, mN, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 20,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 13,
            r: 1
          }, mN], [Vn, Vn, Vn, mN, mN, mN, mN, mN, mN, wV, wV, wV, wV, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, vWm, Vmv, Vmv, nWn, nn, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, wV, wV, wV, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, {
            v: 84,
            b: 151,
            V: -1,
            r: 0
          }, Vmv, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 69,
            V: -1,
            r: 1
          }, wV, wV, wV, {
            v: 62,
            b: 31,
            V: -1,
            r: 3
          }, wV, wV, wV, wV, wV, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, mN, {
            v: 62,
            b: 71,
            V: 6,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 14,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 15,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 5,
            r: 0
          }, mN, {
            v: 62,
            b: 71,
            V: 23,
            r: 2
          }, wV, wV, wV, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 16,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, vWm, {
            v: 84,
            b: 71,
            V: 18,
            r: 3
          }, Vmv, {
            v: 67,
            b: 150,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 40,
            r: 2
          }, wV, wV, wV, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, {
            v: 84,
            b: 151,
            V: -1,
            r: 3
          }, Vmv, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 143,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 144,
            V: -1,
            r: 3
          }, wV, wV, {
            v: 62,
            b: 31,
            V: -1,
            r: 3
          }, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 12,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 12,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, Vn, Vn, mN, wV, wV, wV, wV, mN, MmV, {
            v: 67,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 31,
            V: -1,
            r: 2
          }, MmV, MmV, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 13,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, vWm, vWm, vWm, nWn, {
            v: 67,
            b: 144,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 39,
            r: 2
          }, Nwv, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, Vmv, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 140,
            V: -1,
            r: 0
          }, mN, mN, mN, mN, mN, {
            v: 67,
            b: 31,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 31,
            V: -1,
            r: 2
          }, MmV, MmV, MmV, MmV, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }], [Vn, Vn, Vn, mN, {
            v: 62,
            b: 71,
            V: 0,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 2,
            r: 0
          }, wV, wV, {
            v: 67,
            b: 31,
            V: -1,
            r: 1
          }, nn, nn, nn, {
            v: 67,
            b: 71,
            V: 23,
            r: 0
          }, MmV, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, nWn, {
            v: 67,
            b: 148,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 151,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 151,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 27,
            r: 2
          }, Nwv, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 140,
            V: -1,
            r: 1
          }, {
            v: 0,
            b: 148,
            V: -1,
            r: 0
          }, MmV, {
            v: 67,
            b: 71,
            V: 16,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 26,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 23,
            r: 2
          }, {
            v: 67,
            b: 71,
            V: 17,
            r: 1
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }], [Vn, Vn, Vn, mN, wV, wV, wV, wV, mN, {
            v: 67,
            b: 71,
            V: 12,
            r: 0
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 12,
            r: 2
          }, MmV, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, Vn, Vn, nWn, nWn, nWn, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 150,
            V: -1,
            r: 3
          }, Nwv, Nwv, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, Vn, Vn, wV, wV, {
            v: 67,
            b: 31,
            V: -1,
            r: 1
          }, nn, nn, nn, nn, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 3
          }], [Vn, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, mN, {
            v: 62,
            b: 71,
            V: 1,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 8,
            r: 2
          }, wV, {
            v: 62,
            b: 71,
            V: 23,
            r: 2
          }, mN, {
            v: 67,
            b: 71,
            V: 23,
            r: 2
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 20,
            r: 2
          }, MmV, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 23,
            r: 0
          }, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, Vn, Vn, wV, wV, {
            v: 67,
            b: 31,
            V: -1,
            r: 1
          }, nn, nn, nn, nn, nn, nn, {
            v: 67,
            b: 31,
            V: -1,
            r: 3
          }], [Vn, Vn, Vn, mN, mN, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, mN, mN, MmV, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 0
          }, MmV, MmV, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, Vmv, Vmv, Vmv, Vmv, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 21,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 20,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 15,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 36,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 4,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 45,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 32,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 25,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 24,
            r: 0
          }], [{
            v: 0,
            b: 86,
            V: 17,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 4,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 5,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 3,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 37,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 35,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 29,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 31,
            r: 0
          }], [{
            v: 0,
            b: 86,
            V: 16,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 11,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 10,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 9,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 38,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 1,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 34,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, nn, nn, nn, {
            v: 67,
            b: 151,
            V: -1,
            r: 1
          }, nn, nn, nn], [{
            v: 0,
            b: 86,
            V: 40,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 0,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 39,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, Vn, Vn, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, mN, mN, NmN, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, mN, mN, mN, {
            v: 0,
            b: 71,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, nn, nn, nn, mN, {
            v: 62,
            b: 71,
            V: 27,
            r: 1
          }, {
            v: 62,
            b: 71,
            V: 27,
            r: 1
          }, wV, wV, wV, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 111,
            V: -1,
            r: 1
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 111,
            V: -1,
            r: 1
          }, Vn, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, nWn, nWn, nWn, nWn, nWn, nWn, nWn, nWn, Nwv, Nwv, Nwv, Nwv, Nwv, Nwv, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, nn, nn, nn, {
            v: 62,
            b: 31,
            V: -1,
            r: 1
          }, wV, wV, wV, wV, wV, {
            v: 62,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 67,
            b: 151,
            V: -1,
            r: 1
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 148,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 1
          }], [Vn, nWn, {
            v: 67,
            b: 71,
            V: 35,
            r: 2
          }, nn, {
            v: 67,
            b: 142,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 146,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 146,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 140,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 140,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 150,
            V: -1,
            r: 1
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 17,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 16,
            r: 1
          }, Nwv, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 3,
            r: 1
          }, mN, {
            v: 62,
            b: 71,
            V: 22,
            r: 2
          }, {
            v: 62,
            b: 71,
            V: 20,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 11,
            r: 2
          }, wV, mN, mN, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 111,
            V: -1,
            r: 1
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 111,
            V: -1,
            r: 1
          }, Vn, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }], [Vn, nWn, nn, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 149,
            V: -1,
            r: 2
          }, mMn, mMn, Nwv, wV, wV, wV, wV, Nwv, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }, {
            v: 67,
            b: 71,
            V: 23,
            r: 3
          }, MmV, MmV, mN, mN, mN, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 2
          }, mN, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, {
            v: 67,
            b: 69,
            V: -1,
            r: 3
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 140,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 69,
            V: -1,
            r: 1
          }], [{
            v: 0,
            b: 71,
            V: 24,
            r: 1
          }, nWn, nn, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 146,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 150,
            V: -1,
            r: 1
          }, wV, {
            v: 62,
            b: 71,
            V: 10,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 7,
            r: 3
          }, wV, {
            v: 62,
            b: 32,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, {
            v: 0,
            b: 69,
            V: -1,
            r: 2
          }, NmN, {
            v: 62,
            b: 71,
            V: 14,
            r: 0
          }, {
            v: 62,
            b: 71,
            V: 5,
            r: 0
          }, wV, wV, wV, wV, mN, {
            v: 0,
            b: 71,
            V: 16,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }, Vn, nn, {
            v: 67,
            b: 71,
            V: 45,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 45,
            r: 0
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 1
          }, nn, nn, {
            v: 67,
            b: 71,
            V: 24,
            r: 1
          }], [Vn, nWn, nn, {
            v: 67,
            b: 70,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 70,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 140,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 149,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, wV, {
            v: 62,
            b: 71,
            V: 7,
            r: 3
          }, wV, {
            v: 62,
            b: 32,
            V: -1,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 0
          }, mN, wV, wV, wV, wV, wV, {
            v: 62,
            b: 71,
            V: 13,
            r: 2
          }, mN, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }], [{
            v: 0,
            b: 71,
            V: 17,
            r: 1
          }, nWn, nn, nn, {
            v: 67,
            b: 71,
            V: 3,
            r: 0
          }, {
            v: 67,
            b: 148,
            V: -1,
            r: 3
          }, nWn, {
            v: 67,
            b: 146,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 147,
            V: -1,
            r: 3
          }, {
            v: 62,
            b: 149,
            V: -1,
            r: 1
          }, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, wV, wV, wV, Nwv, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, {
            v: 0,
            b: 71,
            V: 26,
            r: 0
          }, mN, {
            v: 62,
            b: 71,
            V: 12,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 23,
            r: 3
          }, wV, wV, {
            v: 62,
            b: 71,
            V: 10,
            r: 3
          }, {
            v: 62,
            b: 71,
            V: 9,
            r: 1
          }, mN, {
            v: 0,
            b: 71,
            V: 17,
            r: 3
          }, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }], [{
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }, nWn, nn, wV, wV, {
            v: 67,
            b: 146,
            V: -1,
            r: 0
          }, nWn, {
            v: 67,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 1
          }, mMn, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, wV, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 144,
            V: -1,
            r: 0
          }, Nwv, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, mN, mN, mN, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 31,
            V: -1,
            r: 0
          }, mN, mN, mN, Vn, Vn, {
            v: 0,
            b: 86,
            V: 23,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 22,
            r: 0
          }], [Vn, nWn, nn, wV, wV, {
            v: 67,
            b: 71,
            V: 10,
            r: 0
          }, nWn, {
            v: 67,
            b: 71,
            V: 14,
            r: 3
          }, {
            v: 67,
            b: 140,
            V: -1,
            r: 0
          }, Nwv, {
            v: 62,
            b: 149,
            V: -1,
            r: 0
          }, Nwv, {
            v: 62,
            b: 149,
            V: -1,
            r: 0
          }, {
            v: 62,
            b: 149,
            V: -1,
            r: 0
          }, Nwv, {
            v: 0,
            b: 71,
            V: 16,
            r: 1
          }, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 71,
            V: 24,
            r: 1
          }, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 30,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 31,
            r: 0
          }], [Vn, nWn, {
            v: 67,
            b: 71,
            V: 36,
            r: 2
          }, {
            v: 67,
            b: 151,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 71,
            V: 12,
            r: 3
          }, {
            v: 67,
            b: 71,
            V: 9,
            r: 2
          }, nWn, {
            v: 67,
            b: 71,
            V: 16,
            r: 2
          }, {
            v: 67,
            b: 140,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 71,
            V: 17,
            r: 3
          }, {
            v: 67,
            b: 147,
            V: -1,
            r: 2
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 0
          }, {
            v: 67,
            b: 146,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 2
          }, mMn, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }], [Vn, nWn, nWn, {
            v: 67,
            b: 150,
            V: -1,
            r: 2
          }, nWn, nWn, nWn, {
            v: 67,
            b: 71,
            V: 23,
            r: 2
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 140,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 146,
            V: -1,
            r: 3
          }, {
            v: 67,
            b: 142,
            V: -1,
            r: 2
          }, nn, {
            v: 67,
            b: 71,
            V: 23,
            r: 2
          }, mMn, {
            v: 0,
            b: 71,
            V: 24,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }], [Vn, Vn, {
            v: 0,
            b: 71,
            V: 16,
            r: 2
          }, {
            v: 0,
            b: 71,
            V: 16,
            r: 1
          }, {
            v: 0,
            b: 71,
            V: 17,
            r: 1
          }, {
            v: 0,
            b: 71,
            V: 26,
            r: 1
          }, mMn, mMn, mMn, mMn, mMn, mMn, mMn, mMn, mMn, Vn, {
            v: 0,
            b: 86,
            V: 14,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 12,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 6,
            r: 0
          }], [Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, {
            v: 0,
            b: 86,
            V: 40,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 1,
            r: 0
          }, {
            v: 0,
            b: 86,
            V: 41,
            r: 0
          }]]
        };
        Nvw[mWM.wnnwn] = {
          width: 0,
          height: 0,
          MVm: 0,
          Vv: [[Vn], [Vn, Vn, Vn, Vn, Vn, Vn, nV, nV, nV, Vn, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, nV, nV, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, Vn, Vn, Vn, Vn, nV, MVN, MVN, {
            v: 85,
            b: 52,
            V: -1,
            r: 2
          }, MVN, MVN, Vn, Vn, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, Vn, Vn, nV, nV, nV, nV, MVN, nMv, nMv, nMv, MVN, nV, Vn, Vn, nV, nV, nV, nV, nV, nV], [Vn, Vn, nV, nV, nV, nV, MVN, MVN, MVN, MVN, nMv, nMv, nMv, MVN, nV, nV, Vn, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, nV, MVN, {
            v: 85,
            b: 71,
            V: 9,
            r: 0
          }, {
            v: 85,
            b: 71,
            V: 58,
            r: 0
          }, MVN, {
            v: 85,
            b: 71,
            V: 33,
            r: 3
          }, nMv, {
            v: 85,
            b: 71,
            V: 33,
            r: 3
          }, MVN, nV, nV, Vn, nV, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, nV, MVN, {
            v: 85,
            b: 71,
            V: 10,
            r: 2
          }, nMv, MVN, MVN, Vmv, WwVnM, WwVnM, VWwnN, nV, Vn, Vn, nV, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, nV, MVN, nMv, nMv, Vmv, Vmv, Vmv, Vmv, {
            v: 84,
            b: 71,
            V: 51,
            r: 1
          }, WwVnM, nV, nV, Vn, Vn, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, MVN, MVN, MVN, MVN, MVN, Vmv, Vmv, Vmv, Vmv, WwVnM, VWwnN, nV, nV, Vn, nV, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, MVN, Vmv, Vmv, Vmv, MVN, MVN, Vmv, Vmv, Vmv, WwVnM, MVN, MVN, nV, Vn, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, MVN, Vmv, MVN, Vmv, Vmv, Vmv, Vmv, MVN, nMv, nMv, {
            v: 85,
            b: 71,
            V: 55,
            r: 2
          }, MVN, nV, Vn, nV, nV, nV, nV], [Vn, nV, nV, nV, nV, MVN, Vmv, MVN, MVN, MVN, MVN, Vmv, MVN, {
            v: 85,
            b: 71,
            V: 28,
            r: 3
          }, nMv, {
            v: 85,
            b: 71,
            V: 21,
            r: 1
          }, MVN, nV, Vn, Vn, nV, nV], [Vn, nV, nV, nV, nV, MVN, nMv, {
            v: 85,
            b: 71,
            V: 23,
            r: 1
          }, {
            v: 85,
            b: 71,
            V: 53,
            r: 3
          }, {
            v: 85,
            b: 71,
            V: 56,
            r: 2
          }, MVN, Vmv, MVN, MVN, MVN, MVN, MVN, nV, Vn, Vn, nV, nV, nV], [Vn, Vn, Vn, nV, nV, MVN, nMv, nMv, nMv, {
            v: 85,
            b: 71,
            V: 53,
            r: 2
          }, MVN, Vmv, Vmv, nMv, {
            v: 85,
            b: 71,
            V: 51,
            r: 0
          }, {
            v: 85,
            b: 71,
            V: 48,
            r: 0
          }, MVN, nV, nV], [Vn, nV, nV, nV, nV, MVN, nMv, nMv, nMv, nMv, MVN, MVN, MVN, nMv, nMv, nMv, MVN, nV, nV, nV], [Vn, nV, nV, nV, nV, MVN, {
            v: 85,
            b: 71,
            V: 20,
            r: 3
          }, {
            v: 85,
            b: 71,
            V: 11,
            r: 2
          }, {
            v: 85,
            b: 71,
            V: 49,
            r: 3
          }, nMv, {
            v: 85,
            b: 71,
            V: 54,
            r: 2
          }, MVN, MVN, {
            v: 85,
            b: 71,
            V: 48,
            r: 2
          }, {
            v: 85,
            b: 71,
            V: 50,
            r: 2
          }, {
            v: 85,
            b: 71,
            V: 49,
            r: 3
          }, MVN, nV, nV, nV, nV, nV, nV], [Vn, Vn, nV, nV, nV, MVN, MVN, MVN, MVN, MVN, MVN, MVN, MVN, MVN, MVN, MVN, MVN, nV, nV, nV, nV, nV, nV], [Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV, nV], [Vn, Vn, Vn, Vn, nV, nV, nV, Vn, Vn, Vn, Vn, nV, nV, nV, nV, nV]]
        };
      }
    } catch (VWn) {}
    ;
    for (var Wv = 0; Wv < Nvw[VM[126]]; Wv++) {
      var WWwVm = Nvw[Wv];
      var MVvmV = Nvw[Wv].Vv;
      WWwVm[VM[104]] = MVvmV[VM[126]];
      for (var mM = 0; mM < MVvmV[VM[126]]; mM++) {
        WWwVm[VM[255]] = Math[VM[144]](MVvmV[mM][VM[126]], WWwVm[VM[255]]);
      }
    }
    var Mnmvn = [];
    Mnmvn[Mn.nwm] = vM.vNWMW;
    Mnmvn[Mn.Wvw] = vM.WNV;
    Mnmvn[Mn.vWv] = vM.vWv;
    Mnmvn[Mn.WNm] = vM.WNm;
    Mnmvn[Mn.MVV] = vM.MVV;
    Mnmvn[Mn.vMM] = vM.vMM;
    Mnmvn[Mn.mmn] = vM.mmn;
    Mnmvn[Mn.VmW] = vM.VmW;
    Mnmvn[Mn.MNw] = vM.MNw;
    Mnmvn[Mn.vMW] = vM.vMW;
    Mnmvn[Mn.nNW] = vM.nNW;
    var mmvnw = null;
    var nVVmm = null;
    var nMvWm = null;
    var nVNnW = null;
    var mWMWV = null;
    var WMVwm = null;
    var vwNwn = null;
    var WwVnW = "#38513D";
    var vMnnM = "#0B1D23";
    var nwNvM = [{
      id: vM.mmW,
      WM: 50,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 100,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }];
    var mMV = [];
    vm = 0;
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.mmW,
      WM: 20,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 40,
      WW: 255
    }, {
      id: vM.wnV,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.mmW,
      WM: 20,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 40,
      WW: 255
    }, {
      id: vM.wnV,
      WM: 3,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.mmW,
      WM: 30,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 50,
      WW: 255
    }, {
      id: vM.vNWMW,
      WM: 1,
      WW: 255
    }, {
      id: vM.wnV,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.mmW,
      WM: 30,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 60,
      WW: 255
    }, {
      id: vM.vNWMW,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.wnV,
      WM: 5,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.mmW,
      WM: 40,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 90,
      WW: 255
    }, {
      id: vM.vNWMW,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.mmW,
      WM: 40,
      WW: 255
    }, {
      id: vM.wvw,
      WM: 150,
      WW: 255
    }, {
      id: vM.vNWMW,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.vNWMW,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 2,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.vNWMW,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wvn,
      WM: 6,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 2,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.WmnWw,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 3,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.nNMWW,
      WM: 1,
      WW: 255
    }, {
      id: vM.NMNVM,
      WM: 20,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwW,
      WM: 10,
      WW: 255
    }, {
      id: vM.nWvMM,
      WM: 2,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwW,
      WM: 16,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 2,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 14,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 2,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.MwmNN,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 14,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 2,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.MVNvN,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 14,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 2,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.wwn,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 16,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 2,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 16,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 1,
      WW: 255
    }, {
      id: vM.vWv,
      WM: 2,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Vnn,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 16,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 16,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 2,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 2,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 20,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 4,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 2,
      WW: 255
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Wwv,
      WM: 4,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNV,
      WM: 2,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 6,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }, {
      id: vM.NMNwW,
      WM: 8,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 6,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }, {
      id: vM.NMNwW,
      WM: 8,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.vwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 6,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VNV,
      WM: 1,
      WW: 20
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.VwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.VNn,
      WM: 6,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VNV,
      WM: 1,
      WW: 20
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.mvw,
      WM: 1,
      WW: 255
    }, {
      id: vM.VwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VNV,
      WM: 1,
      WW: 20
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mvv,
      WM: 1,
      WW: 255
    }, {
      id: vM.VwV,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VNV,
      WM: 1,
      WW: 20
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mvv,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNN,
      WM: 1,
      WW: 255
    }, {
      id: vM.VVw,
      WM: 26,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VNV,
      WM: 1,
      WW: 20
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mvv,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNN,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mnm,
      WM: 14,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VNV,
      WM: 1,
      WW: 20
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mvv,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNN,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mnm,
      WM: 14,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.WvW,
      WM: 3,
      WW: 255
    }, {
      id: vM.VWMwv,
      WM: 1,
      WW: 7
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mvv,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNN,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mnm,
      WM: 14,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.nMVMv,
      WM: 6,
      WW: 255
    }, {
      id: vM.VWMwv,
      WM: 1,
      WW: 7
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    mMV[vm++] = [{
      id: vM.Mmm,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mvv,
      WM: 1,
      WW: 255
    }, {
      id: vM.WNN,
      WM: 1,
      WW: 255
    }, {
      id: vM.Mnm,
      WM: 20,
      WW: 255
    }, {
      id: vM.vMM,
      WM: 1,
      WW: 255
    }, {
      id: vM.MwmNN,
      WM: 6,
      WW: 255
    }, {
      id: vM.VWMwv,
      WM: 1,
      WW: 7
    }, {
      id: vM.WNm,
      WM: 1,
      WW: 255
    }];
    vm = 0;
    var vMmnv = {
      WmMNN: vm++,
      VVVnm: vm++
    };
    var vmN = [];
    vmN[nnn.VVMNW] = {
      mmMnN: 700,
      WwVWM: 550,
      VVVmM: 0.5,
      nMmNv: 1,
      mode: vMmnv.WmMNN,
      vNnMm: 960000,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-ghoul-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-ghoul-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-ghoul.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/ghoul-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-ghoul-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 30,
      Nmm: 0,
      NnV: 38,
      WW: 160,
      mMw: [0.12, 0.22],
      nnmMv: [0.14, 0.25],
      nw: [[vM.mNw, 4, mW.mNw]],
      VVN: 1,
      Nmm: 0,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [8, 20],
      NwW: 20,
      VWw: 960000,
      vV: 1200
    };
    vmN[nnn.VvNMm] = {
      mmMnN: 300,
      WwVWM: 150,
      VVVmM: 0.5,
      nMmNv: 2,
      mode: vMmnv.WmMNN,
      vNnMm: 1920000,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -40,
        src: "img/day-ghoul3-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 40,
        src: "img/day-ghoul3-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-ghoul3.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/ghoul3-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-ghoul3-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 18,
      Nmm: 0,
      NnV: 38,
      WW: 100,
      mMw: [0.18, 0.28],
      nnmMv: [0.22, 0.38],
      nw: [[vM.Wmwmn, 4, mW.Wmwmn]],
      VVN: 1,
      Nmm: 0,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [7, 14],
      NwW: 20,
      VWw: 960000,
      vV: 1000
    };
    vmN[nnn.wmVwv] = {
      mmMnN: 500,
      WwVWM: 350,
      VVVmM: 0.5,
      nMmNv: 4,
      mode: vMmnv.WmMNN,
      vNnMm: 2880000,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -48,
        src: "img/day-ghoul4-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 48,
        src: "img/day-ghoul4-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-ghoul4.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/ghoul4-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-ghoul4-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 14,
      Nmm: 0,
      NnV: 38,
      WW: 100,
      mMw: [0.12, 0.23],
      nnmMv: [0.14, 0.26],
      nw: [[vM.wvm, 4, mW.wvm], [vM.mNw, 4, mW.mNw], [vM.mwv, 4, mW.mwv]],
      VVN: 1,
      Nmm: 0,
      WVW: 1,
      WVMWn: 120,
      vWM: 500,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [6, 20],
      NwW: 20,
      VWw: 960000,
      vV: 500
    };
    vmN[nnn.vNNWv] = {
      mmMnN: 500,
      WwVWM: 350,
      VVVmM: 0.5,
      nMmNv: 8,
      mode: vMmnv.WmMNN,
      vNnMm: 3840000,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -40,
        src: "img/day-ghoul2-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 40,
        src: "img/day-ghoul2-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-ghoul2.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/ghoul2-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-ghoul2-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 10,
      Nmm: 0,
      NnV: 38,
      WW: 160,
      mMw: [0.12, 0.23],
      nnmMv: [0.14, 0.26],
      nw: [[vM.vnm, 4, mW.vnm]],
      VVN: 1,
      Nmm: vVNnn,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [5, 15],
      NwW: 20,
      VWw: 960000,
      vV: 1500
    };
    vmN[nnn.VvNnN] = {
      mmMnN: 700,
      WwVWM: 550,
      VVVmM: 0.5,
      nMmNv: 16,
      mode: vMmnv.WmMNN,
      vNnMm: 4800000,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-ghoul1-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-ghoul1-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-ghoul1.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/ghoul1-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-ghoul1-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 14,
      Nmm: 0,
      NnV: 38,
      WW: 800,
      mMw: [0.11, 0.21],
      nnmMv: [0.14, 0.24],
      nw: [[vM.WMW, 4, mW.WMW], [vM.vvw, 12, mW.vvw]],
      VVN: 1,
      Nmm: 0,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [20, 50],
      NwW: 20,
      VWw: 1920000,
      vV: 5000
    };
    vmN[nnn.nmNWM] = {
      mmMnN: 700,
      WwVWM: 550,
      VVVmM: 0.5,
      nMmNv: 32,
      mode: vMmnv.WmMNN,
      vNnMm: 960000,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-ghoul5-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-ghoul5-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-ghoul5.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/ghoul5-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-ghoul5-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 0,
      Nmm: 0,
      NnV: 38,
      WW: 160,
      mMw: [0.04, 0.04],
      nw: [[vM.VNWmm, 4, mW.VNWmm]],
      VVN: 0,
      Nmm: 0,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [20, 30],
      NwW: 20,
      VWw: 960000,
      vV: 100
    };
    vmN[nnn.nmWVV] = {
      mmMnN: 700,
      WwVWM: 550,
      VVVmM: 0.5,
      nMmNv: 0,
      mode: vMmnv.VVVnm,
      vNnMm: 0,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 28,
        y: -50,
        src: "img/day-lapabot-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 28,
        y: 50,
        src: "img/day-lapabot-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-lapabot.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/lapabot-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-lapabot-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 0,
      Nmm: 0,
      NnV: 38,
      WW: 600,
      mMw: [0.08, 0.08],
      nw: [[vM.vvw, 4, mW.vvw]],
      VVN: 0,
      Nmm: 0,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [30, 30],
      NwW: 20,
      VWw: 960000,
      vV: 100
    };
    vmN[nnn.MWWww] = {
      mmMnN: 550,
      WwVWM: 400,
      VVVmM: 0.5,
      nMmNv: 0,
      mode: vMmnv.WmMNN,
      vNnMm: 0,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 8,
        y: -45,
        src: "img/day-hal-bot-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 8,
        y: 45,
        src: "img/day-hal-bot-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-hal-bot.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/hal-bot-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-hal-bot-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 0,
      Nmm: 0,
      NnV: 38,
      WW: 800,
      mMw: [0.12, 0.12],
      nw: [[vM.vvw, 4, mW.vvw]],
      VVN: 0,
      Nmm: 0,
      WVW: 0,
      WVMWn: 0,
      vWM: 0,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [30, 30],
      NwW: 20,
      VWw: 960000,
      vV: 500
    };
    vmN[nnn.wVnmM] = {
      mmMnN: 700,
      WwVWM: 550,
      VVVmM: 0.5,
      nMmNv: 0,
      mode: vMmnv.WmMNN,
      vNnMm: 0,
      Mw: Vw.NNn,
      NV: 0.05,
      WmmvM: 6,
      Vmm: {
        angle: 0,
        x: 18,
        y: -60,
        src: "img/day-tesla-bot-left-arm.png",
        m: {
          n: 0
        }
      },
      WWN: {
        angle: 0,
        x: 18,
        y: 60,
        src: "img/day-tesla-bot-right-arm.png",
        m: {
          n: 0
        }
      },
      head: {
        src: "img/day-tesla-bot.png",
        m: {
          n: 0
        }
      },
      MvW: {
        src: "img/tesla-bot-hurt.png",
        m: {
          n: 0
        }
      },
      VnV: {
        src: "img/day-tesla-bot-death.png",
        m: {
          n: 0
        }
      },
      wVN: 0,
      WMN: 0,
      Nmm: 0,
      NnV: 38,
      WW: 3000,
      mMw: [0.1, 0.1],
      nw: [[vM.WnV, 4, mW.WnV], [vM.WMW, 4, mW.WMW]],
      VVN: 0,
      Nmm: 0,
      WVW: 1,
      WVMWn: 100,
      vWM: 100,
      mnNVv: 40,
      WMWnW: 50,
      wmw: [80, 80],
      NwW: 40,
      VWw: 960000,
      vV: 3000
    };
    try {
      if (mww !== undefined) {
        mww.vM = vM;
        mww.wv = wv;
        mww.Nvw = Nvw;
        mww.mWM = mWM;
        mww.wWw = wWw;
        mww.mnn = mnn;
        mww.mW = mW;
        mww.mnW = mnW;
        mww.mWm = mWm;
        mww.Mn = Mn;
        mww.vn = vn;
        mww.mMV = mMV;
        mww.nwNvM = nwNvM;
        mww.vmN = vmN;
        mww.nnn = nnn;
        mww.WmN = WmN;
        for (var MMn = 0; MMn < 3; MMn++) {
          for (var Wv = 1; Wv < wWw[VM[126]]; Wv++) {
            var mV = wWw[Wv];
            var nmW = mV[VM[213]].nmW;
            if (nmW === undefined) {
              continue;
            }
            for (var mM = 0; mM < nmW[VM[126]]; mM++) {
              var MMv = wWw[nmW[mM][0]];
              if (mM === 0) {
                mV.vV = 0;
              }
              mV.vV += MMv.vV * nmW[mM][1];
              nmW[mM][2] = MMv.nw;
            }
            mV.vV = Math[VM[61]](mV.vV / 4);
          }
        }
        for (var Wv = 0; Wv < Nm[VM[126]]; Wv++) {
          var mV = Nm[Wv];
          var nmW = mV[VM[213]].nmW;
          if (nmW === undefined) {
            continue;
          }
          for (var mM = 0; mM < nmW[VM[126]]; mM++) {
            var MMv = wWw[nmW[mM][0]];
            if (mM === 0) {
              mV.vV = 0;
            }
            mV.vV += MMv.vV * nmW[mM][1];
            nmW[mM][2] = MMv.nw;
          }
          mV.vV = Math[VM[61]](mV.vV / 4);
        }
      }
    } catch (VWn) {
      for (var Wv = 0; Wv < nwWvn[VM[126]]; Wv++) {
        nwWvn[Wv].m = MW.Mvw(nwWvn[Wv][VM[58]], nwWvn[Wv].m);
      }
      mmvnw = JSON[VM[71]](JSON[VM[18]](wWw));
      nMvWm = JSON[VM[71]](JSON[VM[18]](wMV));
      nVNnW = JSON[VM[71]](JSON[VM[18]](mnn));
      nVVmm = JSON[VM[71]](JSON[VM[18]](nWw));
      mWMWV = JSON[VM[71]](JSON[VM[18]](mWm));
      WMVwm = JSON[VM[71]](JSON[VM[18]](WnnNn));
      vwNwn = JSON[VM[71]](JSON[VM[18]](vmN));
      function nwvMn(VvmNW, vnmvV, wVM, WvnNM) {
        for (var mMmWM in vnmvV) {
          var MmnVv = vnmvV[mMmWM];
          var WNM = VvmNW[mMmWM];
          if (WNM === undefined) {
            VvmNW[mMmWM] = MmnVv;
            continue;
          }
          if (typeof WNM === "object") {
            nwvMn(WNM, MmnVv, wVM, WvnNM);
          } else if (typeof WNM === "string") {
            VvmNW[mMmWM] = WNM[VM[107]](wVM, WvnNM);
          }
        }
      }
      ;
      ;
      nwvMn(mWMWV, mWm, "day", "night");
      nwvMn(mmvnw, wWw, "day", "night");
      nwvMn(nMvWm, wMV, "day", "night");
      nwvMn(nVNnW, mnn, "day", "night");
      nwvMn(nVVmm, nWw, "day", "night");
      nwvMn(WMVwm, WnnNn, "day", "night");
      nwvMn(vwNwn, vmN, "day", "night");
      function nWmNv(VvmNW) {
        for (var mMmWM in VvmNW) {
          var WNM = VvmNW[mMmWM];
          if (typeof WNM === "object" && WNM !== null) {
            if (WNM.wNn !== undefined) {
              var VNN = nWw[wWm].wWmWN[WNM.MvN];
              VNN.wNn = WNM.wNn;
              VNN.vwm = WNM.vwm;
              VNN.WmV = WNM.WmV;
              VNN = nVVmm[wWm].wWmWN[WNM.MvN];
              VNN.wNn = WNM.wNn;
              VNN.vwm = WNM.vwm;
              VNN.WmV = WNM.WmV;
            } else {
              nWmNv(WNM);
            }
          }
        }
      }
      ;
      ;
      nWmNv(wWw);
    }
    var nnN = function () {
      var NmNMv = [237225, 303931, 166687, 229213, 217292, 205860, 182041, 273065];
      var wmM = [];
      var vWVNM = Math[VM[61]](Math[VM[185]]() * NmNMv[VM[126]]);
      var WNMvN = 0;
      var vmwnv = 0;
      var wmMmn = 0;
      var MMNVM = 0.45;
      var mMMmV = 0;
      var wmMmN = 0;
      wN.nmv[VM[79]] = new wN.WVn("audio/end.mp3", 0, true);
      wN.nmv[VM[15]] = new wN.WVn("audio/title.mp3", 0, true);
      wN.nmv.WvMwv = new wN.WVn("audio/geiger.mp3", 0, true);
      wN.nmv.WnNNN = new wN.WVn("audio/ambient1.mp3", 0, true);
      wN.nmv.nvwwn = new wN.WVn("audio/ambient2.mp3", 0, true);
      wN.nmv.WvWwV = new wN.WVn("audio/ambient3.mp3", 0, true);
      wN.nmv.vnvMm = new wN.WVn("audio/ambient4.mp3", 0, true);
      wN.nmv.vWNMm = new wN.WVn("audio/ambient5.mp3", 0, true);
      wN.nmv.NwWwW = new wN.WVn("audio/ambient6.mp3", 0, true);
      wN.nmv.WvmvN = new wN.WVn("audio/ambient7.mp3", 0, true);
      wN.nmv.NvmNV = new wN.WVn("audio/ambient8.mp3", 0, true);
      wmM[VM[154]](wN.nmv.WnNNN);
      wmM[VM[154]](wN.nmv.nvwwn);
      wmM[VM[154]](wN.nmv.WvWwV);
      wmM[VM[154]](wN.nmv.vnvMm);
      wmM[VM[154]](wN.nmv.vWNMm);
      wmM[VM[154]](wN.nmv.NwWwW);
      wmM[VM[154]](wN.nmv.WvmvN);
      wmM[VM[154]](wN.nmv.NvmNV);
      wN.mn[VM[64]] = new wN.WVn("audio/open.mp3", 1, false, 1);
      wN.mn.vMV = new wN.WVn("audio/drag.mp3", 1, false, 1);
      wN.mn[VM[223]] = new wN.WVn("audio/play.mp3", 1, false, 1);
      wN.mn.VVvnV = new wN.WVn("audio/skill.mp3", 1, false, 1);
      wN.mn.nwV = new wN.WVn("audio/craft.mp3", 1, false, 1);
      wN.mn[VM[59]] = new wN.WVn("audio/button.mp3", 1, false, 1);
      wN.mn.mvnwm = new wN.WVn("audio/throwLoot.mp3", 1, false, 1);
      wN.mn.Vvmvm = new wN.WVn("audio/levelup.mp3", 1, false, 1);
      wN.mn.WVW = new wN.WVn("audio/explosion.mp3", 1, false, 1);
      wN.mn.wWvwm = new wN.WVn("audio/zipper-on.mp3", 0.7, false, 1);
      wN.mn.nVNvw = new wN.WVn("audio/zipper-off.mp3", 0.7, false, 1);
      wN.mn.WNwVW = [new wN.WVn("audio/eat-1s-0.mp3", 1, false, 1), new wN.WVn("audio/eat-1s-1.mp3", 1, false, 1), new wN.WVn("audio/eat-1s-2.mp3", 1, false, 1)];
      wN.mn.wmw = [];
      for (var Wv = 1; Wv < WNVnV[VM[126]]; Wv++) {
        wN.mn.wmw[Wv] = new wN.WVn(WNVnV[Wv], 1, false, 1);
      }
      wN.mn.NmW = [];
      var NMmnw = nWw[wWm].NMmnw;
      for (var Wv = 0; Wv < NMmnw[VM[126]]; Wv++) {
        var VV = NMmnw[Wv];
        if (VV.NmV === undefined) {
          wN.mn.NmW[Wv] = 0;
        } else if (typeof VV.NmV === "number") {
          wN.mn.NmW[Wv] = VV.NmV;
        } else {
          wN.mn.NmW[Wv] = [];
          for (var mM = 0; mM < VV.NmV[VM[126]]; mM++) {
            wN.mn.NmW[Wv][mM] = new wN.WVn(VV.NmV[mM], 1, false, 1);
          }
        }
      }
      if (wN[VM[29]].MVmwn === 1) {
        wN.Nvv(wmM[vWVNM]);
        wN.Nvv(wN.nmv[VM[15]]);
      }
      for (var Wv = 0; Wv < wN.mn.NmW[VM[126]]; Wv++) {
        var NmV = wN.mn.NmW[Wv];
        if (NmV === 1) {
          wN.mn.NmW[Wv] = wN.mn.WNwVW;
        }
      }
      if (wN[VM[29]].VvWwv === 1) {
        wN.Nvv(wN.mn[VM[64]]);
        wN.Nvv(wN.mn[VM[223]]);
        wN.Nvv(wN.mn.vMV);
        wN.Nvv(wN.mn.VVvnV);
        wN.Nvv(wN.mn.nwV);
        wN.Nvv(wN.mn[VM[59]]);
        wN.Nvv(wN.mn.Vvmvm);
        wN.Nvv(wN.mn.WVW);
        for (var Wv = 0; Wv < wN.mn.WNwVW[VM[126]]; Wv++) {
          wN.Nvv(wN.mn.WNwVW[Wv]);
        }
        for (var Wv = 1; Wv < wN.mn.wmw[VM[126]]; Wv++) {
          wN.Nvv(wN.mn.wmw[Wv]);
        }
        for (var Wv = 0; Wv < wN.mn.NmW[VM[126]]; Wv++) {
          var NmV = wN.mn.NmW[Wv];
          if (NmV !== 0) {
            for (var mM = 0; mM < NmV[VM[126]]; mM++) {
              wN.Nvv(NmV[mM]);
            }
          }
        }
      }
      function wVNNv() {
        wN.WmWnN(wN.nmv[VM[15]]);
        wN.WmWnN(wN.nmv[VM[79]]);
        for (var Wv = 0; Wv < wmM[VM[126]]; Wv++) {
          wN.WmWnN(wmM[Wv]);
        }
        if (wN[VM[29]].VvWwv === 1) {
          var mMVVv = wN[VM[29]].MVmwn;
          wN[VM[29]].MVmwn = 1;
          wN.WmWnN(wN.nmv.WvMwv);
          wN[VM[29]].MVmwn = mMVVv;
        }
        if (wmMmN !== nnN.WvMwv && vmwnv === 1) {
          if (mMMmV === 0) {
            mMMmV = 1000;
            var nMW = nnN.WvMwv - wmMmN;
            wN.wMmMm(wN.nmv.WvMwv, 250, nMW);
            wmMmN = nnN.WvMwv;
          }
          mMMmV = Math[VM[144]](0, mMMmV - nv);
        }
        if (WNMvN === 0 && vmwnv === 1) {
          wN.wMmMm(wmM[vWVNM], 5000, -MMNVM);
          vWVNM = (vWVNM + 1) % wmM[VM[126]];
          WNMvN = NmNMv[vWVNM] - 5000;
          wN.wMmMm(wmM[vWVNM], 5000, MMNVM);
        }
        WNMvN = Math[VM[144]](0, WNMvN - nv);
      }
      ;
      ;
      function vwWVw() {
        vmwnv = 0;
        wmMmn = 1;
        wN.wMmMm(wN.nmv.WvMwv, 250, -wmMmN);
        wmMmN = 0;
        nnN.WvMwv = 0;
        wN.wMmMm(wmM[vWVNM], 500, -MMNVM);
        wN.wMmMm(wN.nmv[VM[79]], 1000, nnN.MMNVM);
      }
      ;
      ;
      function wNnNw() {
        if (wmMmn === 0) {
          wN.wMmMm(wN.nmv[VM[15]], 500, -MMNVM);
        } else {
          wN.wMmMm(wN.nmv[VM[79]], 500, -MMNVM);
        }
      }
      ;
      ;
      function nmWVv() {
        vmwnv = 1;
        wNnNw();
        if (WNMvN === 0) {
          vWVNM = (vWVNM + 1) % wmM[VM[126]];
        }
        WNMvN = NmNMv[vWVNM] - 5000;
        wN.wMmMm(wmM[vWVNM], 5000, MMNVM);
      }
      ;
      ;
      return {
        nmWVv: nmWVv,
        vwWVw: vwWVw,
        wVNNv: wVNNv,
        wNnNw: wNnNw,
        MMNVM: MMNVM,
        WvMwv: 0
      };
    }();
    try {
      MWVWw;
    } catch (VWn) {
      MWVWw = undefined;
    }
    if (MWVWw === undefined) {
      Wm.aiptag = Wm.aiptag || {};
      Wm.aiptag.consented = true;
      Wm.aiptag.cmd = Wm.aiptag.cmd || [];
      Wm.aiptag.cmd.display = Wm.aiptag.cmd.display || [];
      Wm.aiptag.cmd.player = Wm.aiptag.cmd.player || [];
      function vMwWM() {
        adplayer = new aipPlayer({
          AD_WIDTH: 960,
          AD_HEIGHT: 540,
          AD_FULLSCREEN: true,
          AD_CENTERPLAYER: true,
          LOADING_TEXT: "loading advertisement",
          PREROLL_ELEM: function () {
            return document[VM[57]]("preroll");
          },
          AIP_COMPLETE: function (wwnnMwV) {
            vNm.WWv = 0;
            vNm.vvvVn = -1;
            vNm.wWvnM();
          },
          AIP_REMOVE: function () {}
        });
      }
      Wm.aiptag.cmd.player[VM[154]](vMwWM);
    }
    function WWmnM() {
      try {
        if (Wm[VM[14]] !== Wm[VM[63]]) {
          wWWWV = vmn[VM[174]]("inIframe");
          if (wWWWV === "1") {
            vmn[VM[62]]("inIframe", "0");
          } else {
            vmn[VM[62]]("inIframe", "1");
            location[VM[55]] = location[VM[55]] + "";
          }
        }
      } catch (VWn) {}
    }
    ;
    WWmnM();
    var Wmwvv = [30, 2104];
    try {
      MWVWw;
    } catch (VWn) {
      MWVWw = undefined;
    }
    nNV.nvM(600, 30000, 5000);
    NVm.nvM(30, 15000, 2000, 3, 60000, 10000, mWVMV, NwvWm, wvMnm);
    function VVwvm() {
      vVvMN = true && document[VM[57]]("nickname") !== null && document[VM[57]]("terms") !== null && document[VM[57]]("serverList") !== null && document[VM[57]]("changelog") !== null && document[VM[57]]("howtoplay") !== null && document[VM[57]]("featuredVideo") !== null && document[VM[57]]("trevda") !== null && document[VM[57]]("preroll") !== null && document[VM[57]]("footer") !== null && document[VM[57]]("chat") !== null;
      if (vVvMN === true) {
        mnm.nvM();
        vNm.nvM();
        VNw.nvM();
        nWwnv.nvM();
        wnNWw.nvM();
        vWnWM.nvM();
        MW.MMmwM(mnm, VwnMW, "can", "bod", 1280, undefined, true);
        mnm.nMn();
      } else {
        setTimeout(VVwvm, 100);
      }
    }
    ;
    ;
    Wm[VM[254]] = function () {
      if (NVm[VM[102]] & NVm.nNN.NvWwM) {
        return "Are you sure you want quit?";
      }
    };
    VVwvm();
